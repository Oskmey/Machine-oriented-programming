
Debug/@@@@THE_LAB@@@@:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:
#include "SYSTICK.h"
#include "AsciiDisplayDriver.h"
__attribute__((naked)) __attribute__((section (".start_section")) )
void startup ( void )
{
__asm__ volatile(" LDR R0,=0x2001C000\n");		/* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
__asm__ volatile(" BL main\n");					/* call main */
20000004:	f000 feae 	bl	20000d64 <main>
__asm__ volatile(".L1: B .L1\n");				/* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <draw_object>:
#include "AsciiDisplayDriver.h"



void draw_object(POBJECT o)
{
20000010:	b590      	push	{r4, r7, lr}
20000012:	b08d      	sub	sp, #52	; 0x34
20000014:	af00      	add	r7, sp, #0
20000016:	6078      	str	r0, [r7, #4]
	PGEOMETRY geo = o->geo;
20000018:	687b      	ldr	r3, [r7, #4]
2000001a:	681b      	ldr	r3, [r3, #0]
2000001c:	62bb      	str	r3, [r7, #40]	; 0x28
	POINT *point_list = geo->px;
2000001e:	6abb      	ldr	r3, [r7, #40]	; 0x28
20000020:	330c      	adds	r3, #12
20000022:	627b      	str	r3, [r7, #36]	; 0x24
	int pixels = geo->numpoints;
20000024:	6abb      	ldr	r3, [r7, #40]	; 0x28
20000026:	681b      	ldr	r3, [r3, #0]
20000028:	623b      	str	r3, [r7, #32]
	int x = o->posx;
2000002a:	687b      	ldr	r3, [r7, #4]
2000002c:	68db      	ldr	r3, [r3, #12]
2000002e:	61fb      	str	r3, [r7, #28]
	if( x > 50000){ //Codlite tycker om att ge skit stora värden!!! randomly så stacken går sönder?
20000030:	69fb      	ldr	r3, [r7, #28]
20000032:	4a1d      	ldr	r2, [pc, #116]	; (200000a8 <draw_object+0x98>)
20000034:	4293      	cmp	r3, r2
20000036:	dd05      	ble.n	20000044 <draw_object+0x34>
		o -> posx = 2;
20000038:	687b      	ldr	r3, [r7, #4]
2000003a:	2202      	movs	r2, #2
2000003c:	60da      	str	r2, [r3, #12]
		o -> posy = 64-9;
2000003e:	687b      	ldr	r3, [r7, #4]
20000040:	2237      	movs	r2, #55	; 0x37
20000042:	611a      	str	r2, [r3, #16]
	}
	int y = o->posy;
20000044:	687b      	ldr	r3, [r7, #4]
20000046:	691b      	ldr	r3, [r3, #16]
20000048:	61bb      	str	r3, [r7, #24]
	for(int i = 0; i < pixels; i++){
2000004a:	2300      	movs	r3, #0
2000004c:	62fb      	str	r3, [r7, #44]	; 0x2c
2000004e:	e021      	b.n	20000094 <draw_object+0x84>
		POINT pixel = point_list[i];
20000050:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000052:	005b      	lsls	r3, r3, #1
20000054:	6a7a      	ldr	r2, [r7, #36]	; 0x24
20000056:	18d3      	adds	r3, r2, r3
20000058:	240c      	movs	r4, #12
2000005a:	193a      	adds	r2, r7, r4
2000005c:	0010      	movs	r0, r2
2000005e:	0019      	movs	r1, r3
20000060:	2302      	movs	r3, #2
20000062:	001a      	movs	r2, r3
20000064:	f000 fec6 	bl	20000df4 <memcpy>
		int new_x = x + pixel.x;
20000068:	0021      	movs	r1, r4
2000006a:	187b      	adds	r3, r7, r1
2000006c:	781b      	ldrb	r3, [r3, #0]
2000006e:	001a      	movs	r2, r3
20000070:	69fb      	ldr	r3, [r7, #28]
20000072:	189b      	adds	r3, r3, r2
20000074:	617b      	str	r3, [r7, #20]
		int new_y = y + pixel.y;
20000076:	187b      	adds	r3, r7, r1
20000078:	785b      	ldrb	r3, [r3, #1]
2000007a:	001a      	movs	r2, r3
2000007c:	69bb      	ldr	r3, [r7, #24]
2000007e:	189b      	adds	r3, r3, r2
20000080:	613b      	str	r3, [r7, #16]
		graphic_pixel_set(new_x, new_y);
20000082:	693a      	ldr	r2, [r7, #16]
20000084:	697b      	ldr	r3, [r7, #20]
20000086:	0011      	movs	r1, r2
20000088:	0018      	movs	r0, r3
2000008a:	f000 fd10 	bl	20000aae <graphic_pixel_set>
	for(int i = 0; i < pixels; i++){
2000008e:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000090:	3301      	adds	r3, #1
20000092:	62fb      	str	r3, [r7, #44]	; 0x2c
20000094:	6afa      	ldr	r2, [r7, #44]	; 0x2c
20000096:	6a3b      	ldr	r3, [r7, #32]
20000098:	429a      	cmp	r2, r3
2000009a:	dbd9      	blt.n	20000050 <draw_object+0x40>
	}
}
2000009c:	46c0      	nop			; (mov r8, r8)
2000009e:	46c0      	nop			; (mov r8, r8)
200000a0:	46bd      	mov	sp, r7
200000a2:	b00d      	add	sp, #52	; 0x34
200000a4:	bd90      	pop	{r4, r7, pc}
200000a6:	46c0      	nop			; (mov r8, r8)
200000a8:	0000c350 	andeq	ip, r0, r0, asr r3

200000ac <clear_object>:

void clear_object(POBJECT o)
{
200000ac:	b590      	push	{r4, r7, lr}
200000ae:	b08d      	sub	sp, #52	; 0x34
200000b0:	af00      	add	r7, sp, #0
200000b2:	6078      	str	r0, [r7, #4]
	PGEOMETRY geo = o->geo;
200000b4:	687b      	ldr	r3, [r7, #4]
200000b6:	681b      	ldr	r3, [r3, #0]
200000b8:	62bb      	str	r3, [r7, #40]	; 0x28
	POINT *point_list = geo->px;
200000ba:	6abb      	ldr	r3, [r7, #40]	; 0x28
200000bc:	330c      	adds	r3, #12
200000be:	627b      	str	r3, [r7, #36]	; 0x24
	int pixels = geo->numpoints;
200000c0:	6abb      	ldr	r3, [r7, #40]	; 0x28
200000c2:	681b      	ldr	r3, [r3, #0]
200000c4:	623b      	str	r3, [r7, #32]
	int x = o->posx;
200000c6:	687b      	ldr	r3, [r7, #4]
200000c8:	68db      	ldr	r3, [r3, #12]
200000ca:	61fb      	str	r3, [r7, #28]
	int y = o->posy;
200000cc:	687b      	ldr	r3, [r7, #4]
200000ce:	691b      	ldr	r3, [r3, #16]
200000d0:	61bb      	str	r3, [r7, #24]
	for(int i = 0; i < pixels; i++){
200000d2:	2300      	movs	r3, #0
200000d4:	62fb      	str	r3, [r7, #44]	; 0x2c
200000d6:	e021      	b.n	2000011c <clear_object+0x70>
		POINT pixel = point_list[i];
200000d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
200000da:	005b      	lsls	r3, r3, #1
200000dc:	6a7a      	ldr	r2, [r7, #36]	; 0x24
200000de:	18d3      	adds	r3, r2, r3
200000e0:	240c      	movs	r4, #12
200000e2:	193a      	adds	r2, r7, r4
200000e4:	0010      	movs	r0, r2
200000e6:	0019      	movs	r1, r3
200000e8:	2302      	movs	r3, #2
200000ea:	001a      	movs	r2, r3
200000ec:	f000 fe82 	bl	20000df4 <memcpy>
		int new_x = x + pixel.x;
200000f0:	0021      	movs	r1, r4
200000f2:	187b      	adds	r3, r7, r1
200000f4:	781b      	ldrb	r3, [r3, #0]
200000f6:	001a      	movs	r2, r3
200000f8:	69fb      	ldr	r3, [r7, #28]
200000fa:	189b      	adds	r3, r3, r2
200000fc:	617b      	str	r3, [r7, #20]
		int new_y = y + pixel.y;
200000fe:	187b      	adds	r3, r7, r1
20000100:	785b      	ldrb	r3, [r3, #1]
20000102:	001a      	movs	r2, r3
20000104:	69bb      	ldr	r3, [r7, #24]
20000106:	189b      	adds	r3, r3, r2
20000108:	613b      	str	r3, [r7, #16]
		graphic_pixel_clear(new_x, new_y);
2000010a:	693a      	ldr	r2, [r7, #16]
2000010c:	697b      	ldr	r3, [r7, #20]
2000010e:	0011      	movs	r1, r2
20000110:	0018      	movs	r0, r3
20000112:	f000 fcd2 	bl	20000aba <graphic_pixel_clear>
	for(int i = 0; i < pixels; i++){
20000116:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000118:	3301      	adds	r3, #1
2000011a:	62fb      	str	r3, [r7, #44]	; 0x2c
2000011c:	6afa      	ldr	r2, [r7, #44]	; 0x2c
2000011e:	6a3b      	ldr	r3, [r7, #32]
20000120:	429a      	cmp	r2, r3
20000122:	dbd9      	blt.n	200000d8 <clear_object+0x2c>
	}
}
20000124:	46c0      	nop			; (mov r8, r8)
20000126:	46c0      	nop			; (mov r8, r8)
20000128:	46bd      	mov	sp, r7
2000012a:	b00d      	add	sp, #52	; 0x34
2000012c:	bd90      	pop	{r4, r7, pc}

2000012e <move_paddelobject>:


void move_paddelobject (POBJECT o){
2000012e:	b580      	push	{r7, lr}
20000130:	b086      	sub	sp, #24
20000132:	af00      	add	r7, sp, #0
20000134:	6078      	str	r0, [r7, #4]
	clear_object(o);
20000136:	687b      	ldr	r3, [r7, #4]
20000138:	0018      	movs	r0, r3
2000013a:	f7ff ffb7 	bl	200000ac <clear_object>
	int dx = o -> dirx;
2000013e:	687b      	ldr	r3, [r7, #4]
20000140:	685b      	ldr	r3, [r3, #4]
20000142:	617b      	str	r3, [r7, #20]
	int dy = o -> diry;
20000144:	687b      	ldr	r3, [r7, #4]
20000146:	689b      	ldr	r3, [r3, #8]
20000148:	613b      	str	r3, [r7, #16]
	int x = o -> posx;
2000014a:	687b      	ldr	r3, [r7, #4]
2000014c:	68db      	ldr	r3, [r3, #12]
2000014e:	60fb      	str	r3, [r7, #12]
	int y = o -> posy;
20000150:	687b      	ldr	r3, [r7, #4]
20000152:	691b      	ldr	r3, [r3, #16]
20000154:	60bb      	str	r3, [r7, #8]
	o -> posx = x + (o->dirx);
20000156:	687b      	ldr	r3, [r7, #4]
20000158:	685a      	ldr	r2, [r3, #4]
2000015a:	68fb      	ldr	r3, [r7, #12]
2000015c:	18d2      	adds	r2, r2, r3
2000015e:	687b      	ldr	r3, [r7, #4]
20000160:	60da      	str	r2, [r3, #12]
	o -> posy = y + (o->diry);
20000162:	687b      	ldr	r3, [r7, #4]
20000164:	689a      	ldr	r2, [r3, #8]
20000166:	68bb      	ldr	r3, [r7, #8]
20000168:	18d2      	adds	r2, r2, r3
2000016a:	687b      	ldr	r3, [r7, #4]
2000016c:	611a      	str	r2, [r3, #16]
	if(o->posy < 1){
2000016e:	687b      	ldr	r3, [r7, #4]
20000170:	691b      	ldr	r3, [r3, #16]
20000172:	2b00      	cmp	r3, #0
20000174:	dc05      	bgt.n	20000182 <move_paddelobject+0x54>
		o->diry = 0;
20000176:	687b      	ldr	r3, [r7, #4]
20000178:	2200      	movs	r2, #0
2000017a:	609a      	str	r2, [r3, #8]
		o->posy = 1;
2000017c:	687b      	ldr	r3, [r7, #4]
2000017e:	2201      	movs	r2, #1
20000180:	611a      	str	r2, [r3, #16]
	}
	if(o->posy > (64-9)){
20000182:	687b      	ldr	r3, [r7, #4]
20000184:	691b      	ldr	r3, [r3, #16]
20000186:	2b37      	cmp	r3, #55	; 0x37
20000188:	dd05      	ble.n	20000196 <move_paddelobject+0x68>
		o->diry = 0;
2000018a:	687b      	ldr	r3, [r7, #4]
2000018c:	2200      	movs	r2, #0
2000018e:	609a      	str	r2, [r3, #8]
		o->posy = 64-9;
20000190:	687b      	ldr	r3, [r7, #4]
20000192:	2237      	movs	r2, #55	; 0x37
20000194:	611a      	str	r2, [r3, #16]
	}
	draw_object(o);
20000196:	687b      	ldr	r3, [r7, #4]
20000198:	0018      	movs	r0, r3
2000019a:	f7ff ff39 	bl	20000010 <draw_object>
}
2000019e:	46c0      	nop			; (mov r8, r8)
200001a0:	46bd      	mov	sp, r7
200001a2:	b006      	add	sp, #24
200001a4:	bd80      	pop	{r7, pc}

200001a6 <set_object_speed>:

void set_object_speed(POBJECT o, int speedx, int speedy){
200001a6:	b580      	push	{r7, lr}
200001a8:	b086      	sub	sp, #24
200001aa:	af00      	add	r7, sp, #0
200001ac:	60f8      	str	r0, [r7, #12]
200001ae:	60b9      	str	r1, [r7, #8]
200001b0:	607a      	str	r2, [r7, #4]
	int c = speedy;
200001b2:	687b      	ldr	r3, [r7, #4]
200001b4:	617b      	str	r3, [r7, #20]
	o->dirx = speedx;
200001b6:	68fb      	ldr	r3, [r7, #12]
200001b8:	68ba      	ldr	r2, [r7, #8]
200001ba:	605a      	str	r2, [r3, #4]
	o->diry = speedy;
200001bc:	68fb      	ldr	r3, [r7, #12]
200001be:	687a      	ldr	r2, [r7, #4]
200001c0:	609a      	str	r2, [r3, #8]
}
200001c2:	46c0      	nop			; (mov r8, r8)
200001c4:	46bd      	mov	sp, r7
200001c6:	b006      	add	sp, #24
200001c8:	bd80      	pop	{r7, pc}

200001ca <move_ballobject>:




void move_ballobject (POBJECT o){
200001ca:	b580      	push	{r7, lr}
200001cc:	b086      	sub	sp, #24
200001ce:	af00      	add	r7, sp, #0
200001d0:	6078      	str	r0, [r7, #4]
	clear_object(o);
200001d2:	687b      	ldr	r3, [r7, #4]
200001d4:	0018      	movs	r0, r3
200001d6:	f7ff ff69 	bl	200000ac <clear_object>
	int x = o->posx;
200001da:	687b      	ldr	r3, [r7, #4]
200001dc:	68db      	ldr	r3, [r3, #12]
200001de:	617b      	str	r3, [r7, #20]
	int y = o->posy;
200001e0:	687b      	ldr	r3, [r7, #4]
200001e2:	691b      	ldr	r3, [r3, #16]
200001e4:	613b      	str	r3, [r7, #16]
	o -> posx = x + (o->dirx);
200001e6:	687b      	ldr	r3, [r7, #4]
200001e8:	685a      	ldr	r2, [r3, #4]
200001ea:	697b      	ldr	r3, [r7, #20]
200001ec:	18d2      	adds	r2, r2, r3
200001ee:	687b      	ldr	r3, [r7, #4]
200001f0:	60da      	str	r2, [r3, #12]
	o -> posy = y + (o->diry);
200001f2:	687b      	ldr	r3, [r7, #4]
200001f4:	689a      	ldr	r2, [r3, #8]
200001f6:	693b      	ldr	r3, [r7, #16]
200001f8:	18d2      	adds	r2, r2, r3
200001fa:	687b      	ldr	r3, [r7, #4]
200001fc:	611a      	str	r2, [r3, #16]
	int c= 65 - (o -> geo -> sizex);
200001fe:	687b      	ldr	r3, [r7, #4]
20000200:	681b      	ldr	r3, [r3, #0]
20000202:	685b      	ldr	r3, [r3, #4]
20000204:	2241      	movs	r2, #65	; 0x41
20000206:	1ad3      	subs	r3, r2, r3
20000208:	60fb      	str	r3, [r7, #12]
	if( o->posx < 1){
2000020a:	687b      	ldr	r3, [r7, #4]
2000020c:	68db      	ldr	r3, [r3, #12]
2000020e:	2b00      	cmp	r3, #0
20000210:	dc08      	bgt.n	20000224 <move_ballobject+0x5a>
		SCORE1 += 0x01;
20000212:	4b18      	ldr	r3, [pc, #96]	; (20000274 <move_ballobject+0xaa>)
20000214:	781b      	ldrb	r3, [r3, #0]
20000216:	3301      	adds	r3, #1
20000218:	b2da      	uxtb	r2, r3
2000021a:	4b16      	ldr	r3, [pc, #88]	; (20000274 <move_ballobject+0xaa>)
2000021c:	701a      	strb	r2, [r3, #0]
		GOAL = 1;
2000021e:	4b16      	ldr	r3, [pc, #88]	; (20000278 <move_ballobject+0xae>)
20000220:	2201      	movs	r2, #1
20000222:	701a      	strb	r2, [r3, #0]
	}
	if( o ->posx > 120){
20000224:	687b      	ldr	r3, [r7, #4]
20000226:	68db      	ldr	r3, [r3, #12]
20000228:	2b78      	cmp	r3, #120	; 0x78
2000022a:	dd08      	ble.n	2000023e <move_ballobject+0x74>
		SCORE2 += 0x01;
2000022c:	4b13      	ldr	r3, [pc, #76]	; (2000027c <move_ballobject+0xb2>)
2000022e:	781b      	ldrb	r3, [r3, #0]
20000230:	3301      	adds	r3, #1
20000232:	b2da      	uxtb	r2, r3
20000234:	4b11      	ldr	r3, [pc, #68]	; (2000027c <move_ballobject+0xb2>)
20000236:	701a      	strb	r2, [r3, #0]
		GOAL = 1;
20000238:	4b0f      	ldr	r3, [pc, #60]	; (20000278 <move_ballobject+0xae>)
2000023a:	2201      	movs	r2, #1
2000023c:	701a      	strb	r2, [r3, #0]
	}
	if(o->posy < 1){
2000023e:	687b      	ldr	r3, [r7, #4]
20000240:	691b      	ldr	r3, [r3, #16]
20000242:	2b00      	cmp	r3, #0
20000244:	dc04      	bgt.n	20000250 <move_ballobject+0x86>
		o->diry = (- o->diry);
20000246:	687b      	ldr	r3, [r7, #4]
20000248:	689b      	ldr	r3, [r3, #8]
2000024a:	425a      	negs	r2, r3
2000024c:	687b      	ldr	r3, [r7, #4]
2000024e:	609a      	str	r2, [r3, #8]
	}
	if(o->posy > 60){
20000250:	687b      	ldr	r3, [r7, #4]
20000252:	691b      	ldr	r3, [r3, #16]
20000254:	2b3c      	cmp	r3, #60	; 0x3c
20000256:	dd04      	ble.n	20000262 <move_ballobject+0x98>
		o->diry = (- o->diry);
20000258:	687b      	ldr	r3, [r7, #4]
2000025a:	689b      	ldr	r3, [r3, #8]
2000025c:	425a      	negs	r2, r3
2000025e:	687b      	ldr	r3, [r7, #4]
20000260:	609a      	str	r2, [r3, #8]
	}
	draw_object(o);
20000262:	687b      	ldr	r3, [r7, #4]
20000264:	0018      	movs	r0, r3
20000266:	f7ff fed3 	bl	20000010 <draw_object>
}
2000026a:	46c0      	nop			; (mov r8, r8)
2000026c:	46bd      	mov	sp, r7
2000026e:	b006      	add	sp, #24
20000270:	bd80      	pop	{r7, pc}
20000272:	46c0      	nop			; (mov r8, r8)
20000274:	20000e0a 	andcs	r0, r0, sl, lsl #28
20000278:	20000e10 	andcs	r0, r0, r0, lsl lr
2000027c:	20000e0b 	andcs	r0, r0, fp, lsl #28

20000280 <cross_points>:

int cross_points(POINT point, POINT upper_left, POINT bottom_right)
{
20000280:	b590      	push	{r4, r7, lr}
20000282:	b085      	sub	sp, #20
20000284:	af00      	add	r7, sp, #0
20000286:	240c      	movs	r4, #12
20000288:	193b      	adds	r3, r7, r4
2000028a:	8018      	strh	r0, [r3, #0]
2000028c:	2008      	movs	r0, #8
2000028e:	183b      	adds	r3, r7, r0
20000290:	8019      	strh	r1, [r3, #0]
20000292:	1d3b      	adds	r3, r7, #4
20000294:	801a      	strh	r2, [r3, #0]
    if (point.x <= bottom_right.x && point.x >= upper_left.x){
20000296:	0021      	movs	r1, r4
20000298:	187b      	adds	r3, r7, r1
2000029a:	781a      	ldrb	r2, [r3, #0]
2000029c:	1d3b      	adds	r3, r7, #4
2000029e:	781b      	ldrb	r3, [r3, #0]
200002a0:	429a      	cmp	r2, r3
200002a2:	d813      	bhi.n	200002cc <cross_points+0x4c>
200002a4:	187b      	adds	r3, r7, r1
200002a6:	781a      	ldrb	r2, [r3, #0]
200002a8:	183b      	adds	r3, r7, r0
200002aa:	781b      	ldrb	r3, [r3, #0]
200002ac:	429a      	cmp	r2, r3
200002ae:	d30d      	bcc.n	200002cc <cross_points+0x4c>
        if (point.y <= bottom_right.y && point.y >= upper_left.y){
200002b0:	187b      	adds	r3, r7, r1
200002b2:	785a      	ldrb	r2, [r3, #1]
200002b4:	1d3b      	adds	r3, r7, #4
200002b6:	785b      	ldrb	r3, [r3, #1]
200002b8:	429a      	cmp	r2, r3
200002ba:	d807      	bhi.n	200002cc <cross_points+0x4c>
200002bc:	187b      	adds	r3, r7, r1
200002be:	785a      	ldrb	r2, [r3, #1]
200002c0:	183b      	adds	r3, r7, r0
200002c2:	785b      	ldrb	r3, [r3, #1]
200002c4:	429a      	cmp	r2, r3
200002c6:	d301      	bcc.n	200002cc <cross_points+0x4c>
            return 1;
200002c8:	2301      	movs	r3, #1
200002ca:	e000      	b.n	200002ce <cross_points+0x4e>
        }
    }

    return 0;
200002cc:	2300      	movs	r3, #0
}
200002ce:	0018      	movs	r0, r3
200002d0:	46bd      	mov	sp, r7
200002d2:	b005      	add	sp, #20
200002d4:	bd90      	pop	{r4, r7, pc}

200002d6 <pixel_overlap>:

int pixel_overlap(POBJECT o1, POBJECT o2)
{
200002d6:	b5b0      	push	{r4, r5, r7, lr}
200002d8:	b08a      	sub	sp, #40	; 0x28
200002da:	af00      	add	r7, sp, #0
200002dc:	6078      	str	r0, [r7, #4]
200002de:	6039      	str	r1, [r7, #0]
    POINT o1_upper_left = { o1->posx, o1->posy};
200002e0:	687b      	ldr	r3, [r7, #4]
200002e2:	68db      	ldr	r3, [r3, #12]
200002e4:	b2da      	uxtb	r2, r3
200002e6:	2124      	movs	r1, #36	; 0x24
200002e8:	187b      	adds	r3, r7, r1
200002ea:	701a      	strb	r2, [r3, #0]
200002ec:	687b      	ldr	r3, [r7, #4]
200002ee:	691b      	ldr	r3, [r3, #16]
200002f0:	b2da      	uxtb	r2, r3
200002f2:	187b      	adds	r3, r7, r1
200002f4:	705a      	strb	r2, [r3, #1]
    POINT o1_bottom_right = { o1->posx + o1->geo->sizex, o1->posy + o1->geo->sizey}; // Ser mellan två cross points. behövde se på en video
200002f6:	687b      	ldr	r3, [r7, #4]
200002f8:	68db      	ldr	r3, [r3, #12]
200002fa:	b2da      	uxtb	r2, r3
200002fc:	687b      	ldr	r3, [r7, #4]
200002fe:	681b      	ldr	r3, [r3, #0]
20000300:	685b      	ldr	r3, [r3, #4]
20000302:	b2db      	uxtb	r3, r3
20000304:	18d3      	adds	r3, r2, r3
20000306:	b2da      	uxtb	r2, r3
20000308:	2020      	movs	r0, #32
2000030a:	183b      	adds	r3, r7, r0
2000030c:	701a      	strb	r2, [r3, #0]
2000030e:	687b      	ldr	r3, [r7, #4]
20000310:	691b      	ldr	r3, [r3, #16]
20000312:	b2da      	uxtb	r2, r3
20000314:	687b      	ldr	r3, [r7, #4]
20000316:	681b      	ldr	r3, [r3, #0]
20000318:	689b      	ldr	r3, [r3, #8]
2000031a:	b2db      	uxtb	r3, r3
2000031c:	18d3      	adds	r3, r2, r3
2000031e:	b2da      	uxtb	r2, r3
20000320:	183b      	adds	r3, r7, r0
20000322:	705a      	strb	r2, [r3, #1]
	
	POINT o1_bottom_left = { o1->posx, o1->posy + o1->geo->sizey};
20000324:	687b      	ldr	r3, [r7, #4]
20000326:	68db      	ldr	r3, [r3, #12]
20000328:	b2da      	uxtb	r2, r3
2000032a:	241c      	movs	r4, #28
2000032c:	193b      	adds	r3, r7, r4
2000032e:	701a      	strb	r2, [r3, #0]
20000330:	687b      	ldr	r3, [r7, #4]
20000332:	691b      	ldr	r3, [r3, #16]
20000334:	b2da      	uxtb	r2, r3
20000336:	687b      	ldr	r3, [r7, #4]
20000338:	681b      	ldr	r3, [r3, #0]
2000033a:	689b      	ldr	r3, [r3, #8]
2000033c:	b2db      	uxtb	r3, r3
2000033e:	18d3      	adds	r3, r2, r3
20000340:	b2da      	uxtb	r2, r3
20000342:	193b      	adds	r3, r7, r4
20000344:	705a      	strb	r2, [r3, #1]
    POINT o1_upper_right = { o1->posx + o1->geo->sizex, o1->posy};
20000346:	687b      	ldr	r3, [r7, #4]
20000348:	68db      	ldr	r3, [r3, #12]
2000034a:	b2da      	uxtb	r2, r3
2000034c:	687b      	ldr	r3, [r7, #4]
2000034e:	681b      	ldr	r3, [r3, #0]
20000350:	685b      	ldr	r3, [r3, #4]
20000352:	b2db      	uxtb	r3, r3
20000354:	18d3      	adds	r3, r2, r3
20000356:	b2da      	uxtb	r2, r3
20000358:	2418      	movs	r4, #24
2000035a:	193b      	adds	r3, r7, r4
2000035c:	701a      	strb	r2, [r3, #0]
2000035e:	687b      	ldr	r3, [r7, #4]
20000360:	691b      	ldr	r3, [r3, #16]
20000362:	b2da      	uxtb	r2, r3
20000364:	193b      	adds	r3, r7, r4
20000366:	705a      	strb	r2, [r3, #1]
	
    POINT o2_upper_left = { o2->posx, o2->posy};
20000368:	683b      	ldr	r3, [r7, #0]
2000036a:	68db      	ldr	r3, [r3, #12]
2000036c:	b2da      	uxtb	r2, r3
2000036e:	2414      	movs	r4, #20
20000370:	193b      	adds	r3, r7, r4
20000372:	701a      	strb	r2, [r3, #0]
20000374:	683b      	ldr	r3, [r7, #0]
20000376:	691b      	ldr	r3, [r3, #16]
20000378:	b2da      	uxtb	r2, r3
2000037a:	193b      	adds	r3, r7, r4
2000037c:	705a      	strb	r2, [r3, #1]
    POINT o2_upper_right = { o2->posx + o2->geo->sizex, o2->posy};
2000037e:	683b      	ldr	r3, [r7, #0]
20000380:	68db      	ldr	r3, [r3, #12]
20000382:	b2da      	uxtb	r2, r3
20000384:	683b      	ldr	r3, [r7, #0]
20000386:	681b      	ldr	r3, [r3, #0]
20000388:	685b      	ldr	r3, [r3, #4]
2000038a:	b2db      	uxtb	r3, r3
2000038c:	18d3      	adds	r3, r2, r3
2000038e:	b2da      	uxtb	r2, r3
20000390:	2510      	movs	r5, #16
20000392:	197b      	adds	r3, r7, r5
20000394:	701a      	strb	r2, [r3, #0]
20000396:	683b      	ldr	r3, [r7, #0]
20000398:	691b      	ldr	r3, [r3, #16]
2000039a:	b2da      	uxtb	r2, r3
2000039c:	197b      	adds	r3, r7, r5
2000039e:	705a      	strb	r2, [r3, #1]
    POINT o2_bottom_left = { o2->posx, o2->posy + o2->geo->sizey};
200003a0:	683b      	ldr	r3, [r7, #0]
200003a2:	68db      	ldr	r3, [r3, #12]
200003a4:	b2da      	uxtb	r2, r3
200003a6:	250c      	movs	r5, #12
200003a8:	197b      	adds	r3, r7, r5
200003aa:	701a      	strb	r2, [r3, #0]
200003ac:	683b      	ldr	r3, [r7, #0]
200003ae:	691b      	ldr	r3, [r3, #16]
200003b0:	b2da      	uxtb	r2, r3
200003b2:	683b      	ldr	r3, [r7, #0]
200003b4:	681b      	ldr	r3, [r3, #0]
200003b6:	689b      	ldr	r3, [r3, #8]
200003b8:	b2db      	uxtb	r3, r3
200003ba:	18d3      	adds	r3, r2, r3
200003bc:	b2da      	uxtb	r2, r3
200003be:	197b      	adds	r3, r7, r5
200003c0:	705a      	strb	r2, [r3, #1]
    POINT o2_bottom_right = { o2->posx + o2->geo->sizex, o2->posy + o2->geo->sizey};
200003c2:	683b      	ldr	r3, [r7, #0]
200003c4:	68db      	ldr	r3, [r3, #12]
200003c6:	b2da      	uxtb	r2, r3
200003c8:	683b      	ldr	r3, [r7, #0]
200003ca:	681b      	ldr	r3, [r3, #0]
200003cc:	685b      	ldr	r3, [r3, #4]
200003ce:	b2db      	uxtb	r3, r3
200003d0:	18d3      	adds	r3, r2, r3
200003d2:	b2da      	uxtb	r2, r3
200003d4:	2508      	movs	r5, #8
200003d6:	197b      	adds	r3, r7, r5
200003d8:	701a      	strb	r2, [r3, #0]
200003da:	683b      	ldr	r3, [r7, #0]
200003dc:	691b      	ldr	r3, [r3, #16]
200003de:	b2da      	uxtb	r2, r3
200003e0:	683b      	ldr	r3, [r7, #0]
200003e2:	681b      	ldr	r3, [r3, #0]
200003e4:	689b      	ldr	r3, [r3, #8]
200003e6:	b2db      	uxtb	r3, r3
200003e8:	18d3      	adds	r3, r2, r3
200003ea:	b2da      	uxtb	r2, r3
200003ec:	197b      	adds	r3, r7, r5
200003ee:	705a      	strb	r2, [r3, #1]

    if (cross_points(o2_upper_left, o1_upper_left, o1_bottom_right)){
200003f0:	183a      	adds	r2, r7, r0
200003f2:	1879      	adds	r1, r7, r1
200003f4:	193b      	adds	r3, r7, r4
200003f6:	6812      	ldr	r2, [r2, #0]
200003f8:	6809      	ldr	r1, [r1, #0]
200003fa:	6818      	ldr	r0, [r3, #0]
200003fc:	f7ff ff40 	bl	20000280 <cross_points>
20000400:	1e03      	subs	r3, r0, #0
20000402:	d001      	beq.n	20000408 <pixel_overlap+0x132>
        return 1;
20000404:	2301      	movs	r3, #1
20000406:	e03c      	b.n	20000482 <pixel_overlap+0x1ac>
    }

    if (cross_points(o2_upper_right, o1_upper_left, o1_bottom_right)){
20000408:	2320      	movs	r3, #32
2000040a:	18fa      	adds	r2, r7, r3
2000040c:	2324      	movs	r3, #36	; 0x24
2000040e:	18f9      	adds	r1, r7, r3
20000410:	2310      	movs	r3, #16
20000412:	18fb      	adds	r3, r7, r3
20000414:	6812      	ldr	r2, [r2, #0]
20000416:	6809      	ldr	r1, [r1, #0]
20000418:	6818      	ldr	r0, [r3, #0]
2000041a:	f7ff ff31 	bl	20000280 <cross_points>
2000041e:	1e03      	subs	r3, r0, #0
20000420:	d001      	beq.n	20000426 <pixel_overlap+0x150>
        return 1;
20000422:	2301      	movs	r3, #1
20000424:	e02d      	b.n	20000482 <pixel_overlap+0x1ac>
    }

    if (cross_points(o2_bottom_left, o1_upper_left, o1_bottom_right)){
20000426:	2320      	movs	r3, #32
20000428:	18fa      	adds	r2, r7, r3
2000042a:	2324      	movs	r3, #36	; 0x24
2000042c:	18f9      	adds	r1, r7, r3
2000042e:	230c      	movs	r3, #12
20000430:	18fb      	adds	r3, r7, r3
20000432:	6812      	ldr	r2, [r2, #0]
20000434:	6809      	ldr	r1, [r1, #0]
20000436:	6818      	ldr	r0, [r3, #0]
20000438:	f7ff ff22 	bl	20000280 <cross_points>
2000043c:	1e03      	subs	r3, r0, #0
2000043e:	d001      	beq.n	20000444 <pixel_overlap+0x16e>
        return 1;
20000440:	2301      	movs	r3, #1
20000442:	e01e      	b.n	20000482 <pixel_overlap+0x1ac>
    }

    if (cross_points(o2_bottom_right, o1_upper_left, o1_bottom_right)){
20000444:	2320      	movs	r3, #32
20000446:	18fa      	adds	r2, r7, r3
20000448:	2324      	movs	r3, #36	; 0x24
2000044a:	18f9      	adds	r1, r7, r3
2000044c:	2308      	movs	r3, #8
2000044e:	18fb      	adds	r3, r7, r3
20000450:	6812      	ldr	r2, [r2, #0]
20000452:	6809      	ldr	r1, [r1, #0]
20000454:	6818      	ldr	r0, [r3, #0]
20000456:	f7ff ff13 	bl	20000280 <cross_points>
2000045a:	1e03      	subs	r3, r0, #0
2000045c:	d001      	beq.n	20000462 <pixel_overlap+0x18c>
        return 1;
2000045e:	2301      	movs	r3, #1
20000460:	e00f      	b.n	20000482 <pixel_overlap+0x1ac>
    }
	//KILL ME
	if (cross_points(o2_bottom_right, o1_upper_left, o1_bottom_right)){
20000462:	2320      	movs	r3, #32
20000464:	18fa      	adds	r2, r7, r3
20000466:	2324      	movs	r3, #36	; 0x24
20000468:	18f9      	adds	r1, r7, r3
2000046a:	2308      	movs	r3, #8
2000046c:	18fb      	adds	r3, r7, r3
2000046e:	6812      	ldr	r2, [r2, #0]
20000470:	6809      	ldr	r1, [r1, #0]
20000472:	6818      	ldr	r0, [r3, #0]
20000474:	f7ff ff04 	bl	20000280 <cross_points>
20000478:	1e03      	subs	r3, r0, #0
2000047a:	d001      	beq.n	20000480 <pixel_overlap+0x1aa>
        return 1;
2000047c:	2301      	movs	r3, #1
2000047e:	e000      	b.n	20000482 <pixel_overlap+0x1ac>
    }

    return 0;
20000480:	2300      	movs	r3, #0
20000482:	0018      	movs	r0, r3
20000484:	46bd      	mov	sp, r7
20000486:	b00a      	add	sp, #40	; 0x28
20000488:	bdb0      	pop	{r4, r5, r7, pc}
2000048a:	46c0      	nop			; (mov r8, r8)

2000048c <delay_250ns>:
#include "Delay.h"
#include "SYSTICK.h"


void delay_250ns( void ){
2000048c:	b580      	push	{r7, lr}
2000048e:	af00      	add	r7, sp, #0
	systick.CTRL = 0;
20000490:	4b0f      	ldr	r3, [pc, #60]	; (200004d0 <delay_250ns+0x44>)
20000492:	2200      	movs	r2, #0
20000494:	601a      	str	r2, [r3, #0]
	systick.LOAD = ( (168/4) -1 );
20000496:	4a0e      	ldr	r2, [pc, #56]	; (200004d0 <delay_250ns+0x44>)
20000498:	6853      	ldr	r3, [r2, #4]
2000049a:	0e1b      	lsrs	r3, r3, #24
2000049c:	061b      	lsls	r3, r3, #24
2000049e:	2129      	movs	r1, #41	; 0x29
200004a0:	430b      	orrs	r3, r1
200004a2:	6053      	str	r3, [r2, #4]
	systick.VAL = 0;
200004a4:	4a0a      	ldr	r2, [pc, #40]	; (200004d0 <delay_250ns+0x44>)
200004a6:	6893      	ldr	r3, [r2, #8]
200004a8:	0e1b      	lsrs	r3, r3, #24
200004aa:	061b      	lsls	r3, r3, #24
200004ac:	6093      	str	r3, [r2, #8]
	systick.CTRL = 5;
200004ae:	4b08      	ldr	r3, [pc, #32]	; (200004d0 <delay_250ns+0x44>)
200004b0:	2205      	movs	r2, #5
200004b2:	601a      	str	r2, [r3, #0]
	while( (systick.CTRL & 0x10000 )== 0 );
200004b4:	46c0      	nop			; (mov r8, r8)
200004b6:	4b06      	ldr	r3, [pc, #24]	; (200004d0 <delay_250ns+0x44>)
200004b8:	681a      	ldr	r2, [r3, #0]
200004ba:	2380      	movs	r3, #128	; 0x80
200004bc:	025b      	lsls	r3, r3, #9
200004be:	4013      	ands	r3, r2
200004c0:	d0f9      	beq.n	200004b6 <delay_250ns+0x2a>
	systick.CTRL = 0;
200004c2:	4b03      	ldr	r3, [pc, #12]	; (200004d0 <delay_250ns+0x44>)
200004c4:	2200      	movs	r2, #0
200004c6:	601a      	str	r2, [r3, #0]
}
200004c8:	46c0      	nop			; (mov r8, r8)
200004ca:	46bd      	mov	sp, r7
200004cc:	bd80      	pop	{r7, pc}
200004ce:	46c0      	nop			; (mov r8, r8)
200004d0:	e000e010 	and	lr, r0, r0, lsl r0

200004d4 <delay_milli>:

void delay_milli(unsigned int ms)
{
200004d4:	b580      	push	{r7, lr}
200004d6:	b084      	sub	sp, #16
200004d8:	af00      	add	r7, sp, #0
200004da:	6078      	str	r0, [r7, #4]
	while(ms>0){
200004dc:	e00d      	b.n	200004fa <delay_milli+0x26>
		int i = 50;
200004de:	2332      	movs	r3, #50	; 0x32
200004e0:	60fb      	str	r3, [r7, #12]
		while(i>0){
200004e2:	e004      	b.n	200004ee <delay_milli+0x1a>
			delay_250ns();
200004e4:	f7ff ffd2 	bl	2000048c <delay_250ns>
			i = i-1;
200004e8:	68fb      	ldr	r3, [r7, #12]
200004ea:	3b01      	subs	r3, #1
200004ec:	60fb      	str	r3, [r7, #12]
		while(i>0){
200004ee:	68fb      	ldr	r3, [r7, #12]
200004f0:	2b00      	cmp	r3, #0
200004f2:	dcf7      	bgt.n	200004e4 <delay_milli+0x10>
		
		}
	ms--;
200004f4:	687b      	ldr	r3, [r7, #4]
200004f6:	3b01      	subs	r3, #1
200004f8:	607b      	str	r3, [r7, #4]
	while(ms>0){
200004fa:	687b      	ldr	r3, [r7, #4]
200004fc:	2b00      	cmp	r3, #0
200004fe:	d1ee      	bne.n	200004de <delay_milli+0xa>
	}
}
20000500:	46c0      	nop			; (mov r8, r8)
20000502:	46c0      	nop			; (mov r8, r8)
20000504:	46bd      	mov	sp, r7
20000506:	b004      	add	sp, #16
20000508:	bd80      	pop	{r7, pc}

2000050a <delay_micro>:

void delay_micro(unsigned int us){
2000050a:	b580      	push	{r7, lr}
2000050c:	b082      	sub	sp, #8
2000050e:	af00      	add	r7, sp, #0
20000510:	6078      	str	r0, [r7, #4]
	while( us > 0 ){
20000512:	e00a      	b.n	2000052a <delay_micro+0x20>
		delay_250ns();
20000514:	f7ff ffba 	bl	2000048c <delay_250ns>
		delay_250ns();
20000518:	f7ff ffb8 	bl	2000048c <delay_250ns>
		delay_250ns();
2000051c:	f7ff ffb6 	bl	2000048c <delay_250ns>
		delay_250ns();
20000520:	f7ff ffb4 	bl	2000048c <delay_250ns>
		us--;
20000524:	687b      	ldr	r3, [r7, #4]
20000526:	3b01      	subs	r3, #1
20000528:	607b      	str	r3, [r7, #4]
	while( us > 0 ){
2000052a:	687b      	ldr	r3, [r7, #4]
2000052c:	2b00      	cmp	r3, #0
2000052e:	d1f1      	bne.n	20000514 <delay_micro+0xa>
	}
}
20000530:	46c0      	nop			; (mov r8, r8)
20000532:	46c0      	nop			; (mov r8, r8)
20000534:	46bd      	mov	sp, r7
20000536:	b002      	add	sp, #8
20000538:	bd80      	pop	{r7, pc}

2000053a <setup_ms_delay>:

void setup_ms_delay(void)
{
2000053a:	b580      	push	{r7, lr}
2000053c:	af00      	add	r7, sp, #0
	systick.CTRL &= -(7);//Gör det såhär om vi ska använda andra bits
2000053e:	4b0c      	ldr	r3, [pc, #48]	; (20000570 <setup_ms_delay+0x36>)
20000540:	681a      	ldr	r2, [r3, #0]
20000542:	4b0b      	ldr	r3, [pc, #44]	; (20000570 <setup_ms_delay+0x36>)
20000544:	2106      	movs	r1, #6
20000546:	438a      	bics	r2, r1
20000548:	601a      	str	r2, [r3, #0]
	systick.LOAD = 16800 - 1;  //Man får typ fixa så att det ser bra ut på MD407 6000 är på gränsen. Måste typ ha 28000 för att kunna hinna att flytta  
2000054a:	4a09      	ldr	r2, [pc, #36]	; (20000570 <setup_ms_delay+0x36>)
2000054c:	6853      	ldr	r3, [r2, #4]
2000054e:	0e1b      	lsrs	r3, r3, #24
20000550:	061b      	lsls	r3, r3, #24
20000552:	4908      	ldr	r1, [pc, #32]	; (20000574 <setup_ms_delay+0x3a>)
20000554:	430b      	orrs	r3, r1
20000556:	6053      	str	r3, [r2, #4]
	systick.VAL = 0;
20000558:	4a05      	ldr	r2, [pc, #20]	; (20000570 <setup_ms_delay+0x36>)
2000055a:	6893      	ldr	r3, [r2, #8]
2000055c:	0e1b      	lsrs	r3, r3, #24
2000055e:	061b      	lsls	r3, r3, #24
20000560:	6093      	str	r3, [r2, #8]
	systick.CTRL = 7;
20000562:	4b03      	ldr	r3, [pc, #12]	; (20000570 <setup_ms_delay+0x36>)
20000564:	2207      	movs	r2, #7
20000566:	601a      	str	r2, [r3, #0]
20000568:	46c0      	nop			; (mov r8, r8)
2000056a:	46bd      	mov	sp, r7
2000056c:	bd80      	pop	{r7, pc}
2000056e:	46c0      	nop			; (mov r8, r8)
20000570:	e000e010 	and	lr, r0, r0, lsl r0
20000574:	0000419f 	muleq	r0, pc, r1	; <UNPREDICTABLE>

20000578 <ascii_text_generator>:


#include "AsciiDisplayDriver.h"
#include "GPIO.h"

char ascii_text_generator(char SCR1, char SCR2){
20000578:	b5f0      	push	{r4, r5, r6, r7, lr}
2000057a:	b08d      	sub	sp, #52	; 0x34
2000057c:	af00      	add	r7, sp, #0
2000057e:	0002      	movs	r2, r0
20000580:	1dfb      	adds	r3, r7, #7
20000582:	701a      	strb	r2, [r3, #0]
20000584:	1dbb      	adds	r3, r7, #6
20000586:	1c0a      	adds	r2, r1, #0
20000588:	701a      	strb	r2, [r3, #0]
	char* s;
	char player1[] = "PLAYER 1: X";
2000058a:	2020      	movs	r0, #32
2000058c:	183b      	adds	r3, r7, r0
2000058e:	4a27      	ldr	r2, [pc, #156]	; (2000062c <ascii_text_generator+0xb4>)
20000590:	ca32      	ldmia	r2!, {r1, r4, r5}
20000592:	c332      	stmia	r3!, {r1, r4, r5}
	char player2[] = "PLAYER 2: X";
20000594:	2514      	movs	r5, #20
20000596:	197b      	adds	r3, r7, r5
20000598:	4a25      	ldr	r2, [pc, #148]	; (20000630 <ascii_text_generator+0xb8>)
2000059a:	ca52      	ldmia	r2!, {r1, r4, r6}
2000059c:	c352      	stmia	r3!, {r1, r4, r6}
	char numbers[] = "0123456789";
2000059e:	2408      	movs	r4, #8
200005a0:	193b      	adds	r3, r7, r4
200005a2:	4a24      	ldr	r2, [pc, #144]	; (20000634 <ascii_text_generator+0xbc>)
200005a4:	ca42      	ldmia	r2!, {r1, r6}
200005a6:	c342      	stmia	r3!, {r1, r6}
200005a8:	8811      	ldrh	r1, [r2, #0]
200005aa:	8019      	strh	r1, [r3, #0]
200005ac:	7892      	ldrb	r2, [r2, #2]
200005ae:	709a      	strb	r2, [r3, #2]
	player1[10] = numbers[SCR1];
200005b0:	1dfb      	adds	r3, r7, #7
200005b2:	781b      	ldrb	r3, [r3, #0]
200005b4:	0021      	movs	r1, r4
200005b6:	187a      	adds	r2, r7, r1
200005b8:	5cd2      	ldrb	r2, [r2, r3]
200005ba:	0004      	movs	r4, r0
200005bc:	183b      	adds	r3, r7, r0
200005be:	729a      	strb	r2, [r3, #10]
	player2[10] = numbers[SCR2];
200005c0:	1dbb      	adds	r3, r7, #6
200005c2:	781b      	ldrb	r3, [r3, #0]
200005c4:	187a      	adds	r2, r7, r1
200005c6:	5cd2      	ldrb	r2, [r2, r3]
200005c8:	197b      	adds	r3, r7, r5
200005ca:	729a      	strb	r2, [r3, #10]
	ascii_gotoxy(1,1);
200005cc:	2101      	movs	r1, #1
200005ce:	2001      	movs	r0, #1
200005d0:	f000 f971 	bl	200008b6 <ascii_gotoxy>
	if(*s){ //goal
200005d4:	6afb      	ldr	r3, [r7, #44]	; 0x2c
200005d6:	781b      	ldrb	r3, [r3, #0]
200005d8:	2b00      	cmp	r3, #0
200005da:	d022      	beq.n	20000622 <ascii_text_generator+0xaa>
		s = player1;
200005dc:	193b      	adds	r3, r7, r4
200005de:	62fb      	str	r3, [r7, #44]	; 0x2c
		while (*s){
200005e0:	e006      	b.n	200005f0 <ascii_text_generator+0x78>
		ascii_write_char (*s++);
200005e2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
200005e4:	1c5a      	adds	r2, r3, #1
200005e6:	62fa      	str	r2, [r7, #44]	; 0x2c
200005e8:	781b      	ldrb	r3, [r3, #0]
200005ea:	0018      	movs	r0, r3
200005ec:	f000 f945 	bl	2000087a <ascii_write_char>
		while (*s){
200005f0:	6afb      	ldr	r3, [r7, #44]	; 0x2c
200005f2:	781b      	ldrb	r3, [r3, #0]
200005f4:	2b00      	cmp	r3, #0
200005f6:	d1f4      	bne.n	200005e2 <ascii_text_generator+0x6a>
		}
	ascii_gotoxy(1,2);
200005f8:	2102      	movs	r1, #2
200005fa:	2001      	movs	r0, #1
200005fc:	f000 f95b 	bl	200008b6 <ascii_gotoxy>
	s = player2;
20000600:	2314      	movs	r3, #20
20000602:	18fb      	adds	r3, r7, r3
20000604:	62fb      	str	r3, [r7, #44]	; 0x2c
	
	while (*s){
20000606:	e006      	b.n	20000616 <ascii_text_generator+0x9e>
		ascii_write_char (*s++);
20000608:	6afb      	ldr	r3, [r7, #44]	; 0x2c
2000060a:	1c5a      	adds	r2, r3, #1
2000060c:	62fa      	str	r2, [r7, #44]	; 0x2c
2000060e:	781b      	ldrb	r3, [r3, #0]
20000610:	0018      	movs	r0, r3
20000612:	f000 f932 	bl	2000087a <ascii_write_char>
	while (*s){
20000616:	6afb      	ldr	r3, [r7, #44]	; 0x2c
20000618:	781b      	ldrb	r3, [r3, #0]
2000061a:	2b00      	cmp	r3, #0
2000061c:	d1f4      	bne.n	20000608 <ascii_text_generator+0x90>
		}
		return 0;
2000061e:	2300      	movs	r3, #0
20000620:	e7ff      	b.n	20000622 <ascii_text_generator+0xaa>
	}
}
20000622:	0018      	movs	r0, r3
20000624:	46bd      	mov	sp, r7
20000626:	b00d      	add	sp, #52	; 0x34
20000628:	bdf0      	pop	{r4, r5, r6, r7, pc}
2000062a:	46c0      	nop			; (mov r8, r8)
2000062c:	2000128c 	andcs	r1, r0, ip, lsl #5
20000630:	20001298 	mulcs	r0, r8, r2
20000634:	200012a4 	andcs	r1, r0, r4, lsr #5

20000638 <ascii_init>:

void ascii_init(void){
20000638:	b580      	push	{r7, lr}
2000063a:	af00      	add	r7, sp, #0
	delay_milli(1);
2000063c:	2001      	movs	r0, #1
2000063e:	f7ff ff49 	bl	200004d4 <delay_milli>
	ascii_write_cmd(0x38);
20000642:	2038      	movs	r0, #56	; 0x38
20000644:	f000 f817 	bl	20000676 <ascii_write_cmd>
	delay_milli(1);
20000648:	2001      	movs	r0, #1
2000064a:	f7ff ff43 	bl	200004d4 <delay_milli>
	ascii_write_cmd(0xe);
2000064e:	200e      	movs	r0, #14
20000650:	f000 f811 	bl	20000676 <ascii_write_cmd>
	delay_milli(1);
20000654:	2001      	movs	r0, #1
20000656:	f7ff ff3d 	bl	200004d4 <delay_milli>
	clear_display();
2000065a:	f000 f8f7 	bl	2000084c <clear_display>
	delay_milli(2);
2000065e:	2002      	movs	r0, #2
20000660:	f7ff ff38 	bl	200004d4 <delay_milli>
	ascii_write_cmd(6);
20000664:	2006      	movs	r0, #6
20000666:	f000 f806 	bl	20000676 <ascii_write_cmd>
	delay_milli(2);
2000066a:	2002      	movs	r0, #2
2000066c:	f7ff ff32 	bl	200004d4 <delay_milli>
}
20000670:	46c0      	nop			; (mov r8, r8)
20000672:	46bd      	mov	sp, r7
20000674:	bd80      	pop	{r7, pc}

20000676 <ascii_write_cmd>:


void ascii_write_cmd(unsigned char cmd){
20000676:	b580      	push	{r7, lr}
20000678:	b082      	sub	sp, #8
2000067a:	af00      	add	r7, sp, #0
2000067c:	0002      	movs	r2, r0
2000067e:	1dfb      	adds	r3, r7, #7
20000680:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear( B_RS );
20000682:	2001      	movs	r0, #1
20000684:	f000 f8be 	bl	20000804 <ascii_ctrl_bit_clear>
	ascii_ctrl_bit_clear( B_RW );
20000688:	2002      	movs	r0, #2
2000068a:	f000 f8bb 	bl	20000804 <ascii_ctrl_bit_clear>
	ascii_write_controller(cmd);
2000068e:	1dfb      	adds	r3, r7, #7
20000690:	781b      	ldrb	r3, [r3, #0]
20000692:	0018      	movs	r0, r3
20000694:	f000 f83c 	bl	20000710 <ascii_write_controller>

}
20000698:	46c0      	nop			; (mov r8, r8)
2000069a:	46bd      	mov	sp, r7
2000069c:	b002      	add	sp, #8
2000069e:	bd80      	pop	{r7, pc}

200006a0 <ascii_write_data>:


void ascii_write_data(unsigned char data){
200006a0:	b580      	push	{r7, lr}
200006a2:	b082      	sub	sp, #8
200006a4:	af00      	add	r7, sp, #0
200006a6:	0002      	movs	r2, r0
200006a8:	1dfb      	adds	r3, r7, #7
200006aa:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_set(B_RS);
200006ac:	2001      	movs	r0, #1
200006ae:	f000 f88d 	bl	200007cc <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear(B_RW);
200006b2:	2002      	movs	r0, #2
200006b4:	f000 f8a6 	bl	20000804 <ascii_ctrl_bit_clear>
	ascii_write_controller(data);
200006b8:	1dfb      	adds	r3, r7, #7
200006ba:	781b      	ldrb	r3, [r3, #0]
200006bc:	0018      	movs	r0, r3
200006be:	f000 f827 	bl	20000710 <ascii_write_controller>
}
200006c2:	46c0      	nop			; (mov r8, r8)
200006c4:	46bd      	mov	sp, r7
200006c6:	b002      	add	sp, #8
200006c8:	bd80      	pop	{r7, pc}

200006ca <ascii_read_controller>:



char ascii_read_controller( void ){
200006ca:	b580      	push	{r7, lr}
200006cc:	b082      	sub	sp, #8
200006ce:	af00      	add	r7, sp, #0
	PORT_E.MODER = 0x00005555;
200006d0:	4b0c      	ldr	r3, [pc, #48]	; (20000704 <ascii_read_controller+0x3a>)
200006d2:	4a0d      	ldr	r2, [pc, #52]	; (20000708 <ascii_read_controller+0x3e>)
200006d4:	601a      	str	r2, [r3, #0]
	char c;
	ascii_ctrl_bit_set( B_E );
200006d6:	2040      	movs	r0, #64	; 0x40
200006d8:	f000 f878 	bl	200007cc <ascii_ctrl_bit_set>
	delay_250ns();
200006dc:	f7ff fed6 	bl	2000048c <delay_250ns>
	delay_250ns();
200006e0:	f7ff fed4 	bl	2000048c <delay_250ns>
	c = PORT_E.IDRHIGH;
200006e4:	4a07      	ldr	r2, [pc, #28]	; (20000704 <ascii_read_controller+0x3a>)
200006e6:	1dfb      	adds	r3, r7, #7
200006e8:	7c52      	ldrb	r2, [r2, #17]
200006ea:	701a      	strb	r2, [r3, #0]
	ascii_ctrl_bit_clear( B_E );
200006ec:	2040      	movs	r0, #64	; 0x40
200006ee:	f000 f889 	bl	20000804 <ascii_ctrl_bit_clear>
	PORT_E.MODER  = 0x55555555;
200006f2:	4b04      	ldr	r3, [pc, #16]	; (20000704 <ascii_read_controller+0x3a>)
200006f4:	4a05      	ldr	r2, [pc, #20]	; (2000070c <ascii_read_controller+0x42>)
200006f6:	601a      	str	r2, [r3, #0]
	return c;
200006f8:	1dfb      	adds	r3, r7, #7
200006fa:	781b      	ldrb	r3, [r3, #0]
}
200006fc:	0018      	movs	r0, r3
200006fe:	46bd      	mov	sp, r7
20000700:	b002      	add	sp, #8
20000702:	bd80      	pop	{r7, pc}
20000704:	40021000 	andmi	r1, r2, r0
20000708:	00005555 	andeq	r5, r0, r5, asr r5
2000070c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

20000710 <ascii_write_controller>:

void ascii_write_controller( unsigned char c ){
20000710:	b580      	push	{r7, lr}
20000712:	b082      	sub	sp, #8
20000714:	af00      	add	r7, sp, #0
20000716:	0002      	movs	r2, r0
20000718:	1dfb      	adds	r3, r7, #7
2000071a:	701a      	strb	r2, [r3, #0]
	delay_milli(1);
2000071c:	2001      	movs	r0, #1
2000071e:	f7ff fed9 	bl	200004d4 <delay_milli>
	ascii_ctrl_bit_set( B_E );
20000722:	2040      	movs	r0, #64	; 0x40
20000724:	f000 f852 	bl	200007cc <ascii_ctrl_bit_set>
	PORT_E.ODRHIGH = c; 
20000728:	4a07      	ldr	r2, [pc, #28]	; (20000748 <ascii_write_controller+0x38>)
2000072a:	1dfb      	adds	r3, r7, #7
2000072c:	781b      	ldrb	r3, [r3, #0]
2000072e:	7553      	strb	r3, [r2, #21]
	delay_250ns();
20000730:	f7ff feac 	bl	2000048c <delay_250ns>
	ascii_ctrl_bit_clear( B_E );
20000734:	2040      	movs	r0, #64	; 0x40
20000736:	f000 f865 	bl	20000804 <ascii_ctrl_bit_clear>
	delay_250ns();
2000073a:	f7ff fea7 	bl	2000048c <delay_250ns>
}
2000073e:	46c0      	nop			; (mov r8, r8)
20000740:	46bd      	mov	sp, r7
20000742:	b002      	add	sp, #8
20000744:	bd80      	pop	{r7, pc}
20000746:	46c0      	nop			; (mov r8, r8)
20000748:	40021000 	andmi	r1, r2, r0

2000074c <ascii_read_status>:

char ascii_read_status( void ){
2000074c:	b590      	push	{r4, r7, lr}
2000074e:	b083      	sub	sp, #12
20000750:	af00      	add	r7, sp, #0
	char c;
	PORT_E.MODER = 0x00005555;
20000752:	4b0b      	ldr	r3, [pc, #44]	; (20000780 <ascii_read_status+0x34>)
20000754:	4a0b      	ldr	r2, [pc, #44]	; (20000784 <ascii_read_status+0x38>)
20000756:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set( B_RW );
20000758:	2002      	movs	r0, #2
2000075a:	f000 f837 	bl	200007cc <ascii_ctrl_bit_set>
	ascii_ctrl_bit_clear( B_RS );
2000075e:	2001      	movs	r0, #1
20000760:	f000 f850 	bl	20000804 <ascii_ctrl_bit_clear>
	c = ascii_read_controller();
20000764:	1dfc      	adds	r4, r7, #7
20000766:	f7ff ffb0 	bl	200006ca <ascii_read_controller>
2000076a:	0003      	movs	r3, r0
2000076c:	7023      	strb	r3, [r4, #0]
	PORT_E.MODER = 0x55555555;
2000076e:	4b04      	ldr	r3, [pc, #16]	; (20000780 <ascii_read_status+0x34>)
20000770:	4a05      	ldr	r2, [pc, #20]	; (20000788 <ascii_read_status+0x3c>)
20000772:	601a      	str	r2, [r3, #0]
	return c;
20000774:	1dfb      	adds	r3, r7, #7
20000776:	781b      	ldrb	r3, [r3, #0]
}
20000778:	0018      	movs	r0, r3
2000077a:	46bd      	mov	sp, r7
2000077c:	b003      	add	sp, #12
2000077e:	bd90      	pop	{r4, r7, pc}
20000780:	40021000 	andmi	r1, r2, r0
20000784:	00005555 	andeq	r5, r0, r5, asr r5
20000788:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

2000078c <ascii_read_data>:

char ascii_read_data( void ){
2000078c:	b590      	push	{r4, r7, lr}
2000078e:	b083      	sub	sp, #12
20000790:	af00      	add	r7, sp, #0
	char c;
	PORT_E.MODER = 0x00005555;
20000792:	4b0b      	ldr	r3, [pc, #44]	; (200007c0 <ascii_read_data+0x34>)
20000794:	4a0b      	ldr	r2, [pc, #44]	; (200007c4 <ascii_read_data+0x38>)
20000796:	601a      	str	r2, [r3, #0]
	ascii_ctrl_bit_set( B_RW );
20000798:	2002      	movs	r0, #2
2000079a:	f000 f817 	bl	200007cc <ascii_ctrl_bit_set>
	ascii_ctrl_bit_set( B_RS );
2000079e:	2001      	movs	r0, #1
200007a0:	f000 f814 	bl	200007cc <ascii_ctrl_bit_set>
	c = ascii_read_controller();
200007a4:	1dfc      	adds	r4, r7, #7
200007a6:	f7ff ff90 	bl	200006ca <ascii_read_controller>
200007aa:	0003      	movs	r3, r0
200007ac:	7023      	strb	r3, [r4, #0]
	PORT_E.MODER = 0x55555555;
200007ae:	4b04      	ldr	r3, [pc, #16]	; (200007c0 <ascii_read_data+0x34>)
200007b0:	4a05      	ldr	r2, [pc, #20]	; (200007c8 <ascii_read_data+0x3c>)
200007b2:	601a      	str	r2, [r3, #0]
	return c;
200007b4:	1dfb      	adds	r3, r7, #7
200007b6:	781b      	ldrb	r3, [r3, #0]
}
200007b8:	0018      	movs	r0, r3
200007ba:	46bd      	mov	sp, r7
200007bc:	b003      	add	sp, #12
200007be:	bd90      	pop	{r4, r7, pc}
200007c0:	40021000 	andmi	r1, r2, r0
200007c4:	00005555 	andeq	r5, r0, r5, asr r5
200007c8:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab

200007cc <ascii_ctrl_bit_set>:

void ascii_ctrl_bit_set( unsigned char x ){ /* x: bitmask bits are 1 to set */
200007cc:	b580      	push	{r7, lr}
200007ce:	b084      	sub	sp, #16
200007d0:	af00      	add	r7, sp, #0
200007d2:	0002      	movs	r2, r0
200007d4:	1dfb      	adds	r3, r7, #7
200007d6:	701a      	strb	r2, [r3, #0]
	char c;
	c = PORT_E.ODRLOW;
200007d8:	4a09      	ldr	r2, [pc, #36]	; (20000800 <ascii_ctrl_bit_set+0x34>)
200007da:	210f      	movs	r1, #15
200007dc:	187b      	adds	r3, r7, r1
200007de:	7d12      	ldrb	r2, [r2, #20]
200007e0:	701a      	strb	r2, [r3, #0]
	PORT_E.ODRLOW = B_SELECT | x | c;
200007e2:	1dfa      	adds	r2, r7, #7
200007e4:	187b      	adds	r3, r7, r1
200007e6:	7812      	ldrb	r2, [r2, #0]
200007e8:	781b      	ldrb	r3, [r3, #0]
200007ea:	4313      	orrs	r3, r2
200007ec:	b2db      	uxtb	r3, r3
200007ee:	4a04      	ldr	r2, [pc, #16]	; (20000800 <ascii_ctrl_bit_set+0x34>)
200007f0:	2104      	movs	r1, #4
200007f2:	430b      	orrs	r3, r1
200007f4:	b2db      	uxtb	r3, r3
200007f6:	7513      	strb	r3, [r2, #20]
}
200007f8:	46c0      	nop			; (mov r8, r8)
200007fa:	46bd      	mov	sp, r7
200007fc:	b004      	add	sp, #16
200007fe:	bd80      	pop	{r7, pc}
20000800:	40021000 	andmi	r1, r2, r0

20000804 <ascii_ctrl_bit_clear>:

void ascii_ctrl_bit_clear( char x ){ /* x: bitmask bits are 1 to clear */
20000804:	b580      	push	{r7, lr}
20000806:	b084      	sub	sp, #16
20000808:	af00      	add	r7, sp, #0
2000080a:	0002      	movs	r2, r0
2000080c:	1dfb      	adds	r3, r7, #7
2000080e:	701a      	strb	r2, [r3, #0]
	char c;
	c = PORT_E.ODRLOW;
20000810:	4a0d      	ldr	r2, [pc, #52]	; (20000848 <ascii_ctrl_bit_clear+0x44>)
20000812:	210f      	movs	r1, #15
20000814:	187b      	adds	r3, r7, r1
20000816:	7d12      	ldrb	r2, [r2, #20]
20000818:	701a      	strb	r2, [r3, #0]
	c = c & ~x;
2000081a:	1dfb      	adds	r3, r7, #7
2000081c:	781b      	ldrb	r3, [r3, #0]
2000081e:	b25b      	sxtb	r3, r3
20000820:	43db      	mvns	r3, r3
20000822:	b25b      	sxtb	r3, r3
20000824:	187a      	adds	r2, r7, r1
20000826:	7812      	ldrb	r2, [r2, #0]
20000828:	b252      	sxtb	r2, r2
2000082a:	4013      	ands	r3, r2
2000082c:	b25a      	sxtb	r2, r3
2000082e:	187b      	adds	r3, r7, r1
20000830:	701a      	strb	r2, [r3, #0]
	PORT_E.ODRLOW = B_SELECT | c;
20000832:	4a05      	ldr	r2, [pc, #20]	; (20000848 <ascii_ctrl_bit_clear+0x44>)
20000834:	187b      	adds	r3, r7, r1
20000836:	781b      	ldrb	r3, [r3, #0]
20000838:	2104      	movs	r1, #4
2000083a:	430b      	orrs	r3, r1
2000083c:	b2db      	uxtb	r3, r3
2000083e:	7513      	strb	r3, [r2, #20]
}
20000840:	46c0      	nop			; (mov r8, r8)
20000842:	46bd      	mov	sp, r7
20000844:	b004      	add	sp, #16
20000846:	bd80      	pop	{r7, pc}
20000848:	40021000 	andmi	r1, r2, r0

2000084c <clear_display>:

void clear_display(){
2000084c:	b580      	push	{r7, lr}
2000084e:	af00      	add	r7, sp, #0
	while((ascii_read_status() & 0x80)== 0x80 );
20000850:	46c0      	nop			; (mov r8, r8)
20000852:	f7ff ff7b 	bl	2000074c <ascii_read_status>
20000856:	0003      	movs	r3, r0
20000858:	001a      	movs	r2, r3
2000085a:	2380      	movs	r3, #128	; 0x80
2000085c:	4013      	ands	r3, r2
2000085e:	2b80      	cmp	r3, #128	; 0x80
20000860:	d0f7      	beq.n	20000852 <clear_display+0x6>
	delay_micro(8);
20000862:	2008      	movs	r0, #8
20000864:	f7ff fe51 	bl	2000050a <delay_micro>
	ascii_write_cmd(1);
20000868:	2001      	movs	r0, #1
2000086a:	f7ff ff04 	bl	20000676 <ascii_write_cmd>
	delay_milli(2);
2000086e:	2002      	movs	r0, #2
20000870:	f7ff fe30 	bl	200004d4 <delay_milli>
}
20000874:	46c0      	nop			; (mov r8, r8)
20000876:	46bd      	mov	sp, r7
20000878:	bd80      	pop	{r7, pc}

2000087a <ascii_write_char>:

void ascii_write_char(unsigned char data){
2000087a:	b580      	push	{r7, lr}
2000087c:	b082      	sub	sp, #8
2000087e:	af00      	add	r7, sp, #0
20000880:	0002      	movs	r2, r0
20000882:	1dfb      	adds	r3, r7, #7
20000884:	701a      	strb	r2, [r3, #0]
	while ( (ascii_read_status() & 0x80) == 0x80);
20000886:	46c0      	nop			; (mov r8, r8)
20000888:	f7ff ff60 	bl	2000074c <ascii_read_status>
2000088c:	0003      	movs	r3, r0
2000088e:	001a      	movs	r2, r3
20000890:	2380      	movs	r3, #128	; 0x80
20000892:	4013      	ands	r3, r2
20000894:	2b80      	cmp	r3, #128	; 0x80
20000896:	d0f7      	beq.n	20000888 <ascii_write_char+0xe>
		delay_micro(8);
20000898:	2008      	movs	r0, #8
2000089a:	f7ff fe36 	bl	2000050a <delay_micro>
		ascii_write_data(data);
2000089e:	1dfb      	adds	r3, r7, #7
200008a0:	781b      	ldrb	r3, [r3, #0]
200008a2:	0018      	movs	r0, r3
200008a4:	f7ff fefc 	bl	200006a0 <ascii_write_data>
		delay_micro(43);
200008a8:	202b      	movs	r0, #43	; 0x2b
200008aa:	f7ff fe2e 	bl	2000050a <delay_micro>
}
200008ae:	46c0      	nop			; (mov r8, r8)
200008b0:	46bd      	mov	sp, r7
200008b2:	b002      	add	sp, #8
200008b4:	bd80      	pop	{r7, pc}

200008b6 <ascii_gotoxy>:

void ascii_gotoxy( int x, int y){
200008b6:	b580      	push	{r7, lr}
200008b8:	b084      	sub	sp, #16
200008ba:	af00      	add	r7, sp, #0
200008bc:	6078      	str	r0, [r7, #4]
200008be:	6039      	str	r1, [r7, #0]
	int address;
	address = x - 1;
200008c0:	687b      	ldr	r3, [r7, #4]
200008c2:	3b01      	subs	r3, #1
200008c4:	60fb      	str	r3, [r7, #12]
	if(y == 2){
200008c6:	683b      	ldr	r3, [r7, #0]
200008c8:	2b02      	cmp	r3, #2
200008ca:	d102      	bne.n	200008d2 <ascii_gotoxy+0x1c>
		address = address + 0x40;
200008cc:	68fb      	ldr	r3, [r7, #12]
200008ce:	3340      	adds	r3, #64	; 0x40
200008d0:	60fb      	str	r3, [r7, #12]
	}
	ascii_write_cmd(0x80 | address);
200008d2:	68fb      	ldr	r3, [r7, #12]
200008d4:	b25b      	sxtb	r3, r3
200008d6:	2280      	movs	r2, #128	; 0x80
200008d8:	4252      	negs	r2, r2
200008da:	4313      	orrs	r3, r2
200008dc:	b25b      	sxtb	r3, r3
200008de:	b2db      	uxtb	r3, r3
200008e0:	0018      	movs	r0, r3
200008e2:	f7ff fec8 	bl	20000676 <ascii_write_cmd>
200008e6:	46c0      	nop			; (mov r8, r8)
200008e8:	46bd      	mov	sp, r7
200008ea:	b004      	add	sp, #16
200008ec:	bd80      	pop	{r7, pc}
200008ee:	46c0      	nop			; (mov r8, r8)

200008f0 <kbdGetCol>:
#include "KeyboardDriver.h"
#include "GPIO.h"
#include "GraphicDriver.h"

int kbdGetCol(char HIGH){
200008f0:	b580      	push	{r7, lr}
200008f2:	b084      	sub	sp, #16
200008f4:	af00      	add	r7, sp, #0
200008f6:	0002      	movs	r2, r0
200008f8:	1dfb      	adds	r3, r7, #7
200008fa:	701a      	strb	r2, [r3, #0]
	unsigned char c; 
	if(HIGH){
200008fc:	1dfb      	adds	r3, r7, #7
200008fe:	781b      	ldrb	r3, [r3, #0]
20000900:	2b00      	cmp	r3, #0
20000902:	d005      	beq.n	20000910 <kbdGetCol+0x20>
		c = PORT_D.IDRHIGH;
20000904:	4a17      	ldr	r2, [pc, #92]	; (20000964 <kbdGetCol+0x74>)
20000906:	230f      	movs	r3, #15
20000908:	18fb      	adds	r3, r7, r3
2000090a:	7c52      	ldrb	r2, [r2, #17]
2000090c:	701a      	strb	r2, [r3, #0]
2000090e:	e004      	b.n	2000091a <kbdGetCol+0x2a>
	}
	else{
		c = PORT_D.IDRLOW;
20000910:	4a14      	ldr	r2, [pc, #80]	; (20000964 <kbdGetCol+0x74>)
20000912:	230f      	movs	r3, #15
20000914:	18fb      	adds	r3, r7, r3
20000916:	7c12      	ldrb	r2, [r2, #16]
20000918:	701a      	strb	r2, [r3, #0]
	} //rad värdet placeras i c 
	if(c & 0x8) return 4;
2000091a:	230f      	movs	r3, #15
2000091c:	18fb      	adds	r3, r7, r3
2000091e:	781b      	ldrb	r3, [r3, #0]
20000920:	2208      	movs	r2, #8
20000922:	4013      	ands	r3, r2
20000924:	d001      	beq.n	2000092a <kbdGetCol+0x3a>
20000926:	2304      	movs	r3, #4
20000928:	e018      	b.n	2000095c <kbdGetCol+0x6c>
	if(c & 0x4) return 3;
2000092a:	230f      	movs	r3, #15
2000092c:	18fb      	adds	r3, r7, r3
2000092e:	781b      	ldrb	r3, [r3, #0]
20000930:	2204      	movs	r2, #4
20000932:	4013      	ands	r3, r2
20000934:	d001      	beq.n	2000093a <kbdGetCol+0x4a>
20000936:	2303      	movs	r3, #3
20000938:	e010      	b.n	2000095c <kbdGetCol+0x6c>
	if(c & 0x2) return 2;
2000093a:	230f      	movs	r3, #15
2000093c:	18fb      	adds	r3, r7, r3
2000093e:	781b      	ldrb	r3, [r3, #0]
20000940:	2202      	movs	r2, #2
20000942:	4013      	ands	r3, r2
20000944:	d001      	beq.n	2000094a <kbdGetCol+0x5a>
20000946:	2302      	movs	r3, #2
20000948:	e008      	b.n	2000095c <kbdGetCol+0x6c>
	if(c & 0x1) return 1;
2000094a:	230f      	movs	r3, #15
2000094c:	18fb      	adds	r3, r7, r3
2000094e:	781b      	ldrb	r3, [r3, #0]
20000950:	2201      	movs	r2, #1
20000952:	4013      	ands	r3, r2
20000954:	d001      	beq.n	2000095a <kbdGetCol+0x6a>
20000956:	2301      	movs	r3, #1
20000958:	e000      	b.n	2000095c <kbdGetCol+0x6c>
	return 0; 
2000095a:	2300      	movs	r3, #0
		
}
2000095c:	0018      	movs	r0, r3
2000095e:	46bd      	mov	sp, r7
20000960:	b004      	add	sp, #16
20000962:	bd80      	pop	{r7, pc}
20000964:	40020c00 	andmi	r0, r2, r0, lsl #24

20000968 <kdbActivate>:

void kdbActivate(unsigned int row, char HIGH) { //hjälp rutin (MULTIPLEX SAKER FATTAR EJ)
20000968:	b580      	push	{r7, lr}
2000096a:	b082      	sub	sp, #8
2000096c:	af00      	add	r7, sp, #0
2000096e:	6078      	str	r0, [r7, #4]
20000970:	000a      	movs	r2, r1
20000972:	1cfb      	adds	r3, r7, #3
20000974:	701a      	strb	r2, [r3, #0]
	if (HIGH){
20000976:	1cfb      	adds	r3, r7, #3
20000978:	781b      	ldrb	r3, [r3, #0]
2000097a:	2b00      	cmp	r3, #0
2000097c:	d026      	beq.n	200009cc <kdbActivate+0x64>
	switch(row){
2000097e:	687b      	ldr	r3, [r7, #4]
20000980:	2b04      	cmp	r3, #4
20000982:	d01b      	beq.n	200009bc <kdbActivate+0x54>
20000984:	687b      	ldr	r3, [r7, #4]
20000986:	2b04      	cmp	r3, #4
20000988:	d81c      	bhi.n	200009c4 <kdbActivate+0x5c>
2000098a:	687b      	ldr	r3, [r7, #4]
2000098c:	2b03      	cmp	r3, #3
2000098e:	d011      	beq.n	200009b4 <kdbActivate+0x4c>
20000990:	687b      	ldr	r3, [r7, #4]
20000992:	2b03      	cmp	r3, #3
20000994:	d816      	bhi.n	200009c4 <kdbActivate+0x5c>
20000996:	687b      	ldr	r3, [r7, #4]
20000998:	2b01      	cmp	r3, #1
2000099a:	d003      	beq.n	200009a4 <kdbActivate+0x3c>
2000099c:	687b      	ldr	r3, [r7, #4]
2000099e:	2b02      	cmp	r3, #2
200009a0:	d004      	beq.n	200009ac <kdbActivate+0x44>
200009a2:	e00f      	b.n	200009c4 <kdbActivate+0x5c>
		case 1: PORT_D.ODRHIGH = 0x10; 
200009a4:	4b1f      	ldr	r3, [pc, #124]	; (20000a24 <kdbActivate+0xbc>)
200009a6:	2210      	movs	r2, #16
200009a8:	755a      	strb	r2, [r3, #21]
			break; 
200009aa:	e036      	b.n	20000a1a <kdbActivate+0xb2>
		case 2: PORT_D.ODRHIGH = 0x20; 
200009ac:	4b1d      	ldr	r3, [pc, #116]	; (20000a24 <kdbActivate+0xbc>)
200009ae:	2220      	movs	r2, #32
200009b0:	755a      	strb	r2, [r3, #21]
			break;
200009b2:	e032      	b.n	20000a1a <kdbActivate+0xb2>
		case 3: PORT_D.ODRHIGH = 0x40; 
200009b4:	4b1b      	ldr	r3, [pc, #108]	; (20000a24 <kdbActivate+0xbc>)
200009b6:	2240      	movs	r2, #64	; 0x40
200009b8:	755a      	strb	r2, [r3, #21]
			break;
200009ba:	e02e      	b.n	20000a1a <kdbActivate+0xb2>
		case 4: PORT_D.ODRHIGH = 0x80; 
200009bc:	4b19      	ldr	r3, [pc, #100]	; (20000a24 <kdbActivate+0xbc>)
200009be:	2280      	movs	r2, #128	; 0x80
200009c0:	755a      	strb	r2, [r3, #21]
			break;
200009c2:	e02a      	b.n	20000a1a <kdbActivate+0xb2>
		default: PORT_D.ODRHIGH = 0x0;
200009c4:	4b17      	ldr	r3, [pc, #92]	; (20000a24 <kdbActivate+0xbc>)
200009c6:	2200      	movs	r2, #0
200009c8:	755a      	strb	r2, [r3, #21]
			break;	
200009ca:	e026      	b.n	20000a1a <kdbActivate+0xb2>
	}
	}
	else{
	switch(row){
200009cc:	687b      	ldr	r3, [r7, #4]
200009ce:	2b04      	cmp	r3, #4
200009d0:	d01b      	beq.n	20000a0a <kdbActivate+0xa2>
200009d2:	687b      	ldr	r3, [r7, #4]
200009d4:	2b04      	cmp	r3, #4
200009d6:	d81c      	bhi.n	20000a12 <kdbActivate+0xaa>
200009d8:	687b      	ldr	r3, [r7, #4]
200009da:	2b03      	cmp	r3, #3
200009dc:	d011      	beq.n	20000a02 <kdbActivate+0x9a>
200009de:	687b      	ldr	r3, [r7, #4]
200009e0:	2b03      	cmp	r3, #3
200009e2:	d816      	bhi.n	20000a12 <kdbActivate+0xaa>
200009e4:	687b      	ldr	r3, [r7, #4]
200009e6:	2b01      	cmp	r3, #1
200009e8:	d003      	beq.n	200009f2 <kdbActivate+0x8a>
200009ea:	687b      	ldr	r3, [r7, #4]
200009ec:	2b02      	cmp	r3, #2
200009ee:	d004      	beq.n	200009fa <kdbActivate+0x92>
200009f0:	e00f      	b.n	20000a12 <kdbActivate+0xaa>
		case 1: PORT_D.ODRLOW = 0x10; 
200009f2:	4b0c      	ldr	r3, [pc, #48]	; (20000a24 <kdbActivate+0xbc>)
200009f4:	2210      	movs	r2, #16
200009f6:	751a      	strb	r2, [r3, #20]
			break; 
200009f8:	e00f      	b.n	20000a1a <kdbActivate+0xb2>
		case 2: PORT_D.ODRLOW  = 0x20; 
200009fa:	4b0a      	ldr	r3, [pc, #40]	; (20000a24 <kdbActivate+0xbc>)
200009fc:	2220      	movs	r2, #32
200009fe:	751a      	strb	r2, [r3, #20]
			break;
20000a00:	e00b      	b.n	20000a1a <kdbActivate+0xb2>
		case 3: PORT_D.ODRLOW = 0x40; 
20000a02:	4b08      	ldr	r3, [pc, #32]	; (20000a24 <kdbActivate+0xbc>)
20000a04:	2240      	movs	r2, #64	; 0x40
20000a06:	751a      	strb	r2, [r3, #20]
			break;
20000a08:	e007      	b.n	20000a1a <kdbActivate+0xb2>
		case 4: PORT_D.ODRLOW = 0x80; 
20000a0a:	4b06      	ldr	r3, [pc, #24]	; (20000a24 <kdbActivate+0xbc>)
20000a0c:	2280      	movs	r2, #128	; 0x80
20000a0e:	751a      	strb	r2, [r3, #20]
			break;
20000a10:	e003      	b.n	20000a1a <kdbActivate+0xb2>
		default: PORT_D.ODRLOW = 0x0;
20000a12:	4b04      	ldr	r3, [pc, #16]	; (20000a24 <kdbActivate+0xbc>)
20000a14:	2200      	movs	r2, #0
20000a16:	751a      	strb	r2, [r3, #20]
			break;	
20000a18:	46c0      	nop			; (mov r8, r8)
			}

		}
	}
20000a1a:	46c0      	nop			; (mov r8, r8)
20000a1c:	46bd      	mov	sp, r7
20000a1e:	b002      	add	sp, #8
20000a20:	bd80      	pop	{r7, pc}
20000a22:	46c0      	nop			; (mov r8, r8)
20000a24:	40020c00 	andmi	r0, r2, r0, lsl #24

20000a28 <keyb>:

char keyb(char HIGH){
20000a28:	b590      	push	{r4, r7, lr}
20000a2a:	b089      	sub	sp, #36	; 0x24
20000a2c:	af00      	add	r7, sp, #0
20000a2e:	0002      	movs	r2, r0
20000a30:	1dfb      	adds	r3, r7, #7
20000a32:	701a      	strb	r2, [r3, #0]
	char keys[] = {1,2,3,0xA,4,5,6,0xB,7,8,9,0x39,0xE,0,0xF6,0xD}; 
20000a34:	2308      	movs	r3, #8
20000a36:	18fb      	adds	r3, r7, r3
20000a38:	4a1a      	ldr	r2, [pc, #104]	; (20000aa4 <keyb+0x7c>)
20000a3a:	ca13      	ldmia	r2!, {r0, r1, r4}
20000a3c:	c313      	stmia	r3!, {r0, r1, r4}
20000a3e:	6812      	ldr	r2, [r2, #0]
20000a40:	601a      	str	r2, [r3, #0]
	int row;
	int col;
	for(row = 1; row <= 4; row++){ //väljer en rad att se på
20000a42:	2301      	movs	r3, #1
20000a44:	61fb      	str	r3, [r7, #28]
20000a46:	e01e      	b.n	20000a86 <keyb+0x5e>
		kdbActivate(row, HIGH);			//Ger ström till den raden vi har valt 
20000a48:	69fa      	ldr	r2, [r7, #28]
20000a4a:	1dfb      	adds	r3, r7, #7
20000a4c:	781b      	ldrb	r3, [r3, #0]
20000a4e:	0019      	movs	r1, r3
20000a50:	0010      	movs	r0, r2
20000a52:	f7ff ff89 	bl	20000968 <kdbActivate>
		if( col = kbdGetCol(HIGH)){		
20000a56:	1dfb      	adds	r3, r7, #7
20000a58:	781b      	ldrb	r3, [r3, #0]
20000a5a:	0018      	movs	r0, r3
20000a5c:	f7ff ff48 	bl	200008f0 <kbdGetCol>
20000a60:	0003      	movs	r3, r0
20000a62:	61bb      	str	r3, [r7, #24]
20000a64:	69bb      	ldr	r3, [r7, #24]
20000a66:	2b00      	cmp	r3, #0
20000a68:	d00a      	beq.n	20000a80 <keyb+0x58>
			return ((4*row-1)+(col-1));
20000a6a:	69fb      	ldr	r3, [r7, #28]
20000a6c:	b2db      	uxtb	r3, r3
20000a6e:	009b      	lsls	r3, r3, #2
20000a70:	b2da      	uxtb	r2, r3
20000a72:	69bb      	ldr	r3, [r7, #24]
20000a74:	b2db      	uxtb	r3, r3
20000a76:	18d3      	adds	r3, r2, r3
20000a78:	b2db      	uxtb	r3, r3
20000a7a:	3b02      	subs	r3, #2
20000a7c:	b2db      	uxtb	r3, r3
20000a7e:	e00c      	b.n	20000a9a <keyb+0x72>
	for(row = 1; row <= 4; row++){ //väljer en rad att se på
20000a80:	69fb      	ldr	r3, [r7, #28]
20000a82:	3301      	adds	r3, #1
20000a84:	61fb      	str	r3, [r7, #28]
20000a86:	69fb      	ldr	r3, [r7, #28]
20000a88:	2b04      	cmp	r3, #4
20000a8a:	dddd      	ble.n	20000a48 <keyb+0x20>
		}
		
	}
	kdbActivate(0, HIGH);
20000a8c:	1dfb      	adds	r3, r7, #7
20000a8e:	781b      	ldrb	r3, [r3, #0]
20000a90:	0019      	movs	r1, r3
20000a92:	2000      	movs	r0, #0
20000a94:	f7ff ff68 	bl	20000968 <kdbActivate>
	return 0xFF;
20000a98:	23ff      	movs	r3, #255	; 0xff
}
20000a9a:	0018      	movs	r0, r3
20000a9c:	46bd      	mov	sp, r7
20000a9e:	b009      	add	sp, #36	; 0x24
20000aa0:	bd90      	pop	{r4, r7, pc}
20000aa2:	46c0      	nop			; (mov r8, r8)
20000aa4:	200012b0 			; <UNDEFINED> instruction: 0x200012b0

20000aa8 <graphic_initalize>:
#include "GraphicDriver.h"

__attribute__((naked))
void graphic_initalize(void){
20000aa8:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
	__asm volatile (".HWORD	0xDFF0\n");
	__asm volatile ("BX	LR\n");
	
}
20000aac:	46c0      	nop			; (mov r8, r8)

20000aae <graphic_pixel_set>:


__attribute__((naked))
void graphic_pixel_set(int x, int y){
20000aae:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
	__asm volatile (".HWORD	0xDFF2\n");
	__asm volatile ("BX	LR\n");
	
}
20000ab2:	46c0      	nop			; (mov r8, r8)

20000ab4 <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void){
20000ab4:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
	__asm volatile (".HWORD	0xDFF1\n");
	__asm volatile ("BX	LR\n");
	
}
20000ab8:	46c0      	nop			; (mov r8, r8)

20000aba <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(int x, int y){
20000aba:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
	__asm volatile (".HWORD	0xDFF3\n");
	__asm volatile ("BX	LR\n");
}
20000abe:	46c0      	nop			; (mov r8, r8)

20000ac0 <set_port_keyboards>:
#define FPS 60
#define DELAY_COUNT_DEFAULT (500/FPS)
#define MICRO_SEC 168


void set_port_keyboards(char POS[]){
20000ac0:	b580      	push	{r7, lr}
20000ac2:	b082      	sub	sp, #8
20000ac4:	af00      	add	r7, sp, #0
20000ac6:	6078      	str	r0, [r7, #4]
	//Set high or low here
	if(POS == "HIGH"){
20000ac8:	687a      	ldr	r2, [r7, #4]
20000aca:	4b0a      	ldr	r3, [pc, #40]	; (20000af4 <set_port_keyboards+0x34>)
20000acc:	429a      	cmp	r2, r3
20000ace:	d106      	bne.n	20000ade <set_port_keyboards+0x1e>
		Keyboard1 = 1;
20000ad0:	4b09      	ldr	r3, [pc, #36]	; (20000af8 <set_port_keyboards+0x38>)
20000ad2:	2201      	movs	r2, #1
20000ad4:	701a      	strb	r2, [r3, #0]
		Keyboard2 = 0;
20000ad6:	4b09      	ldr	r3, [pc, #36]	; (20000afc <set_port_keyboards+0x3c>)
20000ad8:	2200      	movs	r2, #0
20000ada:	701a      	strb	r2, [r3, #0]
	}
	else{
		Keyboard1 = 0;
		Keyboard2 = 1;
	}
}
20000adc:	e005      	b.n	20000aea <set_port_keyboards+0x2a>
		Keyboard1 = 0;
20000ade:	4b06      	ldr	r3, [pc, #24]	; (20000af8 <set_port_keyboards+0x38>)
20000ae0:	2200      	movs	r2, #0
20000ae2:	701a      	strb	r2, [r3, #0]
		Keyboard2 = 1;
20000ae4:	4b05      	ldr	r3, [pc, #20]	; (20000afc <set_port_keyboards+0x3c>)
20000ae6:	2201      	movs	r2, #1
20000ae8:	701a      	strb	r2, [r3, #0]
}
20000aea:	46c0      	nop			; (mov r8, r8)
20000aec:	46bd      	mov	sp, r7
20000aee:	b002      	add	sp, #8
20000af0:	bd80      	pop	{r7, pc}
20000af2:	46c0      	nop			; (mov r8, r8)
20000af4:	200012c0 	andcs	r1, r0, r0, asr #5
20000af8:	20000e08 	andcs	r0, r0, r8, lsl #28
20000afc:	20000e09 	andcs	r0, r0, r9, lsl #28

20000b00 <update_paddle>:

char update_paddle(char Keyboard){
20000b00:	b590      	push	{r4, r7, lr}
20000b02:	b085      	sub	sp, #20
20000b04:	af00      	add	r7, sp, #0
20000b06:	0002      	movs	r2, r0
20000b08:	1dfb      	adds	r3, r7, #7
20000b0a:	701a      	strb	r2, [r3, #0]
	char c = keyb(Keyboard);
20000b0c:	230f      	movs	r3, #15
20000b0e:	18fc      	adds	r4, r7, r3
20000b10:	1dfb      	adds	r3, r7, #7
20000b12:	781b      	ldrb	r3, [r3, #0]
20000b14:	0018      	movs	r0, r3
20000b16:	f7ff ff87 	bl	20000a28 <keyb>
20000b1a:	0003      	movs	r3, r0
20000b1c:	7023      	strb	r3, [r4, #0]
}
20000b1e:	46c0      	nop			; (mov r8, r8)
20000b20:	0018      	movs	r0, r3
20000b22:	46bd      	mov	sp, r7
20000b24:	b005      	add	sp, #20
20000b26:	bd90      	pop	{r4, r7, pc}

20000b28 <move_paddles>:





void move_paddles(void){
20000b28:	b580      	push	{r7, lr}
20000b2a:	af00      	add	r7, sp, #0
		p->move(p);
20000b2c:	4b08      	ldr	r3, [pc, #32]	; (20000b50 <move_paddles+0x28>)
20000b2e:	681b      	ldr	r3, [r3, #0]
20000b30:	69da      	ldr	r2, [r3, #28]
20000b32:	4b07      	ldr	r3, [pc, #28]	; (20000b50 <move_paddles+0x28>)
20000b34:	681b      	ldr	r3, [r3, #0]
20000b36:	0018      	movs	r0, r3
20000b38:	4790      	blx	r2
		q->move(q);
20000b3a:	4b06      	ldr	r3, [pc, #24]	; (20000b54 <move_paddles+0x2c>)
20000b3c:	681b      	ldr	r3, [r3, #0]
20000b3e:	69da      	ldr	r2, [r3, #28]
20000b40:	4b04      	ldr	r3, [pc, #16]	; (20000b54 <move_paddles+0x2c>)
20000b42:	681b      	ldr	r3, [r3, #0]
20000b44:	0018      	movs	r0, r3
20000b46:	4790      	blx	r2
}
20000b48:	46c0      	nop			; (mov r8, r8)
20000b4a:	46bd      	mov	sp, r7
20000b4c:	bd80      	pop	{r7, pc}
20000b4e:	46c0      	nop			; (mov r8, r8)
20000b50:	2000127c 	andcs	r1, r0, ip, ror r2
20000b54:	20001280 	andcs	r1, r0, r0, lsl #5

20000b58 <collision_check>:

void collision_check(void){
20000b58:	b580      	push	{r7, lr}
20000b5a:	af00      	add	r7, sp, #0
	if(pixel_overlap(p,b)){
20000b5c:	4b30      	ldr	r3, [pc, #192]	; (20000c20 <collision_check+0xc8>)
20000b5e:	681a      	ldr	r2, [r3, #0]
20000b60:	4b30      	ldr	r3, [pc, #192]	; (20000c24 <collision_check+0xcc>)
20000b62:	681b      	ldr	r3, [r3, #0]
20000b64:	0019      	movs	r1, r3
20000b66:	0010      	movs	r0, r2
20000b68:	f7ff fbb5 	bl	200002d6 <pixel_overlap>
20000b6c:	1e03      	subs	r3, r0, #0
20000b6e:	d00c      	beq.n	20000b8a <collision_check+0x32>
			b -> dirx = (- b -> dirx);
20000b70:	4b2c      	ldr	r3, [pc, #176]	; (20000c24 <collision_check+0xcc>)
20000b72:	681b      	ldr	r3, [r3, #0]
20000b74:	685a      	ldr	r2, [r3, #4]
20000b76:	4b2b      	ldr	r3, [pc, #172]	; (20000c24 <collision_check+0xcc>)
20000b78:	681b      	ldr	r3, [r3, #0]
20000b7a:	4252      	negs	r2, r2
20000b7c:	605a      	str	r2, [r3, #4]
			b -> diry =	(b -> diry);
20000b7e:	4b29      	ldr	r3, [pc, #164]	; (20000c24 <collision_check+0xcc>)
20000b80:	681a      	ldr	r2, [r3, #0]
20000b82:	4b28      	ldr	r3, [pc, #160]	; (20000c24 <collision_check+0xcc>)
20000b84:	681b      	ldr	r3, [r3, #0]
20000b86:	6892      	ldr	r2, [r2, #8]
20000b88:	609a      	str	r2, [r3, #8]
		}
	if(pixel_overlap(q,b)){
20000b8a:	4b27      	ldr	r3, [pc, #156]	; (20000c28 <collision_check+0xd0>)
20000b8c:	681a      	ldr	r2, [r3, #0]
20000b8e:	4b25      	ldr	r3, [pc, #148]	; (20000c24 <collision_check+0xcc>)
20000b90:	681b      	ldr	r3, [r3, #0]
20000b92:	0019      	movs	r1, r3
20000b94:	0010      	movs	r0, r2
20000b96:	f7ff fb9e 	bl	200002d6 <pixel_overlap>
20000b9a:	1e03      	subs	r3, r0, #0
20000b9c:	d00c      	beq.n	20000bb8 <collision_check+0x60>
			b -> dirx = (- b -> dirx);
20000b9e:	4b21      	ldr	r3, [pc, #132]	; (20000c24 <collision_check+0xcc>)
20000ba0:	681b      	ldr	r3, [r3, #0]
20000ba2:	685a      	ldr	r2, [r3, #4]
20000ba4:	4b1f      	ldr	r3, [pc, #124]	; (20000c24 <collision_check+0xcc>)
20000ba6:	681b      	ldr	r3, [r3, #0]
20000ba8:	4252      	negs	r2, r2
20000baa:	605a      	str	r2, [r3, #4]
			b -> diry =	(b -> diry);
20000bac:	4b1d      	ldr	r3, [pc, #116]	; (20000c24 <collision_check+0xcc>)
20000bae:	681a      	ldr	r2, [r3, #0]
20000bb0:	4b1c      	ldr	r3, [pc, #112]	; (20000c24 <collision_check+0xcc>)
20000bb2:	681b      	ldr	r3, [r3, #0]
20000bb4:	6892      	ldr	r2, [r2, #8]
20000bb6:	609a      	str	r2, [r3, #8]
		}
	b->move(b);
20000bb8:	4b1a      	ldr	r3, [pc, #104]	; (20000c24 <collision_check+0xcc>)
20000bba:	681b      	ldr	r3, [r3, #0]
20000bbc:	69da      	ldr	r2, [r3, #28]
20000bbe:	4b19      	ldr	r3, [pc, #100]	; (20000c24 <collision_check+0xcc>)
20000bc0:	681b      	ldr	r3, [r3, #0]
20000bc2:	0018      	movs	r0, r3
20000bc4:	4790      	blx	r2
	
	if(GOAL){
20000bc6:	4b19      	ldr	r3, [pc, #100]	; (20000c2c <collision_check+0xd4>)
20000bc8:	781b      	ldrb	r3, [r3, #0]
20000bca:	2b00      	cmp	r3, #0
20000bcc:	d024      	beq.n	20000c18 <collision_check+0xc0>
		graphic_clear_screen();
20000bce:	f7ff ff71 	bl	20000ab4 <graphic_clear_screen>
		ascii_text_generator(SCORE1, SCORE2);
20000bd2:	4b17      	ldr	r3, [pc, #92]	; (20000c30 <collision_check+0xd8>)
20000bd4:	781a      	ldrb	r2, [r3, #0]
20000bd6:	4b17      	ldr	r3, [pc, #92]	; (20000c34 <collision_check+0xdc>)
20000bd8:	781b      	ldrb	r3, [r3, #0]
20000bda:	0019      	movs	r1, r3
20000bdc:	0010      	movs	r0, r2
20000bde:	f7ff fccb 	bl	20000578 <ascii_text_generator>
		p->posx = 122;
20000be2:	4b0f      	ldr	r3, [pc, #60]	; (20000c20 <collision_check+0xc8>)
20000be4:	681b      	ldr	r3, [r3, #0]
20000be6:	227a      	movs	r2, #122	; 0x7a
20000be8:	60da      	str	r2, [r3, #12]
		p->posy = 32;
20000bea:	4b0d      	ldr	r3, [pc, #52]	; (20000c20 <collision_check+0xc8>)
20000bec:	681b      	ldr	r3, [r3, #0]
20000bee:	2220      	movs	r2, #32
20000bf0:	611a      	str	r2, [r3, #16]
		q->posx= 2;
20000bf2:	4b0d      	ldr	r3, [pc, #52]	; (20000c28 <collision_check+0xd0>)
20000bf4:	681b      	ldr	r3, [r3, #0]
20000bf6:	2202      	movs	r2, #2
20000bf8:	60da      	str	r2, [r3, #12]
		q->posy = 32;
20000bfa:	4b0b      	ldr	r3, [pc, #44]	; (20000c28 <collision_check+0xd0>)
20000bfc:	681b      	ldr	r3, [r3, #0]
20000bfe:	2220      	movs	r2, #32
20000c00:	611a      	str	r2, [r3, #16]
		b->posx = 64;
20000c02:	4b08      	ldr	r3, [pc, #32]	; (20000c24 <collision_check+0xcc>)
20000c04:	681b      	ldr	r3, [r3, #0]
20000c06:	2240      	movs	r2, #64	; 0x40
20000c08:	60da      	str	r2, [r3, #12]
		b ->posy =32;
20000c0a:	4b06      	ldr	r3, [pc, #24]	; (20000c24 <collision_check+0xcc>)
20000c0c:	681b      	ldr	r3, [r3, #0]
20000c0e:	2220      	movs	r2, #32
20000c10:	611a      	str	r2, [r3, #16]
		GOAL = 0;
20000c12:	4b06      	ldr	r3, [pc, #24]	; (20000c2c <collision_check+0xd4>)
20000c14:	2200      	movs	r2, #0
20000c16:	701a      	strb	r2, [r3, #0]
	}
	
}
20000c18:	46c0      	nop			; (mov r8, r8)
20000c1a:	46bd      	mov	sp, r7
20000c1c:	bd80      	pop	{r7, pc}
20000c1e:	46c0      	nop			; (mov r8, r8)
20000c20:	2000127c 	andcs	r1, r0, ip, ror r2
20000c24:	20001284 	andcs	r1, r0, r4, lsl #5
20000c28:	20001280 	andcs	r1, r0, r0, lsl #5
20000c2c:	20000e10 	andcs	r0, r0, r0, lsl lr
20000c30:	20000e0a 	andcs	r0, r0, sl, lsl #28
20000c34:	20000e0b 	andcs	r0, r0, fp, lsl #28

20000c38 <render_frame>:

void render_frame(void){
20000c38:	b580      	push	{r7, lr}
20000c3a:	af00      	add	r7, sp, #0
	systick.CTRL = 0; 
20000c3c:	4b0d      	ldr	r3, [pc, #52]	; (20000c74 <render_frame+0x3c>)
20000c3e:	2200      	movs	r2, #0
20000c40:	601a      	str	r2, [r3, #0]
	systick.VAL= 0;
20000c42:	4a0c      	ldr	r2, [pc, #48]	; (20000c74 <render_frame+0x3c>)
20000c44:	6893      	ldr	r3, [r2, #8]
20000c46:	0e1b      	lsrs	r3, r3, #24
20000c48:	061b      	lsls	r3, r3, #24
20000c4a:	6093      	str	r3, [r2, #8]
	systick.CTRL |= 5;
20000c4c:	4b09      	ldr	r3, [pc, #36]	; (20000c74 <render_frame+0x3c>)
20000c4e:	681a      	ldr	r2, [r3, #0]
20000c50:	4b08      	ldr	r3, [pc, #32]	; (20000c74 <render_frame+0x3c>)
20000c52:	2105      	movs	r1, #5
20000c54:	430a      	orrs	r2, r1
20000c56:	601a      	str	r2, [r3, #0]
	collision_check();
20000c58:	f7ff ff7e 	bl	20000b58 <collision_check>
	move_paddles();
20000c5c:	f7ff ff64 	bl	20000b28 <move_paddles>
	draw_object(l);
20000c60:	4b05      	ldr	r3, [pc, #20]	; (20000c78 <render_frame+0x40>)
20000c62:	681b      	ldr	r3, [r3, #0]
20000c64:	0018      	movs	r0, r3
20000c66:	f7ff f9d3 	bl	20000010 <draw_object>
	setup_ms_delay();
20000c6a:	f7ff fc66 	bl	2000053a <setup_ms_delay>
}
20000c6e:	46c0      	nop			; (mov r8, r8)
20000c70:	46bd      	mov	sp, r7
20000c72:	bd80      	pop	{r7, pc}
20000c74:	e000e010 	and	lr, r0, r0, lsl r0
20000c78:	20001288 	andcs	r1, r0, r8, lsl #5

20000c7c <translate_key>:
		systick.VAL += sys_val;//För alltså over delayen från hur lange det var att rita till nästa omgång for that smooth 60 FPS experience
	}
} */


void translate_key(char c,POBJECT p ){
20000c7c:	b580      	push	{r7, lr}
20000c7e:	b082      	sub	sp, #8
20000c80:	af00      	add	r7, sp, #0
20000c82:	0002      	movs	r2, r0
20000c84:	6039      	str	r1, [r7, #0]
20000c86:	1dfb      	adds	r3, r7, #7
20000c88:	701a      	strb	r2, [r3, #0]
			switch(c){
20000c8a:	1dfb      	adds	r3, r7, #7
20000c8c:	781b      	ldrb	r3, [r3, #0]
20000c8e:	2bff      	cmp	r3, #255	; 0xff
20000c90:	d017      	beq.n	20000cc2 <translate_key+0x46>
20000c92:	dc26      	bgt.n	20000ce2 <translate_key+0x66>
20000c94:	2b0c      	cmp	r3, #12
20000c96:	d00d      	beq.n	20000cb4 <translate_key+0x38>
20000c98:	dc23      	bgt.n	20000ce2 <translate_key+0x66>
20000c9a:	2b04      	cmp	r3, #4
20000c9c:	d002      	beq.n	20000ca4 <translate_key+0x28>
20000c9e:	2b06      	cmp	r3, #6
20000ca0:	d016      	beq.n	20000cd0 <translate_key+0x54>
				break;
			case 6:		b->posx = 10; b->posy = 32; //reset		
				break;

		}
}
20000ca2:	e01e      	b.n	20000ce2 <translate_key+0x66>
			case 4:		p->set_speed(p, 0, -3); //upp
20000ca4:	683b      	ldr	r3, [r7, #0]
20000ca6:	6a1b      	ldr	r3, [r3, #32]
20000ca8:	2203      	movs	r2, #3
20000caa:	4252      	negs	r2, r2
20000cac:	6838      	ldr	r0, [r7, #0]
20000cae:	2100      	movs	r1, #0
20000cb0:	4798      	blx	r3
				break;
20000cb2:	e016      	b.n	20000ce2 <translate_key+0x66>
			case 12:	p->set_speed(p, 0, 3); //ner
20000cb4:	683b      	ldr	r3, [r7, #0]
20000cb6:	6a1b      	ldr	r3, [r3, #32]
20000cb8:	6838      	ldr	r0, [r7, #0]
20000cba:	2203      	movs	r2, #3
20000cbc:	2100      	movs	r1, #0
20000cbe:	4798      	blx	r3
				break;
20000cc0:	e00f      	b.n	20000ce2 <translate_key+0x66>
			case 255:	p->set_speed(p, 0, 0); 	//stanna
20000cc2:	683b      	ldr	r3, [r7, #0]
20000cc4:	6a1b      	ldr	r3, [r3, #32]
20000cc6:	6838      	ldr	r0, [r7, #0]
20000cc8:	2200      	movs	r2, #0
20000cca:	2100      	movs	r1, #0
20000ccc:	4798      	blx	r3
				break;
20000cce:	e008      	b.n	20000ce2 <translate_key+0x66>
			case 6:		b->posx = 10; b->posy = 32; //reset		
20000cd0:	4b06      	ldr	r3, [pc, #24]	; (20000cec <translate_key+0x70>)
20000cd2:	681b      	ldr	r3, [r3, #0]
20000cd4:	220a      	movs	r2, #10
20000cd6:	60da      	str	r2, [r3, #12]
20000cd8:	4b04      	ldr	r3, [pc, #16]	; (20000cec <translate_key+0x70>)
20000cda:	681b      	ldr	r3, [r3, #0]
20000cdc:	2220      	movs	r2, #32
20000cde:	611a      	str	r2, [r3, #16]
				break;
20000ce0:	46c0      	nop			; (mov r8, r8)
}
20000ce2:	46c0      	nop			; (mov r8, r8)
20000ce4:	46bd      	mov	sp, r7
20000ce6:	b002      	add	sp, #8
20000ce8:	bd80      	pop	{r7, pc}
20000cea:	46c0      	nop			; (mov r8, r8)
20000cec:	20001284 	andcs	r1, r0, r4, lsl #5

20000cf0 <init_keyboard>:





void init_keyboard(void){
20000cf0:	b580      	push	{r7, lr}
20000cf2:	af00      	add	r7, sp, #0
	PORT_D.MODER = 0x55005500;
20000cf4:	4b0a      	ldr	r3, [pc, #40]	; (20000d20 <init_keyboard+0x30>)
20000cf6:	4a0b      	ldr	r2, [pc, #44]	; (20000d24 <init_keyboard+0x34>)
20000cf8:	601a      	str	r2, [r3, #0]
	PORT_D.PUPDR = 0x00AA00AA;
20000cfa:	4b09      	ldr	r3, [pc, #36]	; (20000d20 <init_keyboard+0x30>)
20000cfc:	4a0a      	ldr	r2, [pc, #40]	; (20000d28 <init_keyboard+0x38>)
20000cfe:	60da      	str	r2, [r3, #12]
	PORT_D.OSPEEDR = 0x55555555;
20000d00:	4b07      	ldr	r3, [pc, #28]	; (20000d20 <init_keyboard+0x30>)
20000d02:	4a0a      	ldr	r2, [pc, #40]	; (20000d2c <init_keyboard+0x3c>)
20000d04:	609a      	str	r2, [r3, #8]
	PORT_D.OTYPER = 0x0000000;
20000d06:	4b06      	ldr	r3, [pc, #24]	; (20000d20 <init_keyboard+0x30>)
20000d08:	2200      	movs	r2, #0
20000d0a:	809a      	strh	r2, [r3, #4]
	PORT_E.MODER = 0x55555555;
20000d0c:	4b08      	ldr	r3, [pc, #32]	; (20000d30 <init_keyboard+0x40>)
20000d0e:	4a07      	ldr	r2, [pc, #28]	; (20000d2c <init_keyboard+0x3c>)
20000d10:	601a      	str	r2, [r3, #0]
	set_port_keyboards("HIGH");
20000d12:	4b08      	ldr	r3, [pc, #32]	; (20000d34 <init_keyboard+0x44>)
20000d14:	0018      	movs	r0, r3
20000d16:	f7ff fed3 	bl	20000ac0 <set_port_keyboards>
}
20000d1a:	46c0      	nop			; (mov r8, r8)
20000d1c:	46bd      	mov	sp, r7
20000d1e:	bd80      	pop	{r7, pc}
20000d20:	40020c00 	andmi	r0, r2, r0, lsl #24
20000d24:	55005500 	strpl	r5, [r0, #-1280]	; 0xfffffb00
20000d28:	00aa00aa 	adceq	r0, sl, sl, lsr #1
20000d2c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000d30:	40021000 	andmi	r1, r2, r0
20000d34:	200012c0 	andcs	r1, r0, r0, asr #5

20000d38 <init_app>:

void init_app(void){
20000d38:	b580      	push	{r7, lr}
20000d3a:	af00      	add	r7, sp, #0
	init_keyboard();
20000d3c:	f7ff ffd8 	bl	20000cf0 <init_keyboard>
	*SBC_VTOR = 0x2001C000;
20000d40:	4b04      	ldr	r3, [pc, #16]	; (20000d54 <init_app+0x1c>)
20000d42:	4a05      	ldr	r2, [pc, #20]	; (20000d58 <init_app+0x20>)
20000d44:	601a      	str	r2, [r3, #0]
	*((void(**)(void)) 0x2001C03C) = render_frame;
20000d46:	4b05      	ldr	r3, [pc, #20]	; (20000d5c <init_app+0x24>)
20000d48:	4a05      	ldr	r2, [pc, #20]	; (20000d60 <init_app+0x28>)
20000d4a:	601a      	str	r2, [r3, #0]
}
20000d4c:	46c0      	nop			; (mov r8, r8)
20000d4e:	46bd      	mov	sp, r7
20000d50:	bd80      	pop	{r7, pc}
20000d52:	46c0      	nop			; (mov r8, r8)
20000d54:	e000ed08 	and	lr, r0, r8, lsl #26
20000d58:	2001c000 	andcs	ip, r1, r0
20000d5c:	2001c03c 	andcs	ip, r1, ip, lsr r0
20000d60:	20000c39 	andcs	r0, r0, r9, lsr ip

20000d64 <main>:

void main(void){
20000d64:	b590      	push	{r4, r7, lr}
20000d66:	b083      	sub	sp, #12
20000d68:	af00      	add	r7, sp, #0
	char c;
	char k;	
	graphic_initalize();
20000d6a:	f7ff fe9d 	bl	20000aa8 <graphic_initalize>
	graphic_clear_screen();
20000d6e:	f7ff fea1 	bl	20000ab4 <graphic_clear_screen>
	init_app();
20000d72:	f7ff ffe1 	bl	20000d38 <init_app>
	ascii_init();
20000d76:	f7ff fc5f 	bl	20000638 <ascii_init>
	ascii_gotoxy(1,1);
20000d7a:	2101      	movs	r1, #1
20000d7c:	2001      	movs	r0, #1
20000d7e:	f7ff fd9a 	bl	200008b6 <ascii_gotoxy>
	ascii_text_generator(SCORE1,SCORE2);
20000d82:	4b16      	ldr	r3, [pc, #88]	; (20000ddc <main+0x78>)
20000d84:	781a      	ldrb	r2, [r3, #0]
20000d86:	4b16      	ldr	r3, [pc, #88]	; (20000de0 <main+0x7c>)
20000d88:	781b      	ldrb	r3, [r3, #0]
20000d8a:	0019      	movs	r1, r3
20000d8c:	0010      	movs	r0, r2
20000d8e:	f7ff fbf3 	bl	20000578 <ascii_text_generator>
	setup_ms_delay();
20000d92:	f7ff fbd2 	bl	2000053a <setup_ms_delay>
	while(1){
		c = update_paddle(Keyboard1);
20000d96:	4b13      	ldr	r3, [pc, #76]	; (20000de4 <main+0x80>)
20000d98:	781b      	ldrb	r3, [r3, #0]
20000d9a:	b2db      	uxtb	r3, r3
20000d9c:	1dfc      	adds	r4, r7, #7
20000d9e:	0018      	movs	r0, r3
20000da0:	f7ff feae 	bl	20000b00 <update_paddle>
20000da4:	0003      	movs	r3, r0
20000da6:	7023      	strb	r3, [r4, #0]
		k = update_paddle(Keyboard2);
20000da8:	4b0f      	ldr	r3, [pc, #60]	; (20000de8 <main+0x84>)
20000daa:	781b      	ldrb	r3, [r3, #0]
20000dac:	b2db      	uxtb	r3, r3
20000dae:	1dbc      	adds	r4, r7, #6
20000db0:	0018      	movs	r0, r3
20000db2:	f7ff fea5 	bl	20000b00 <update_paddle>
20000db6:	0003      	movs	r3, r0
20000db8:	7023      	strb	r3, [r4, #0]
		translate_key(c,p);
20000dba:	4b0c      	ldr	r3, [pc, #48]	; (20000dec <main+0x88>)
20000dbc:	681a      	ldr	r2, [r3, #0]
20000dbe:	1dfb      	adds	r3, r7, #7
20000dc0:	781b      	ldrb	r3, [r3, #0]
20000dc2:	0011      	movs	r1, r2
20000dc4:	0018      	movs	r0, r3
20000dc6:	f7ff ff59 	bl	20000c7c <translate_key>
		translate_key(k,q);
20000dca:	4b09      	ldr	r3, [pc, #36]	; (20000df0 <main+0x8c>)
20000dcc:	681a      	ldr	r2, [r3, #0]
20000dce:	1dbb      	adds	r3, r7, #6
20000dd0:	781b      	ldrb	r3, [r3, #0]
20000dd2:	0011      	movs	r1, r2
20000dd4:	0018      	movs	r0, r3
20000dd6:	f7ff ff51 	bl	20000c7c <translate_key>
		c = update_paddle(Keyboard1);
20000dda:	e7dc      	b.n	20000d96 <main+0x32>
20000ddc:	20000e0a 	andcs	r0, r0, sl, lsl #28
20000de0:	20000e0b 	andcs	r0, r0, fp, lsl #28
20000de4:	20000e08 	andcs	r0, r0, r8, lsl #28
20000de8:	20000e09 	andcs	r0, r0, r9, lsl #28
20000dec:	2000127c 	andcs	r1, r0, ip, ror r2
20000df0:	20001280 	andcs	r1, r0, r0, lsl #5

20000df4 <memcpy>:
20000df4:	2300      	movs	r3, #0
20000df6:	b510      	push	{r4, lr}
20000df8:	429a      	cmp	r2, r3
20000dfa:	d100      	bne.n	20000dfe <memcpy+0xa>
20000dfc:	bd10      	pop	{r4, pc}
20000dfe:	5ccc      	ldrb	r4, [r1, r3]
20000e00:	54c4      	strb	r4, [r0, r3]
20000e02:	3301      	adds	r3, #1
20000e04:	e7f8      	b.n	20000df8 <memcpy+0x4>
	...

20000e08 <Keyboard1>:
	...

20000e09 <Keyboard2>:
	...

20000e0a <SCORE1>:
	...

20000e0b <SCORE2>:
	...

20000e0c <DELAY_COUNT>:
20000e0c:	00000000 	andeq	r0, r0, r0

20000e10 <GOAL>:
20000e10:	00000000 	andeq	r0, r0, r0

20000e14 <paddle_geometry>:
20000e14:	0000001d 	andeq	r0, r0, sp, lsl r0
20000e18:	00000004 	andeq	r0, r0, r4
20000e1c:	00000004 	andeq	r0, r0, r4
20000e20:	00010000 	andeq	r0, r1, r0
20000e24:	00030002 	andeq	r0, r3, r2
20000e28:	08000004 	stmdaeq	r0, {r2}
20000e2c:	08020801 	stmdaeq	r2, {r0, fp}
20000e30:	08040803 	stmdaeq	r4, {r0, r1, fp}
20000e34:	04020302 	streq	r0, [r2], #-770	; 0xfffffcfe
20000e38:	01000502 	tsteq	r0, r2, lsl #10
20000e3c:	03000200 	movweq	r0, #512	; 0x200
20000e40:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
20000e44:	07000600 	streq	r0, [r0, -r0, lsl #12]
20000e48:	00040800 	andeq	r0, r4, r0, lsl #16
20000e4c:	02040104 	andeq	r0, r4, #4, 2
20000e50:	04040304 	streq	r0, [r4], #-772	; 0xfffffcfc
20000e54:	06040504 	streq	r0, [r4], -r4, lsl #10
20000e58:	00000704 	andeq	r0, r0, r4, lsl #14
	...

20000ea0 <ball_geometry>:
20000ea0:	0000000c 	andeq	r0, r0, ip
20000ea4:	00000005 	andeq	r0, r0, r5
20000ea8:	00000009 	andeq	r0, r0, r9
20000eac:	02000100 	andeq	r0, r0, #0, 2
20000eb0:	01010001 	tsteq	r1, r1
20000eb4:	03010201 	movweq	r0, #4609	; 0x1201
20000eb8:	01020002 	tsteq	r2, r2
20000ebc:	03020202 	movweq	r0, #8706	; 0x2202
20000ec0:	02030103 	andeq	r0, r3, #-1073741824	; 0xc0000000
	...

20000f2c <line_geometry>:
20000f2c:	00000040 	andeq	r0, r0, r0, asr #32
20000f30:	00000000 	andeq	r0, r0, r0
20000f34:	00000040 	andeq	r0, r0, r0, asr #32
20000f38:	023e013e 	eorseq	r0, lr, #-2147483633	; 0x8000000f
20000f3c:	043e033e 	ldrteq	r0, [lr], #-830	; 0xfffffcc2
20000f40:	063e053e 			; <UNDEFINED> instruction: 0x063e053e
20000f44:	083e073e 	ldmdaeq	lr!, {r1, r2, r3, r4, r5, r8, r9, sl}
20000f48:	0a3e093e 	beq	20f83448 <l+0xf821c0>
20000f4c:	0c3e0b3e 			; <UNDEFINED> instruction: 0x0c3e0b3e
20000f50:	0e3e0d3e 	mrceq	13, 1, r0, cr14, cr14, {1}
20000f54:	103e0f3e 	eorsne	r0, lr, lr, lsr pc
20000f58:	123e113e 	eorsne	r1, lr, #-2147483633	; 0x8000000f
20000f5c:	143e133e 	ldrtne	r1, [lr], #-830	; 0xfffffcc2
20000f60:	163e153e 			; <UNDEFINED> instruction: 0x163e153e
20000f64:	183e173e 	ldmdane	lr!, {r1, r2, r3, r4, r5, r8, r9, sl, ip}
20000f68:	1a3e193e 	bne	20f87468 <l+0xf861e0>
20000f6c:	1c3e1b3e 			; <UNDEFINED> instruction: 0x1c3e1b3e
20000f70:	1e3e1d3e 	mrcne	13, 1, r1, cr14, cr14, {1}
20000f74:	203e1f3e 	eorscs	r1, lr, lr, lsr pc
20000f78:	223e213e 	eorscs	r2, lr, #-2147483633	; 0x8000000f
20000f7c:	243e233e 	ldrtcs	r2, [lr], #-830	; 0xfffffcc2
20000f80:	263e253e 			; <UNDEFINED> instruction: 0x263e253e
20000f84:	283e273e 	ldmdacs	lr!, {r1, r2, r3, r4, r5, r8, r9, sl, sp}
20000f88:	2a3e293e 	bcs	20f8b488 <l+0xf8a200>
20000f8c:	2c3e2b3e 			; <UNDEFINED> instruction: 0x2c3e2b3e
20000f90:	2e3e2d3e 	mrccs	13, 1, r2, cr14, cr14, {1}
20000f94:	303e2f3e 	eorscc	r2, lr, lr, lsr pc
20000f98:	323e313e 	eorscc	r3, lr, #-2147483633	; 0x8000000f
20000f9c:	343e333e 	ldrtcc	r3, [lr], #-830	; 0xfffffcc2
20000fa0:	363e353e 			; <UNDEFINED> instruction: 0x363e353e
20000fa4:	383e373e 	ldmdacc	lr!, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp}
20000fa8:	3a3e393e 	bcc	20f8f4a8 <l+0xf8e220>
20000fac:	3c3e3b3e 			; <UNDEFINED> instruction: 0x3c3e3b3e
20000fb0:	3e3e3d3e 	mrccc	13, 1, r3, cr14, cr14, {1}
20000fb4:	403e3f3e 	eorsmi	r3, lr, lr, lsr pc

20000fb8 <line>:
20000fb8:	20000f2c 	andcs	r0, r0, ip, lsr #30
	...
20000fcc:	20000011 	andcs	r0, r0, r1, lsl r0
20000fd0:	200000ad 	andcs	r0, r0, sp, lsr #1
20000fd4:	2000012f 	andcs	r0, r0, pc, lsr #2
20000fd8:	200001a7 	andcs	r0, r0, r7, lsr #3

20000fdc <paddle1>:
20000fdc:	20000e14 	andcs	r0, r0, r4, lsl lr
	...
20000fe8:	0000007a 	andeq	r0, r0, sl, ror r0
20000fec:	00000020 	andeq	r0, r0, r0, lsr #32
20000ff0:	20000011 	andcs	r0, r0, r1, lsl r0
20000ff4:	200000ad 	andcs	r0, r0, sp, lsr #1
20000ff8:	2000012f 	andcs	r0, r0, pc, lsr #2
20000ffc:	200001a7 	andcs	r0, r0, r7, lsr #3

20001000 <paddle2>:
20001000:	20000e14 	andcs	r0, r0, r4, lsl lr
	...
2000100c:	00000002 	andeq	r0, r0, r2
20001010:	00000020 	andeq	r0, r0, r0, lsr #32
20001014:	20000011 	andcs	r0, r0, r1, lsl r0
20001018:	200000ad 	andcs	r0, r0, sp, lsr #1
2000101c:	2000012f 	andcs	r0, r0, pc, lsr #2
20001020:	200001a7 	andcs	r0, r0, r7, lsr #3

20001024 <ball>:
20001024:	20000ea0 	andcs	r0, r0, r0, lsr #29
20001028:	00000004 	andeq	r0, r0, r4
2000102c:	00000001 	andeq	r0, r0, r1
20001030:	00000040 	andeq	r0, r0, r0, asr #32
20001034:	00000020 	andeq	r0, r0, r0, lsr #32
20001038:	20000011 	andcs	r0, r0, r1, lsl r0
2000103c:	200000ad 	andcs	r0, r0, sp, lsr #1
20001040:	200001cb 	andcs	r0, r0, fp, asr #3
20001044:	200001a7 	andcs	r0, r0, r7, lsr #3

20001048 <paddle_geometry>:
20001048:	0000001d 	andeq	r0, r0, sp, lsl r0
2000104c:	00000004 	andeq	r0, r0, r4
20001050:	00000004 	andeq	r0, r0, r4
20001054:	00010000 	andeq	r0, r1, r0
20001058:	00030002 	andeq	r0, r3, r2
2000105c:	08000004 	stmdaeq	r0, {r2}
20001060:	08020801 	stmdaeq	r2, {r0, fp}
20001064:	08040803 	stmdaeq	r4, {r0, r1, fp}
20001068:	04020302 	streq	r0, [r2], #-770	; 0xfffffcfe
2000106c:	01000502 	tsteq	r0, r2, lsl #10
20001070:	03000200 	movweq	r0, #512	; 0x200
20001074:	05000400 	streq	r0, [r0, #-1024]	; 0xfffffc00
20001078:	07000600 	streq	r0, [r0, -r0, lsl #12]
2000107c:	00040800 	andeq	r0, r4, r0, lsl #16
20001080:	02040104 	andeq	r0, r4, #4, 2
20001084:	04040304 	streq	r0, [r4], #-772	; 0xfffffcfc
20001088:	06040504 	streq	r0, [r4], -r4, lsl #10
2000108c:	00000704 	andeq	r0, r0, r4, lsl #14
	...

200010d4 <ball_geometry>:
200010d4:	0000000c 	andeq	r0, r0, ip
200010d8:	00000005 	andeq	r0, r0, r5
200010dc:	00000009 	andeq	r0, r0, r9
200010e0:	02000100 	andeq	r0, r0, #0, 2
200010e4:	01010001 	tsteq	r1, r1
200010e8:	03010201 	movweq	r0, #4609	; 0x1201
200010ec:	01020002 	tsteq	r2, r2
200010f0:	03020202 	movweq	r0, #8706	; 0x2202
200010f4:	02030103 	andeq	r0, r3, #-1073741824	; 0xc0000000
	...

20001160 <line_geometry>:
20001160:	00000040 	andeq	r0, r0, r0, asr #32
20001164:	00000000 	andeq	r0, r0, r0
20001168:	00000040 	andeq	r0, r0, r0, asr #32
2000116c:	023e013e 	eorseq	r0, lr, #-2147483633	; 0x8000000f
20001170:	043e033e 	ldrteq	r0, [lr], #-830	; 0xfffffcc2
20001174:	063e053e 			; <UNDEFINED> instruction: 0x063e053e
20001178:	083e073e 	ldmdaeq	lr!, {r1, r2, r3, r4, r5, r8, r9, sl}
2000117c:	0a3e093e 	beq	20f8367c <l+0xf823f4>
20001180:	0c3e0b3e 			; <UNDEFINED> instruction: 0x0c3e0b3e
20001184:	0e3e0d3e 	mrceq	13, 1, r0, cr14, cr14, {1}
20001188:	103e0f3e 	eorsne	r0, lr, lr, lsr pc
2000118c:	123e113e 	eorsne	r1, lr, #-2147483633	; 0x8000000f
20001190:	143e133e 	ldrtne	r1, [lr], #-830	; 0xfffffcc2
20001194:	163e153e 			; <UNDEFINED> instruction: 0x163e153e
20001198:	183e173e 	ldmdane	lr!, {r1, r2, r3, r4, r5, r8, r9, sl, ip}
2000119c:	1a3e193e 	bne	20f8769c <l+0xf86414>
200011a0:	1c3e1b3e 			; <UNDEFINED> instruction: 0x1c3e1b3e
200011a4:	1e3e1d3e 	mrcne	13, 1, r1, cr14, cr14, {1}
200011a8:	203e1f3e 	eorscs	r1, lr, lr, lsr pc
200011ac:	223e213e 	eorscs	r2, lr, #-2147483633	; 0x8000000f
200011b0:	243e233e 	ldrtcs	r2, [lr], #-830	; 0xfffffcc2
200011b4:	263e253e 			; <UNDEFINED> instruction: 0x263e253e
200011b8:	283e273e 	ldmdacs	lr!, {r1, r2, r3, r4, r5, r8, r9, sl, sp}
200011bc:	2a3e293e 	bcs	20f8b6bc <l+0xf8a434>
200011c0:	2c3e2b3e 			; <UNDEFINED> instruction: 0x2c3e2b3e
200011c4:	2e3e2d3e 	mrccs	13, 1, r2, cr14, cr14, {1}
200011c8:	303e2f3e 	eorscc	r2, lr, lr, lsr pc
200011cc:	323e313e 	eorscc	r3, lr, #-2147483633	; 0x8000000f
200011d0:	343e333e 	ldrtcc	r3, [lr], #-830	; 0xfffffcc2
200011d4:	363e353e 			; <UNDEFINED> instruction: 0x363e353e
200011d8:	383e373e 	ldmdacc	lr!, {r1, r2, r3, r4, r5, r8, r9, sl, ip, sp}
200011dc:	3a3e393e 	bcc	20f8f6dc <l+0xf8e454>
200011e0:	3c3e3b3e 			; <UNDEFINED> instruction: 0x3c3e3b3e
200011e4:	3e3e3d3e 	mrccc	13, 1, r3, cr14, cr14, {1}
200011e8:	403e3f3e 	eorsmi	r3, lr, lr, lsr pc

200011ec <line>:
200011ec:	20001160 	andcs	r1, r0, r0, ror #2
	...
20001200:	20000011 	andcs	r0, r0, r1, lsl r0
20001204:	200000ad 	andcs	r0, r0, sp, lsr #1
20001208:	2000012f 	andcs	r0, r0, pc, lsr #2
2000120c:	200001a7 	andcs	r0, r0, r7, lsr #3

20001210 <paddle1>:
20001210:	20001048 	andcs	r1, r0, r8, asr #32
	...
2000121c:	0000007a 	andeq	r0, r0, sl, ror r0
20001220:	00000020 	andeq	r0, r0, r0, lsr #32
20001224:	20000011 	andcs	r0, r0, r1, lsl r0
20001228:	200000ad 	andcs	r0, r0, sp, lsr #1
2000122c:	2000012f 	andcs	r0, r0, pc, lsr #2
20001230:	200001a7 	andcs	r0, r0, r7, lsr #3

20001234 <paddle2>:
20001234:	20001048 	andcs	r1, r0, r8, asr #32
	...
20001240:	00000002 	andeq	r0, r0, r2
20001244:	00000020 	andeq	r0, r0, r0, lsr #32
20001248:	20000011 	andcs	r0, r0, r1, lsl r0
2000124c:	200000ad 	andcs	r0, r0, sp, lsr #1
20001250:	2000012f 	andcs	r0, r0, pc, lsr #2
20001254:	200001a7 	andcs	r0, r0, r7, lsr #3

20001258 <ball>:
20001258:	200010d4 	ldrdcs	r1, [r0], -r4
2000125c:	00000004 	andeq	r0, r0, r4
20001260:	00000001 	andeq	r0, r0, r1
20001264:	00000040 	andeq	r0, r0, r0, asr #32
20001268:	00000020 	andeq	r0, r0, r0, lsr #32
2000126c:	20000011 	andcs	r0, r0, r1, lsl r0
20001270:	200000ad 	andcs	r0, r0, sp, lsr #1
20001274:	200001cb 	andcs	r0, r0, fp, asr #3
20001278:	200001a7 	andcs	r0, r0, r7, lsr #3

2000127c <p>:
2000127c:	20001210 	andcs	r1, r0, r0, lsl r2

20001280 <q>:
20001280:	20001234 	andcs	r1, r0, r4, lsr r2

20001284 <b>:
20001284:	20001258 	andcs	r1, r0, r8, asr r2

20001288 <l>:
20001288:	200011ec 	andcs	r1, r0, ip, ror #3
2000128c:	59414c50 	stmdbpl	r1, {r4, r6, sl, fp, lr}^
20001290:	31205245 			; <UNDEFINED> instruction: 0x31205245
20001294:	0058203a 	subseq	r2, r8, sl, lsr r0
20001298:	59414c50 	stmdbpl	r1, {r4, r6, sl, fp, lr}^
2000129c:	32205245 	eorcc	r5, r0, #1342177284	; 0x50000004
200012a0:	0058203a 	subseq	r2, r8, sl, lsr r0
200012a4:	33323130 	teqcc	r2, #48, 2
200012a8:	37363534 			; <UNDEFINED> instruction: 0x37363534
200012ac:	00003938 	andeq	r3, r0, r8, lsr r9
200012b0:	0a030201 	beq	200c1abc <l+0xc0834>
200012b4:	0b060504 	bleq	201826cc <l+0x181444>
200012b8:	39090807 	stmdbcc	r9, {r0, r1, r2, fp}
200012bc:	0df6000e 	ldcleq	0, cr0, [r6, #56]!	; 0x38
200012c0:	48474948 	stmdami	r7, {r3, r6, r8, fp, lr}^
200012c4:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	00000608 	andeq	r0, r0, r8, lsl #12
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000001a6 	andeq	r0, r0, r6, lsr #3
      10:	0000180c 	andeq	r1, r0, ip, lsl #16
      14:	00015c00 	andeq	r5, r1, r0, lsl #24
      18:	00001000 	andeq	r1, r0, r0
      1c:	00047a20 	andeq	r7, r4, r0, lsr #20
      20:	00000000 	andeq	r0, r0, r0
      24:	023b0200 	eorseq	r0, fp, #0, 4
      28:	02020000 	andeq	r0, r2, #0
      2c:	0000310d 	andeq	r3, r0, sp, lsl #2
      30:	08010300 	stmdaeq	r1, {r8, r9}
      34:	000003da 	ldrdeq	r0, [r0], -sl
      38:	00024202 	andeq	r4, r2, r2, lsl #4
      3c:	0d030200 	sfmeq	f0, 4, [r3, #-0]
      40:	00000031 	andeq	r0, r0, r1, lsr r0
      44:	00024904 	andeq	r4, r2, r4, lsl #18
      48:	06040200 	streq	r0, [r4], -r0, lsl #4
      4c:	00000031 	andeq	r0, r0, r1, lsr r0
      50:	0e100305 	cdpeq	3, 1, cr0, cr0, cr5, {0}
      54:	02052000 	andeq	r2, r5, #0
      58:	76090602 	strvc	r0, [r9], -r2, lsl #12
      5c:	06000000 	streq	r0, [r0], -r0
      60:	07020078 	smlsdxeq	r2, r8, r0, r0
      64:	00003107 	andeq	r3, r0, r7, lsl #2
      68:	79060000 	stmdbvc	r6, {}	; <UNPREDICTABLE>
      6c:	09070200 	stmdbeq	r7, {r9}
      70:	00000031 	andeq	r0, r0, r1, lsr r0
      74:	a4070001 	strge	r0, [r7], #-1
      78:	02000000 	andeq	r0, r0, #0
      7c:	00560308 	subseq	r0, r6, r8, lsl #6
      80:	8c050000 	stchi	0, cr0, [r5], {-0}
      84:	bf091102 	svclt	0x00091102
      88:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
      8c:	0000027f 	andeq	r0, r0, pc, ror r2
      90:	bf061202 	svclt	0x00061202
      94:	00000000 	andeq	r0, r0, r0
      98:	00018808 	andeq	r8, r1, r8, lsl #16
      9c:	06130200 	ldreq	r0, [r3], -r0, lsl #4
      a0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
      a4:	018e0804 	orreq	r0, lr, r4, lsl #16
      a8:	14020000 	strne	r0, [r2], #-0
      ac:	0000bf06 	andeq	fp, r0, r6, lsl #30
      b0:	70060800 	andvc	r0, r6, r0, lsl #16
      b4:	15020078 	strne	r0, [r2, #-120]	; 0xffffff88
      b8:	0000c608 	andeq	ip, r0, r8, lsl #12
      bc:	09000c00 	stmdbeq	r0, {sl, fp}
      c0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
      c4:	760a0074 			; <UNDEFINED> instruction: 0x760a0074
      c8:	d6000000 	strle	r0, [r0], -r0
      cc:	0b000000 	bleq	d4 <startup-0x1fffff2c>
      d0:	000000d6 	ldrdeq	r0, [r0], -r6
      d4:	0403003f 	streq	r0, [r3], #-63	; 0xffffffc1
      d8:	00040707 	andeq	r0, r4, r7, lsl #14
      dc:	00010700 	andeq	r0, r1, r0, lsl #14
      e0:	16020000 	strne	r0, [r2], -r0
      e4:	00008202 	andeq	r8, r0, r2, lsl #4
      e8:	00000700 	andeq	r0, r0, r0, lsl #14
      ec:	16020000 	strne	r0, [r2], -r0
      f0:	0000f50d 	andeq	pc, r0, sp, lsl #10
      f4:	82040c00 	andhi	r0, r4, #0, 24
      f8:	05000000 	streq	r0, [r0, #-0]
      fc:	09180224 	ldmdbeq	r8, {r2, r5, r9}
     100:	0000017a 	andeq	r0, r0, sl, ror r1
     104:	6f656706 	svcvs	0x00656706
     108:	0c190200 	lfmeq	f0, 4, [r9], {-0}
     10c:	000000e9 	andeq	r0, r0, r9, ror #1
     110:	00770800 	rsbseq	r0, r7, r0, lsl #16
     114:	1a020000 	bne	8011c <startup-0x1ff7fee4>
     118:	0000bf06 	andeq	fp, r0, r6, lsl #30
     11c:	7c080400 	cfstrsvc	mvf0, [r8], {-0}
     120:	02000000 	andeq	r0, r0, #0
     124:	00bf0c1a 	adcseq	r0, pc, sl, lsl ip	; <UNPREDICTABLE>
     128:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
     12c:	000000d2 	ldrdeq	r0, [r0], -r2
     130:	bf061b02 	svclt	0x00061b02
     134:	0c000000 	stceq	0, cr0, [r0], {-0}
     138:	0000d708 	andeq	sp, r0, r8, lsl #14
     13c:	0c1b0200 	lfmeq	f0, 4, [fp], {-0}
     140:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     144:	006d0810 	rsbeq	r0, sp, r0, lsl r8
     148:	1c020000 	stcne	0, cr0, [r2], {-0}
     14c:	0001900a 	andeq	r9, r1, sl
     150:	67081400 	strvs	r1, [r8, -r0, lsl #8]
     154:	02000000 	andeq	r0, r0, #0
     158:	01ac0a1d 			; <UNDEFINED> instruction: 0x01ac0a1d
     15c:	08180000 	ldmdaeq	r8, {}	; <UNPREDICTABLE>
     160:	00000072 	andeq	r0, r0, r2, ror r0
     164:	c80a1e02 	stmdagt	sl, {r1, r9, sl, fp, ip}
     168:	1c000001 	stcne	0, cr0, [r0], {1}
     16c:	0000c808 	andeq	ip, r0, r8, lsl #16
     170:	0a1f0200 	beq	7c0978 <startup-0x1f83f688>
     174:	000001ee 	andeq	r0, r0, lr, ror #3
     178:	850d0020 	strhi	r0, [sp, #-32]	; 0xffffffe0
     17c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     180:	00000185 	andeq	r0, r0, r5, lsl #3
     184:	8b040c00 	blhi	10318c <startup-0x1fefce74>
     188:	0f000001 	svceq	0x00000001
     18c:	0000026a 	andeq	r0, r0, sl, ror #4
     190:	017a040c 	cmneq	sl, ip, lsl #8
     194:	a10d0000 	mrsge	r0, (UNDEF: 13)
     198:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     19c:	000001a1 	andeq	r0, r0, r1, lsr #3
     1a0:	a7040c00 	strge	r0, [r4, -r0, lsl #24]
     1a4:	0f000001 	svceq	0x00000001
     1a8:	0000026a 	andeq	r0, r0, sl, ror #4
     1ac:	0196040c 	orrseq	r0, r6, ip, lsl #8
     1b0:	bd0d0000 	stclt	0, cr0, [sp, #-0]
     1b4:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     1b8:	000001bd 			; <UNDEFINED> instruction: 0x000001bd
     1bc:	c3040c00 	movwgt	r0, #19456	; 0x4c00
     1c0:	0f000001 	svceq	0x00000001
     1c4:	0000026a 	andeq	r0, r0, sl, ror #4
     1c8:	01b2040c 			; <UNDEFINED> instruction: 0x01b2040c
     1cc:	e30d0000 	movw	r0, #53248	; 0xd000
     1d0:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     1d4:	000001e3 	andeq	r0, r0, r3, ror #3
     1d8:	0000bf0e 	andeq	fp, r0, lr, lsl #30
     1dc:	00bf0e00 	adcseq	r0, pc, r0, lsl #28
     1e0:	0c000000 	stceq	0, cr0, [r0], {-0}
     1e4:	0001e904 	andeq	lr, r1, r4, lsl #18
     1e8:	026a0f00 	rsbeq	r0, sl, #0, 30
     1ec:	040c0000 	streq	r0, [ip], #-0
     1f0:	000001ce 	andeq	r0, r0, lr, asr #3
     1f4:	0002ae07 	andeq	sl, r2, r7, lsl #28
     1f8:	02200200 	eoreq	r0, r0, #0, 4
     1fc:	000000fb 	strdeq	r0, [r0], -fp
     200:	0002ad07 	andeq	sl, r2, r7, lsl #26
     204:	0b200200 	bleq	800a0c <startup-0x1f7ff5f4>
     208:	0000020c 	andeq	r0, r0, ip, lsl #4
     20c:	00fb040c 	rscseq	r0, fp, ip, lsl #8
     210:	1c100000 	ldcne	0, cr0, [r0], {-0}
     214:	02000001 	andeq	r0, r0, #1
     218:	00dd122d 	sbcseq	r1, sp, sp, lsr #4
     21c:	03050000 	movweq	r0, #20480	; 0x5000
     220:	20000e14 	andcs	r0, r0, r4, lsl lr
     224:	0000dc10 	andeq	sp, r0, r0, lsl ip
     228:	11360200 	teqne	r6, r0, lsl #4
     22c:	000000dd 	ldrdeq	r0, [r0], -sp
     230:	0ea00305 	cdpeq	3, 10, cr0, cr0, cr5, {0}
     234:	96102000 	ldrls	r2, [r0], -r0
     238:	02000000 	andeq	r0, r0, #0
     23c:	00dd113e 	sbcseq	r1, sp, lr, lsr r1
     240:	03050000 	movweq	r0, #20480	; 0x5000
     244:	20000f2c 	andcs	r0, r0, ip, lsr #30
     248:	00018310 	andeq	r8, r1, r0, lsl r3
     24c:	0f4c0200 	svceq	0x004c0200
     250:	000001f4 	strdeq	r0, [r0], -r4
     254:	0fb80305 	svceq	0x00b80305
     258:	32102000 	andscc	r2, r0, #0
     25c:	02000001 	andeq	r0, r0, #1
     260:	01f40f56 	mvnseq	r0, r6, asr pc
     264:	03050000 	movweq	r0, #20480	; 0x5000
     268:	20000fdc 	ldrdcs	r0, [r0], -ip
     26c:	00013a10 	andeq	r3, r1, r0, lsl sl
     270:	0f610200 	svceq	0x00610200
     274:	000001f4 	strdeq	r0, [r0], -r4
     278:	10000305 	andne	r0, r0, r5, lsl #6
     27c:	36102000 	ldrcc	r2, [r0], -r0
     280:	02000002 	andeq	r0, r0, #2
     284:	01f40f6b 	mvnseq	r0, fp, ror #30
     288:	03050000 	movweq	r0, #20480	; 0x5000
     28c:	20001024 	andcs	r1, r0, r4, lsr #32
     290:	0000ea11 	andeq	lr, r0, r1, lsl sl
     294:	05690100 	strbeq	r0, [r9, #-256]!	; 0xffffff00
     298:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     29c:	200002d6 	ldrdcs	r0, [r0], -r6
     2a0:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
     2a4:	033f9c01 	teqeq	pc, #256	; 0x100
     2a8:	6f120000 	svcvs	0x00120000
     2ac:	69010031 	stmdbvs	r1, {r0, r4, r5}
     2b0:	0002001b 	andeq	r0, r2, fp, lsl r0
     2b4:	4c910200 	lfmmi	f0, 4, [r1], {0}
     2b8:	00326f12 	eorseq	r6, r2, r2, lsl pc
     2bc:	00276901 	eoreq	r6, r7, r1, lsl #18
     2c0:	02000002 	andeq	r0, r0, #2
     2c4:	0a104891 	beq	412510 <startup-0x1fbedaf0>
     2c8:	01000000 	mrseq	r0, (UNDEF: 0)
     2cc:	00760b6b 	rsbseq	r0, r6, fp, ror #22
     2d0:	91020000 	mrsls	r0, (UNDEF: 2)
     2d4:	026f106c 	rsbeq	r1, pc, #108	; 0x6c
     2d8:	6c010000 	stcvs	0, cr0, [r1], {-0}
     2dc:	0000760b 	andeq	r7, r0, fp, lsl #12
     2e0:	68910200 	ldmvs	r1, {r9}
     2e4:	00008710 	andeq	r8, r0, r0, lsl r7
     2e8:	086e0100 	stmdaeq	lr!, {r8}^
     2ec:	00000076 	andeq	r0, r0, r6, ror r0
     2f0:	10649102 	rsbne	r9, r4, r2, lsl #2
     2f4:	0000004a 	andeq	r0, r0, sl, asr #32
     2f8:	760b6f01 	strvc	r6, [fp], -r1, lsl #30
     2fc:	02000000 	andeq	r0, r0, #0
     300:	0e106091 	mrceq	0, 0, r6, cr0, cr1, {4}
     304:	01000001 	tsteq	r0, r1
     308:	00760b71 	rsbseq	r0, r6, r1, ror fp
     30c:	91020000 	mrsls	r0, (UNDEF: 2)
     310:	024e105c 	subeq	r1, lr, #92	; 0x5c
     314:	72010000 	andvc	r0, r1, #0
     318:	0000760b 	andeq	r7, r0, fp, lsl #12
     31c:	58910200 	ldmpl	r1, {r9}
     320:	00014210 	andeq	r4, r1, r0, lsl r2
     324:	0b730100 	bleq	1cc072c <startup-0x1e33f8d4>
     328:	00000076 	andeq	r0, r0, r6, ror r0
     32c:	10549102 	subsne	r9, r4, r2, lsl #2
     330:	000000f8 	strdeq	r0, [r0], -r8
     334:	760b7401 	strvc	r7, [fp], -r1, lsl #8
     338:	02000000 	andeq	r0, r0, #0
     33c:	13005091 	movwne	r5, #145	; 0x91
     340:	00000222 	andeq	r0, r0, r2, lsr #4
     344:	bf055e01 	svclt	0x00055e01
     348:	80000000 	andhi	r0, r0, r0
     34c:	56200002 	strtpl	r0, [r0], -r2
     350:	01000000 	mrseq	r0, (UNDEF: 0)
     354:	0003879c 	muleq	r3, ip, r7
     358:	01081400 	tsteq	r8, r0, lsl #8
     35c:	5e010000 	cdppl	0, 0, cr0, cr1, cr0, {0}
     360:	00007618 	andeq	r7, r0, r8, lsl r6
     364:	6c910200 	lfmvs	f0, 4, [r1], {0}
     368:	00000d14 	andeq	r0, r0, r4, lsl sp
     36c:	255e0100 	ldrbcs	r0, [lr, #-256]	; 0xffffff00
     370:	00000076 	andeq	r0, r0, r6, ror r0
     374:	14689102 	strbtne	r9, [r8], #-258	; 0xfffffefe
     378:	00000272 	andeq	r0, r0, r2, ror r2
     37c:	76375e01 	ldrtvc	r5, [r7], -r1, lsl #28
     380:	02000000 	andeq	r0, r0, #0
     384:	15006491 	strne	r6, [r0, #-1169]	; 0xfffffb6f
     388:	0000028f 	andeq	r0, r0, pc, lsl #5
     38c:	ca064601 	bgt	191b98 <startup-0x1fe6e468>
     390:	b6200001 	strtlt	r0, [r0], -r1
     394:	01000000 	mrseq	r0, (UNDEF: 0)
     398:	0003d29c 	muleq	r3, ip, r2
     39c:	006f1200 	rsbeq	r1, pc, r0, lsl #4
     3a0:	001f4601 	andseq	r4, pc, r1, lsl #12
     3a4:	02000002 	andeq	r0, r0, #2
     3a8:	78166491 	ldmdavc	r6, {r0, r4, r7, sl, sp, lr}
     3ac:	06480100 	strbeq	r0, [r8], -r0, lsl #2
     3b0:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     3b4:	16749102 	ldrbtne	r9, [r4], -r2, lsl #2
     3b8:	49010079 	stmdbmi	r1, {r0, r3, r4, r5, r6}
     3bc:	0000bf06 	andeq	fp, r0, r6, lsl #30
     3c0:	70910200 	addsvc	r0, r1, r0, lsl #4
     3c4:	01006316 	tsteq	r0, r6, lsl r3
     3c8:	00bf064c 	adcseq	r0, pc, ip, asr #12
     3cc:	91020000 	mrsls	r0, (UNDEF: 2)
     3d0:	b517006c 	ldrlt	r0, [r7, #-108]	; 0xffffff94
     3d4:	01000002 	tsteq	r0, r2
     3d8:	01a6063d 			; <UNDEFINED> instruction: 0x01a6063d
     3dc:	00242000 	eoreq	r2, r4, r0
     3e0:	9c010000 	stcls	0, cr0, [r1], {-0}
     3e4:	00000421 	andeq	r0, r0, r1, lsr #8
     3e8:	01006f12 	tsteq	r0, r2, lsl pc
     3ec:	02001f3d 	andeq	r1, r0, #61, 30	; 0xf4
     3f0:	91020000 	mrsls	r0, (UNDEF: 2)
     3f4:	029f146c 	addseq	r1, pc, #108, 8	; 0x6c000000
     3f8:	3d010000 	stccc	0, cr0, [r1, #-0]
     3fc:	0000bf26 	andeq	fp, r0, r6, lsr #30
     400:	68910200 	ldmvs	r1, {r9}
     404:	0002a614 	andeq	sl, r2, r4, lsl r6
     408:	323d0100 	eorscc	r0, sp, #0, 2
     40c:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     410:	16649102 	strbtne	r9, [r4], -r2, lsl #2
     414:	3e010063 	cdpcc	0, 0, cr0, cr1, cr3, {3}
     418:	0000bf06 	andeq	fp, r0, r6, lsl #30
     41c:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     420:	00aa1500 	adceq	r1, sl, r0, lsl #10
     424:	2a010000 	bcs	4042c <startup-0x1ffbfbd4>
     428:	00012e06 	andeq	r2, r1, r6, lsl #28
     42c:	00007820 	andeq	r7, r0, r0, lsr #16
     430:	7b9c0100 	blvc	fe700838 <l+0xde6ff5b0>
     434:	12000004 	andne	r0, r0, #4
     438:	2a01006f 	bcs	405fc <startup-0x1ffbfa04>
     43c:	00020021 	andeq	r0, r2, r1, lsr #32
     440:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     444:	00786416 	rsbseq	r6, r8, r6, lsl r4
     448:	bf062c01 	svclt	0x00062c01
     44c:	02000000 	andeq	r0, r0, #0
     450:	64167491 	ldrvs	r7, [r6], #-1169	; 0xfffffb6f
     454:	2d010079 	stccs	0, cr0, [r1, #-484]	; 0xfffffe1c
     458:	0000bf06 	andeq	fp, r0, r6, lsl #30
     45c:	70910200 	addsvc	r0, r1, r0, lsl #4
     460:	01007816 	tsteq	r0, r6, lsl r8
     464:	00bf062e 	adcseq	r0, pc, lr, lsr #12
     468:	91020000 	mrsls	r0, (UNDEF: 2)
     46c:	0079166c 	rsbseq	r1, r9, ip, ror #12
     470:	bf062f01 	svclt	0x00062f01
     474:	02000000 	andeq	r0, r0, #0
     478:	15006891 	strne	r6, [r0, #-2193]	; 0xfffff76f
     47c:	0000025d 	andeq	r0, r0, sp, asr r2
     480:	ac061a01 			; <UNDEFINED> instruction: 0xac061a01
     484:	82200000 	eorhi	r0, r0, #0
     488:	01000000 	mrseq	r0, (UNDEF: 0)
     48c:	0005429c 	muleq	r5, ip, r2
     490:	006f1200 	rsbeq	r1, pc, r0, lsl #4
     494:	001b1a01 	andseq	r1, fp, r1, lsl #20
     498:	02000002 	andeq	r0, r0, #2
     49c:	67164491 			; <UNDEFINED> instruction: 0x67164491
     4a0:	01006f65 	tsteq	r0, r5, ror #30
     4a4:	00e90c1c 	rsceq	r0, r9, ip, lsl ip
     4a8:	91020000 	mrsls	r0, (UNDEF: 2)
     4ac:	01511068 	cmpeq	r1, r8, rrx
     4b0:	1d010000 	stcne	0, cr0, [r1, #-0]
     4b4:	00054209 	andeq	r4, r5, r9, lsl #4
     4b8:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     4bc:	00022f10 	andeq	r2, r2, r0, lsl pc
     4c0:	061e0100 	ldreq	r0, [lr], -r0, lsl #2
     4c4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     4c8:	16609102 	strbtne	r9, [r0], -r2, lsl #2
     4cc:	1f010078 	svcne	0x00010078
     4d0:	0000bf06 	andeq	fp, r0, r6, lsl #30
     4d4:	5c910200 	lfmpl	f0, 4, [r1], {0}
     4d8:	01007916 	tsteq	r0, r6, lsl r9
     4dc:	00bf0620 	adcseq	r0, pc, r0, lsr #12
     4e0:	91020000 	mrsls	r0, (UNDEF: 2)
     4e4:	00d21858 	sbcseq	r1, r2, r8, asr r8
     4e8:	00522000 	subseq	r2, r2, r0
     4ec:	69160000 	ldmdbvs	r6, {}	; <UNPREDICTABLE>
     4f0:	0a210100 	beq	8408f8 <startup-0x1f7bf708>
     4f4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     4f8:	186c9102 	stmdane	ip!, {r1, r8, ip, pc}^
     4fc:	200000d8 	ldrdcs	r0, [r0], -r8
     500:	0000003e 	andeq	r0, r0, lr, lsr r0
     504:	00008110 	andeq	r8, r0, r0, lsl r1
     508:	09220100 	stmdbeq	r2!, {r8}
     50c:	00000076 	andeq	r0, r0, r6, ror r0
     510:	104c9102 	subne	r9, ip, r2, lsl #2
     514:	0000012c 	andeq	r0, r0, ip, lsr #2
     518:	bf072301 	svclt	0x00072301
     51c:	02000000 	andeq	r0, r0, #0
     520:	89105491 	ldmdbhi	r0, {r0, r4, r7, sl, ip, lr}
     524:	01000002 	tsteq	r0, r2
     528:	00bf0724 	adcseq	r0, pc, r4, lsr #14
     52c:	91020000 	mrsls	r0, (UNDEF: 2)
     530:	00591950 	subseq	r1, r9, r0, asr r9
     534:	25010000 	strcs	r0, [r1, #-0]
     538:	0000bf03 	andeq	fp, r0, r3, lsl #30
     53c:	00001a00 	andeq	r1, r0, r0, lsl #20
     540:	040c0000 	streq	r0, [ip], #-0
     544:	00000076 	andeq	r0, r0, r6, ror r0
     548:	0000bc1b 	andeq	fp, r0, fp, lsl ip
     54c:	06070100 	streq	r0, [r7], -r0, lsl #2
     550:	20000010 	andcs	r0, r0, r0, lsl r0
     554:	0000009c 	muleq	r0, ip, r0
     558:	6f129c01 	svcvs	0x00129c01
     55c:	1a070100 	bne	1c0964 <startup-0x1fe3f69c>
     560:	00000200 	andeq	r0, r0, r0, lsl #4
     564:	16449102 	strbne	r9, [r4], -r2, lsl #2
     568:	006f6567 	rsbeq	r6, pc, r7, ror #10
     56c:	e90c0901 	stmdb	ip, {r0, r8, fp}
     570:	02000000 	andeq	r0, r0, #0
     574:	51106891 			; <UNDEFINED> instruction: 0x51106891
     578:	01000001 	tsteq	r0, r1
     57c:	0542090a 	strbeq	r0, [r2, #-2314]	; 0xfffff6f6
     580:	91020000 	mrsls	r0, (UNDEF: 2)
     584:	022f1064 	eoreq	r1, pc, #100	; 0x64
     588:	0b010000 	bleq	40590 <startup-0x1ffbfa70>
     58c:	0000bf06 	andeq	fp, r0, r6, lsl #30
     590:	60910200 	addsvs	r0, r1, r0, lsl #4
     594:	01007816 	tsteq	r0, r6, lsl r8
     598:	00bf060c 	adcseq	r0, pc, ip, lsl #12
     59c:	91020000 	mrsls	r0, (UNDEF: 2)
     5a0:	0079165c 	rsbseq	r1, r9, ip, asr r6
     5a4:	bf061101 	svclt	0x00061101
     5a8:	02000000 	andeq	r0, r0, #0
     5ac:	4a185891 	bmi	6167f8 <startup-0x1f9e9808>
     5b0:	52200000 	eorpl	r0, r0, #0
     5b4:	16000000 	strne	r0, [r0], -r0
     5b8:	12010069 	andne	r0, r1, #105	; 0x69
     5bc:	0000bf0a 	andeq	fp, r0, sl, lsl #30
     5c0:	6c910200 	lfmvs	f0, 4, [r1], {0}
     5c4:	00005018 	andeq	r5, r0, r8, lsl r0
     5c8:	00003e20 	andeq	r3, r0, r0, lsr #28
     5cc:	00811000 	addeq	r1, r1, r0
     5d0:	13010000 	movwne	r0, #4096	; 0x1000
     5d4:	00007609 	andeq	r7, r0, r9, lsl #12
     5d8:	4c910200 	lfmmi	f0, 4, [r1], {0}
     5dc:	00012c10 	andeq	r2, r1, r0, lsl ip
     5e0:	07140100 	ldreq	r0, [r4, -r0, lsl #2]
     5e4:	000000bf 	strheq	r0, [r0], -pc	; <UNPREDICTABLE>
     5e8:	10549102 	subsne	r9, r4, r2, lsl #2
     5ec:	00000289 	andeq	r0, r0, r9, lsl #5
     5f0:	bf071501 	svclt	0x00071501
     5f4:	02000000 	andeq	r0, r0, #0
     5f8:	94195091 	ldrls	r5, [r9], #-145	; 0xffffff6f
     5fc:	01000001 	tsteq	r0, r1
     600:	00bf0316 	adcseq	r0, pc, r6, lsl r3	; <UNPREDICTABLE>
     604:	001a0000 	andseq	r0, sl, r0
     608:	00000000 	andeq	r0, r0, r0
     60c:	0000017b 	andeq	r0, r0, fp, ror r1
     610:	01b70004 			; <UNDEFINED> instruction: 0x01b70004
     614:	01040000 	mrseq	r0, (UNDEF: 4)
     618:	000001a6 	andeq	r0, r0, r6, lsr #3
     61c:	0002f70c 	andeq	pc, r2, ip, lsl #14
     620:	00015c00 	andeq	r5, r1, r0, lsl #24
     624:	00048c00 	andeq	r8, r4, r0, lsl #24
     628:	0000ec20 	andeq	lr, r0, r0, lsr #24
     62c:	00030100 	andeq	r0, r3, r0, lsl #2
     630:	02040200 	andeq	r0, r4, #0, 4
     634:	006f0307 	rsbeq	r0, pc, r7, lsl #6
     638:	60030000 	andvs	r0, r3, r0
     63c:	02000003 	andeq	r0, r0, #3
     640:	006f1108 	rsbeq	r1, pc, r8, lsl #2
     644:	01040000 	mrseq	r0, (UNDEF: 4)
     648:	ea03001f 	b	c06cc <startup-0x1ff3f934>
     64c:	02000002 	andeq	r0, r0, #2
     650:	006f1109 	rsbeq	r1, pc, r9, lsl #2
     654:	01040000 	mrseq	r0, (UNDEF: 4)
     658:	da03001e 	ble	c06d8 <startup-0x1ff3f928>
     65c:	02000002 	andeq	r0, r0, #2
     660:	006f110a 	rsbeq	r1, pc, sl, lsl #2
     664:	01040000 	mrseq	r0, (UNDEF: 4)
     668:	6703001d 	smladvs	r3, sp, r0, r0
     66c:	02000003 	andeq	r0, r0, #3
     670:	006f110c 	rsbeq	r1, pc, ip, lsl #2
     674:	01040000 	mrseq	r0, (UNDEF: 4)
     678:	04000010 	streq	r0, [r0], #-16
     67c:	04070704 	streq	r0, [r7], #-1796	; 0xfffff8fc
     680:	04050000 	streq	r0, [r5], #-0
     684:	91020502 	tstls	r2, r2, lsl #10
     688:	06000000 	streq	r0, [r0], -r0
     68c:	000002c6 	andeq	r0, r0, r6, asr #5
     690:	6f100602 	svcvs	0x00100602
     694:	07000000 	streq	r0, [r0, -r0]
     698:	00000025 	andeq	r0, r0, r5, lsr #32
     69c:	02100200 	andseq	r0, r0, #0, 4
     6a0:	00e11204 	rsceq	r1, r1, r4, lsl #4
     6a4:	76080000 	strvc	r0, [r8], -r0
     6a8:	00000000 	andeq	r0, r0, r0
     6ac:	0002f203 	andeq	pc, r2, r3, lsl #4
     6b0:	0f100200 	svceq	0x00100200
     6b4:	0000006f 	andeq	r0, r0, pc, rrx
     6b8:	04081804 	streq	r1, [r8], #-2052	; 0xfffff7fc
     6bc:	4c415609 	mcrrmi	6, 0, r5, r1, cr9
     6c0:	0f120200 	svceq	0x00120200
     6c4:	0000006f 	andeq	r0, r0, pc, rrx
     6c8:	08081804 	stmdaeq	r8, {r2, fp, ip}
     6cc:	0002e403 	andeq	lr, r2, r3, lsl #8
     6d0:	0f140200 	svceq	0x00140200
     6d4:	0000006f 	andeq	r0, r0, pc, rrx
     6d8:	0c081804 	stceq	8, cr1, [r8], {4}
     6dc:	00032603 	andeq	r2, r3, r3, lsl #12
     6e0:	0f160200 	svceq	0x00160200
     6e4:	0000006f 	andeq	r0, r0, pc, rrx
     6e8:	0c000204 	sfmeq	f0, 4, [r0], {4}
     6ec:	00910a00 	addseq	r0, r1, r0, lsl #20
     6f0:	400b0000 	andmi	r0, fp, r0
     6f4:	02000003 	andeq	r0, r0, #3
     6f8:	00e10217 	rsceq	r0, r1, r7, lsl r2
     6fc:	cb0c0000 	blgt	300704 <startup-0x1fcff8fc>
     700:	01000002 	tsteq	r0, r2
     704:	053a0625 	ldreq	r0, [sl, #-1573]!	; 0xfffff9db
     708:	003e2000 	eorseq	r2, lr, r0
     70c:	9c010000 	stcls	0, cr0, [r1], {-0}
     710:	0003480d 	andeq	r4, r3, sp, lsl #16
     714:	061b0100 	ldreq	r0, [fp], -r0, lsl #2
     718:	2000050a 	andcs	r0, r0, sl, lsl #10
     71c:	00000030 	andeq	r0, r0, r0, lsr r0
     720:	01299c01 			; <UNDEFINED> instruction: 0x01299c01
     724:	750e0000 	strvc	r0, [lr, #-0]
     728:	1b010073 	blne	408fc <startup-0x1ffbf704>
     72c:	00006f1f 	andeq	r6, r0, pc, lsl pc
     730:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     734:	03540d00 	cmpeq	r4, #0, 26
     738:	0e010000 	cdpeq	0, 0, cr0, cr1, cr0, {0}
     73c:	0004d406 	andeq	sp, r4, r6, lsl #8
     740:	00003620 	andeq	r3, r0, r0, lsr #12
     744:	659c0100 	ldrvs	r0, [ip, #256]	; 0x100
     748:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
     74c:	0100736d 	tsteq	r0, sp, ror #6
     750:	006f1f0e 	rsbeq	r1, pc, lr, lsl #30
     754:	91020000 	mrsls	r0, (UNDEF: 2)
     758:	04de0f6c 	ldrbeq	r0, [lr], #3948	; 0xf6c
     75c:	001c2000 	andseq	r2, ip, r0
     760:	69100000 	ldmdbvs	r0, {}	; <UNPREDICTABLE>
     764:	07110100 	ldreq	r0, [r1, -r0, lsl #2]
     768:	00000165 	andeq	r0, r0, r5, ror #2
     76c:	00749102 	rsbseq	r9, r4, r2, lsl #2
     770:	05041100 	streq	r1, [r4, #-256]	; 0xffffff00
     774:	00746e69 	rsbseq	r6, r4, r9, ror #28
     778:	0003340c 	andeq	r3, r3, ip, lsl #8
     77c:	06050100 	streq	r0, [r5], -r0, lsl #2
     780:	2000048c 	andcs	r0, r0, ip, lsl #9
     784:	00000048 	andeq	r0, r0, r8, asr #32
     788:	4e009c01 	cdpmi	12, 0, cr9, cr0, cr1, {0}
     78c:	04000004 	streq	r0, [r0], #-4
     790:	0002c300 	andeq	ip, r2, r0, lsl #6
     794:	a6010400 	strge	r0, [r1], -r0, lsl #8
     798:	0c000001 	stceq	0, cr0, [r0], {1}
     79c:	000004c2 	andeq	r0, r0, r2, asr #9
     7a0:	0000015c 	andeq	r0, r0, ip, asr r1
     7a4:	20000578 	andcs	r0, r0, r8, ror r5
     7a8:	00000376 	andeq	r0, r0, r6, ror r3
     7ac:	000003f8 	strdeq	r0, [r0], -r8
     7b0:	0e020402 	cdpeq	4, 0, cr0, cr2, cr2, {0}
     7b4:	00005603 	andeq	r5, r0, r3, lsl #12
     7b8:	05150300 	ldreq	r0, [r5, #-768]	; 0xfffffd00
     7bc:	0f020000 	svceq	0x00020000
     7c0:	00005612 	andeq	r5, r0, r2, lsl r6
     7c4:	b3030000 	movwlt	r0, #12288	; 0x3000
     7c8:	02000004 	andeq	r0, r0, #4
     7cc:	00561210 	subseq	r1, r6, r0, lsl r2
     7d0:	03010000 	movweq	r0, #4096	; 0x1000
     7d4:	000003a2 	andeq	r0, r0, r2, lsr #7
     7d8:	5d131102 	ldfpls	f1, [r3, #-8]
     7dc:	02000000 	andeq	r0, r0, #0
     7e0:	08010400 	stmdaeq	r1, {sl}
     7e4:	000003d1 	ldrdeq	r0, [r0], -r1
     7e8:	01070204 	tsteq	r7, r4, lsl #4
     7ec:	05000004 	streq	r0, [r0, #-4]
     7f0:	020c0204 	andeq	r0, ip, #4, 4	; 0x40000000
     7f4:	0000007f 	andeq	r0, r0, pc, ror r0
     7f8:	52444906 	subpl	r4, r4, #98304	; 0x18000
     7fc:	120d0200 	andne	r0, sp, #0, 4
     800:	0000005d 	andeq	r0, r0, sp, asr r0
     804:	00002507 	andeq	r2, r0, r7, lsl #10
     808:	04020000 	streq	r0, [r2], #-0
     80c:	b0031602 	andlt	r1, r3, r2, lsl #12
     810:	03000000 	movweq	r0, #0
     814:	000004bb 			; <UNDEFINED> instruction: 0x000004bb
     818:	56121702 	ldrpl	r1, [r2], -r2, lsl #14
     81c:	00000000 	andeq	r0, r0, r0
     820:	0003f903 	andeq	pc, r3, r3, lsl #18
     824:	12180200 	andsne	r0, r8, #0, 4
     828:	00000056 	andeq	r0, r0, r6, asr r0
     82c:	051c0301 	ldreq	r0, [ip, #-769]	; 0xfffffcff
     830:	19020000 	stmdbne	r2, {}	; <UNPREDICTABLE>
     834:	00005d13 	andeq	r5, r0, r3, lsl sp
     838:	05000200 	streq	r0, [r0, #-512]	; 0xfffffe00
     83c:	02140204 	andseq	r0, r4, #4, 4	; 0x40000000
     840:	000000cb 	andeq	r0, r0, fp, asr #1
     844:	52444f06 	subpl	r4, r4, #6, 30
     848:	12150200 	andsne	r0, r5, #0, 4
     84c:	0000005d 	andeq	r0, r0, sp, asr r0
     850:	00007f07 	andeq	r7, r0, r7, lsl #30
     854:	28020000 	stmdacs	r2, {}	; <UNPREDICTABLE>
     858:	4c120602 	ldcmi	6, cr0, [r2], {2}
     85c:	03000001 	movweq	r0, #1
     860:	00000391 	muleq	r0, r1, r3
     864:	510f0702 	tstpl	pc, r2, lsl #14
     868:	00000001 	andeq	r0, r0, r1
     86c:	0003bd03 	andeq	fp, r3, r3, lsl #26
     870:	11080200 	mrsne	r0, R8_fiq
     874:	0000005d 	andeq	r0, r0, sp, asr r0
     878:	03710304 	cmneq	r1, #4, 6	; 0x10000000
     87c:	0a020000 	beq	80884 <startup-0x1ff7f77c>
     880:	0001510f 	andeq	r5, r1, pc, lsl #2
     884:	98030800 	stmdals	r3, {fp}
     888:	02000004 	andeq	r0, r0, #4
     88c:	01510f0b 	cmpeq	r1, fp, lsl #30
     890:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
     894:	00000064 	andeq	r0, r0, r4, rrx
     898:	00b00810 	adcseq	r0, r0, r0, lsl r8
     89c:	03140000 	tsteq	r4, #0
     8a0:	000003b0 			; <UNDEFINED> instruction: 0x000003b0
     8a4:	510f1c02 	tstpl	pc, r2, lsl #24
     8a8:	18000001 	stmdane	r0, {r0}
     8ac:	00053c09 	andeq	r3, r5, r9, lsl #24
     8b0:	0f1d0200 	svceq	0x001d0200
     8b4:	00000151 	andeq	r0, r0, r1, asr r1
     8b8:	1c0f1104 	stfnes	f1, [pc], {4}
     8bc:	00041403 	andeq	r1, r4, r3, lsl #8
     8c0:	0f1f0200 	svceq	0x001f0200
     8c4:	00000151 	andeq	r0, r0, r1, asr r1
     8c8:	04650320 	strbteq	r0, [r5], #-800	; 0xfffffce0
     8cc:	20020000 	andcs	r0, r2, r0
     8d0:	0001510f 	andeq	r5, r1, pc, lsl #2
     8d4:	0a002400 	beq	98dc <startup-0x1fff6724>
     8d8:	000000cb 	andeq	r0, r0, fp, asr #1
     8dc:	07070404 	streq	r0, [r7, -r4, lsl #8]
     8e0:	0b000004 	bleq	8f8 <startup-0x1ffff708>
     8e4:	00000419 	andeq	r0, r0, r9, lsl r4
     8e8:	4c022202 	sfmmi	f2, 4, [r2], {2}
     8ec:	0c000001 	stceq	0, cr0, [r0], {1}
     8f0:	000003c4 	andeq	r0, r0, r4, asr #7
     8f4:	b6067e01 	strlt	r7, [r6], -r1, lsl #28
     8f8:	38200008 	stmdacc	r0!, {r3}
     8fc:	01000000 	mrseq	r0, (UNDEF: 0)
     900:	0001a49c 	muleq	r1, ip, r4
     904:	00780d00 	rsbseq	r0, r8, r0, lsl #26
     908:	a4187e01 	ldrge	r7, [r8], #-3585	; 0xfffff1ff
     90c:	02000001 	andeq	r0, r0, #1
     910:	790d6c91 	stmdbvc	sp, {r0, r4, r7, sl, fp, sp, lr}
     914:	1f7e0100 	svcne	0x007e0100
     918:	000001a4 	andeq	r0, r0, r4, lsr #3
     91c:	0e689102 	lgneqe	f1, f2
     920:	0000046a 	andeq	r0, r0, sl, ror #8
     924:	a4067f01 	strge	r7, [r6], #-3841	; 0xfffff0ff
     928:	02000001 	andeq	r0, r0, #1
     92c:	0f007491 	svceq	0x00007491
     930:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     934:	2b0c0074 	blcs	300b0c <startup-0x1fcff4f4>
     938:	01000005 	tsteq	r0, r5
     93c:	087a0677 	ldmdaeq	sl!, {r0, r1, r2, r4, r5, r6, r9, sl}^
     940:	003c2000 	eorseq	r2, ip, r0
     944:	9c010000 	stcls	0, cr0, [r1], {-0}
     948:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
     94c:	00038410 	andeq	r8, r3, r0, lsl r4
     950:	25770100 	ldrbcs	r0, [r7, #-256]!	; 0xffffff00
     954:	00000056 	andeq	r0, r0, r6, asr r0
     958:	11779102 	cmnne	r7, r2, lsl #2
     95c:	00000348 	andeq	r0, r0, r8, asr #6
     960:	a4027201 	strge	r7, [r2], #-513	; 0xfffffdff
     964:	12000001 	andne	r0, r0, #1
     968:	470c0000 	strmi	r0, [ip, -r0]
     96c:	01000004 	tsteq	r0, r4
     970:	084c0670 	stmdaeq	ip, {r4, r5, r6, r9, sl}^
     974:	002e2000 	eoreq	r2, lr, r0
     978:	9c010000 	stcls	0, cr0, [r1], {-0}
     97c:	00000216 	andeq	r0, r0, r6, lsl r2
     980:	00034813 	andeq	r4, r3, r3, lsl r8
     984:	02720100 	rsbseq	r0, r2, #0, 2
     988:	000001a4 	andeq	r0, r0, r4, lsr #3
     98c:	00000207 	andeq	r0, r0, r7, lsl #4
     990:	54110012 	ldrpl	r0, [r1], #-18	; 0xffffffee
     994:	01000003 	tsteq	r0, r3
     998:	01a4021e 			; <UNDEFINED> instruction: 0x01a4021e
     99c:	00120000 	andseq	r0, r2, r0
     9a0:	049e1400 	ldreq	r1, [lr], #1024	; 0x400
     9a4:	69010000 	stmdbvs	r1, {}	; <UNPREDICTABLE>
     9a8:	00080406 	andeq	r0, r8, r6, lsl #8
     9ac:	00004820 	andeq	r4, r0, r0, lsr #16
     9b0:	479c0100 	ldrmi	r0, [ip, r0, lsl #2]
     9b4:	0d000002 	stceq	0, cr0, [r0, #-8]
     9b8:	69010078 	stmdbvs	r1, {r3, r4, r5, r6}
     9bc:	00024721 	andeq	r4, r2, r1, lsr #14
     9c0:	6f910200 	svcvs	0x00910200
     9c4:	01006315 	tsteq	r0, r5, lsl r3
     9c8:	0247076a 	subeq	r0, r7, #27787264	; 0x1a80000
     9cc:	91020000 	mrsls	r0, (UNDEF: 2)
     9d0:	01040077 	tsteq	r4, r7, ror r0
     9d4:	0003da08 	andeq	sp, r3, r8, lsl #20
     9d8:	04341400 	ldrteq	r1, [r4], #-1024	; 0xfffffc00
     9dc:	63010000 	movwvs	r0, #4096	; 0x1000
     9e0:	0007cc06 	andeq	ip, r7, r6, lsl #24
     9e4:	00003820 	andeq	r3, r0, r0, lsr #16
     9e8:	7f9c0100 	svcvc	0x009c0100
     9ec:	0d000002 	stceq	0, cr0, [r0, #-8]
     9f0:	63010078 	movwvs	r0, #4216	; 0x1078
     9f4:	00005628 	andeq	r5, r0, r8, lsr #12
     9f8:	6f910200 	svcvs	0x00910200
     9fc:	01006315 	tsteq	r0, r5, lsl r3
     a00:	02470764 	subeq	r0, r7, #100, 14	; 0x1900000
     a04:	91020000 	mrsls	r0, (UNDEF: 2)
     a08:	79160077 	ldmdbvc	r6, {r0, r1, r2, r4, r5, r6}
     a0c:	01000003 	tsteq	r0, r3
     a10:	02470659 	subeq	r0, r7, #93323264	; 0x5900000
     a14:	078c0000 	streq	r0, [ip, r0]
     a18:	00402000 	subeq	r2, r0, r0
     a1c:	9c010000 	stcls	0, cr0, [r1], {-0}
     a20:	000002a7 	andeq	r0, r0, r7, lsr #5
     a24:	01006315 	tsteq	r0, r5, lsl r3
     a28:	0247075a 	subeq	r0, r7, #23592960	; 0x1680000
     a2c:	91020000 	mrsls	r0, (UNDEF: 2)
     a30:	df16006f 	svcle	0x0016006f
     a34:	01000003 	tsteq	r0, r3
     a38:	0247064f 	subeq	r0, r7, #82837504	; 0x4f00000
     a3c:	074c0000 	strbeq	r0, [ip, -r0]
     a40:	00402000 	subeq	r2, r0, r0
     a44:	9c010000 	stcls	0, cr0, [r1], {-0}
     a48:	000002cf 	andeq	r0, r0, pc, asr #5
     a4c:	01006315 	tsteq	r0, r5, lsl r3
     a50:	02470750 	subeq	r0, r7, #80, 14	; 0x1400000
     a54:	91020000 	mrsls	r0, (UNDEF: 2)
     a58:	fe0c006f 	cdp2	0, 0, cr0, cr12, cr15, {3}
     a5c:	01000004 	tsteq	r0, r4
     a60:	07100646 	ldreq	r0, [r0, -r6, asr #12]
     a64:	003c2000 	eorseq	r2, ip, r0
     a68:	9c010000 	stcls	0, cr0, [r1], {-0}
     a6c:	00000313 	andeq	r0, r0, r3, lsl r3
     a70:	0100630d 	tsteq	r0, sp, lsl #6
     a74:	00562c46 	subseq	r2, r6, r6, asr #24
     a78:	91020000 	mrsls	r0, (UNDEF: 2)
     a7c:	03541377 	cmpeq	r4, #-603979775	; 0xdc000001
     a80:	1e010000 	cdpne	0, 0, cr0, cr1, cr0, {0}
     a84:	0001a402 	andeq	sl, r1, r2, lsl #8
     a88:	00030400 	andeq	r0, r3, r0, lsl #8
     a8c:	11001200 	mrsne	r1, R8_usr
     a90:	00000334 	andeq	r0, r0, r4, lsr r3
     a94:	a4023e01 	strge	r3, [r2], #-3585	; 0xfffff1ff
     a98:	12000001 	andne	r0, r0, #1
     a9c:	1e160000 	cdpne	0, 1, cr0, cr6, cr0, {0}
     aa0:	01000004 	tsteq	r0, r4
     aa4:	0247063a 	subeq	r0, r7, #60817408	; 0x3a00000
     aa8:	06ca0000 	strbeq	r0, [sl], r0
     aac:	00462000 	subeq	r2, r6, r0
     ab0:	9c010000 	stcls	0, cr0, [r1], {-0}
     ab4:	00000349 	andeq	r0, r0, r9, asr #6
     ab8:	01006315 	tsteq	r0, r5, lsl r3
     abc:	0247073c 	subeq	r0, r7, #60, 14	; 0xf00000
     ac0:	91020000 	mrsls	r0, (UNDEF: 2)
     ac4:	03341177 	teqeq	r4, #-1073741795	; 0xc000001d
     ac8:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
     acc:	0001a402 	andeq	sl, r1, r2, lsl #8
     ad0:	00001200 	andeq	r1, r0, r0, lsl #4
     ad4:	0004870c 	andeq	r8, r4, ip, lsl #14
     ad8:	06320100 	ldrteq	r0, [r2], -r0, lsl #2
     adc:	200006a0 	andcs	r0, r0, r0, lsr #13
     ae0:	0000002a 	andeq	r0, r0, sl, lsr #32
     ae4:	036f9c01 	cmneq	pc, #256	; 0x100
     ae8:	84100000 	ldrhi	r0, [r0], #-0
     aec:	01000003 	tsteq	r0, r3
     af0:	00562532 	subseq	r2, r6, r2, lsr r5
     af4:	91020000 	mrsls	r0, (UNDEF: 2)
     af8:	550c0077 	strpl	r0, [ip, #-119]	; 0xffffff89
     afc:	01000004 	tsteq	r0, r4
     b00:	0676062a 	ldrbteq	r0, [r6], -sl, lsr #12
     b04:	002a2000 	eoreq	r2, sl, r0
     b08:	9c010000 	stcls	0, cr0, [r1], {-0}
     b0c:	00000395 	muleq	r0, r5, r3
     b10:	646d630d 	strbtvs	r6, [sp], #-781	; 0xfffffcf3
     b14:	242a0100 	strtcs	r0, [sl], #-256	; 0xffffff00
     b18:	00000056 	andeq	r0, r0, r6, asr r0
     b1c:	00779102 	rsbseq	r9, r7, r2, lsl #2
     b20:	0003970c 	andeq	r9, r3, ip, lsl #14
     b24:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
     b28:	20000638 	andcs	r0, r0, r8, lsr r6
     b2c:	0000003e 	andeq	r0, r0, lr, lsr r0
     b30:	03ba9c01 			; <UNDEFINED> instruction: 0x03ba9c01
     b34:	54110000 	ldrpl	r0, [r1], #-0
     b38:	01000003 	tsteq	r0, r3
     b3c:	01a4021e 			; <UNDEFINED> instruction: 0x01a4021e
     b40:	00120000 	andseq	r0, r2, r0
     b44:	04721600 	ldrbteq	r1, [r2], #-1536	; 0xfffffa00
     b48:	06010000 	streq	r0, [r1], -r0
     b4c:	00024706 	andeq	r4, r2, r6, lsl #14
     b50:	00057800 	andeq	r7, r5, r0, lsl #16
     b54:	0000c020 	andeq	ip, r0, r0, lsr #32
     b58:	2f9c0100 	svccs	0x009c0100
     b5c:	10000004 	andne	r0, r0, r4
     b60:	000003ab 	andeq	r0, r0, fp, lsr #7
     b64:	47200601 	strmi	r0, [r0, -r1, lsl #12]!
     b68:	03000002 	movweq	r0, #2
     b6c:	107fbf91 			; <UNDEFINED> instruction: 0x107fbf91
     b70:	00000526 	andeq	r0, r0, r6, lsr #10
     b74:	472b0601 	strmi	r0, [fp, -r1, lsl #12]!
     b78:	03000002 	movweq	r0, #2
     b7c:	157fbe91 	ldrbne	fp, [pc, #-3729]!	; fffffcf3 <l+0xdfffea6b>
     b80:	07010073 	smlsdxeq	r1, r3, r0, r0
     b84:	00042f08 	andeq	r2, r4, r8, lsl #30
     b88:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     b8c:	0003890e 	andeq	r8, r3, lr, lsl #18
     b90:	07080100 	streq	r0, [r8, -r0, lsl #2]
     b94:	00000435 	andeq	r0, r0, r5, lsr r4
     b98:	0e589102 	logeqe	f1, f2
     b9c:	000003f1 	strdeq	r0, [r0], -r1
     ba0:	35070901 	strcc	r0, [r7, #-2305]	; 0xfffff6ff
     ba4:	02000004 	andeq	r0, r0, #4
     ba8:	b50e4c91 	strlt	r4, [lr, #-3217]	; 0xfffff36f
     bac:	01000003 	tsteq	r0, r3
     bb0:	0445070a 	strbeq	r0, [r5], #-1802	; 0xfffff8f6
     bb4:	91020000 	mrsls	r0, (UNDEF: 2)
     bb8:	04170040 	ldreq	r0, [r7], #-64	; 0xffffffc0
     bbc:	00000247 	andeq	r0, r0, r7, asr #4
     bc0:	00024718 	andeq	r4, r2, r8, lsl r7
     bc4:	00044500 	andeq	r4, r4, r0, lsl #10
     bc8:	01511900 	cmpeq	r1, r0, lsl #18
     bcc:	000b0000 	andeq	r0, fp, r0
     bd0:	0002471a 	andeq	r4, r2, sl, lsl r7
     bd4:	01511900 	cmpeq	r1, r0, lsl #18
     bd8:	000a0000 	andeq	r0, sl, r0
     bdc:	00023e00 	andeq	r3, r2, r0, lsl #28
     be0:	51000400 	tstpl	r0, r0, lsl #8
     be4:	04000004 	streq	r0, [r0], #-4
     be8:	0001a601 	andeq	sl, r1, r1, lsl #12
     bec:	05610c00 	strbeq	r0, [r1, #-3072]!	; 0xfffff400
     bf0:	015c0000 	cmpeq	ip, r0
     bf4:	08f00000 	ldmeq	r0!, {}^	; <UNPREDICTABLE>
     bf8:	01b82000 			; <UNDEFINED> instruction: 0x01b82000
     bfc:	05cf0000 	strbeq	r0, [pc]	; c04 <startup-0x1ffff3fc>
     c00:	04020000 	streq	r0, [r2], #-0
     c04:	56030e02 	strpl	r0, [r3], -r2, lsl #28
     c08:	03000000 	movweq	r0, #0
     c0c:	00000515 	andeq	r0, r0, r5, lsl r5
     c10:	56120f02 	ldrpl	r0, [r2], -r2, lsl #30
     c14:	00000000 	andeq	r0, r0, r0
     c18:	0004b303 	andeq	fp, r4, r3, lsl #6
     c1c:	12100200 	andsne	r0, r0, #0, 4
     c20:	00000056 	andeq	r0, r0, r6, asr r0
     c24:	03a20301 			; <UNDEFINED> instruction: 0x03a20301
     c28:	11020000 	mrsne	r0, (UNDEF: 2)
     c2c:	00005d13 	andeq	r5, r0, r3, lsl sp
     c30:	04000200 	streq	r0, [r0], #-512	; 0xfffffe00
     c34:	03d10801 	bicseq	r0, r1, #65536	; 0x10000
     c38:	02040000 	andeq	r0, r4, #0
     c3c:	00040107 	andeq	r0, r4, r7, lsl #2
     c40:	02040500 	andeq	r0, r4, #0, 10
     c44:	007f020c 	rsbseq	r0, pc, ip, lsl #4
     c48:	49060000 	stmdbmi	r6, {}	; <UNPREDICTABLE>
     c4c:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
     c50:	005d120d 	subseq	r1, sp, sp, lsl #4
     c54:	25070000 	strcs	r0, [r7, #-0]
     c58:	00000000 	andeq	r0, r0, r0
     c5c:	16020402 	strne	r0, [r2], -r2, lsl #8
     c60:	0000b003 	andeq	fp, r0, r3
     c64:	04bb0300 	ldrteq	r0, [fp], #768	; 0x300
     c68:	17020000 	strne	r0, [r2, -r0]
     c6c:	00005612 	andeq	r5, r0, r2, lsl r6
     c70:	f9030000 			; <UNDEFINED> instruction: 0xf9030000
     c74:	02000003 	andeq	r0, r0, #3
     c78:	00561218 	subseq	r1, r6, r8, lsl r2
     c7c:	03010000 	movweq	r0, #4096	; 0x1000
     c80:	0000051c 	andeq	r0, r0, ip, lsl r5
     c84:	5d131902 	vldrpl.16	s2, [r3, #-4]	; <UNPREDICTABLE>
     c88:	02000000 	andeq	r0, r0, #0
     c8c:	02040500 	andeq	r0, r4, #0, 10
     c90:	00cb0214 	sbceq	r0, fp, r4, lsl r2
     c94:	4f060000 	svcmi	0x00060000
     c98:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
     c9c:	005d1215 	subseq	r1, sp, r5, lsl r2
     ca0:	7f070000 	svcvc	0x00070000
     ca4:	00000000 	andeq	r0, r0, r0
     ca8:	06022802 	streq	r2, [r2], -r2, lsl #16
     cac:	00014c12 	andeq	r4, r1, r2, lsl ip
     cb0:	03910300 	orrseq	r0, r1, #0, 6
     cb4:	07020000 	streq	r0, [r2, -r0]
     cb8:	0001510f 	andeq	r5, r1, pc, lsl #2
     cbc:	bd030000 	stclt	0, cr0, [r3, #-0]
     cc0:	02000003 	andeq	r0, r0, #3
     cc4:	005d1108 	subseq	r1, sp, r8, lsl #2
     cc8:	03040000 	movweq	r0, #16384	; 0x4000
     ccc:	00000371 	andeq	r0, r0, r1, ror r3
     cd0:	510f0a02 	tstpl	pc, r2, lsl #20
     cd4:	08000001 	stmdaeq	r0, {r0}
     cd8:	00049803 	andeq	r9, r4, r3, lsl #16
     cdc:	0f0b0200 	svceq	0x000b0200
     ce0:	00000151 	andeq	r0, r0, r1, asr r1
     ce4:	0064080c 	rsbeq	r0, r4, ip, lsl #16
     ce8:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
     cec:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
     cf0:	03b00314 	movseq	r0, #20, 6	; 0x50000000
     cf4:	1c020000 	stcne	0, cr0, [r2], {-0}
     cf8:	0001510f 	andeq	r5, r1, pc, lsl #2
     cfc:	3c091800 	stccc	8, cr1, [r9], {-0}
     d00:	02000005 	andeq	r0, r0, #5
     d04:	01510f1d 	cmpeq	r1, sp, lsl pc
     d08:	11040000 	mrsne	r0, (UNDEF: 4)
     d0c:	14031c0f 	strne	r1, [r3], #-3087	; 0xfffff3f1
     d10:	02000004 	andeq	r0, r0, #4
     d14:	01510f1f 	cmpeq	r1, pc, lsl pc
     d18:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     d1c:	00000465 	andeq	r0, r0, r5, ror #8
     d20:	510f2002 	tstpl	pc, r2
     d24:	24000001 	strcs	r0, [r0], #-1
     d28:	00cb0a00 	sbceq	r0, fp, r0, lsl #20
     d2c:	04040000 	streq	r0, [r4], #-0
     d30:	00040707 	andeq	r0, r4, r7, lsl #14
     d34:	04190b00 	ldreq	r0, [r9], #-2816	; 0xfffff500
     d38:	22020000 	andcs	r0, r2, #0
     d3c:	00014c02 	andeq	r4, r1, r2, lsl #24
     d40:	05410c00 	strbeq	r0, [r1, #-3072]	; 0xfffff400
     d44:	35010000 	strcc	r0, [r1, #-0]
     d48:	0001bb06 	andeq	fp, r1, r6, lsl #22
     d4c:	000a2800 	andeq	r2, sl, r0, lsl #16
     d50:	00008020 	andeq	r8, r0, r0, lsr #32
     d54:	bb9c0100 	bllt	fe70115c <l+0xde6ffed4>
     d58:	0d000001 	stceq	0, cr0, [r0, #-4]
     d5c:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
     d60:	bb103501 	bllt	40e16c <startup-0x1fbf1e94>
     d64:	02000001 	andeq	r0, r0, #1
     d68:	520e5791 	andpl	r5, lr, #38010880	; 0x2440000
     d6c:	01000005 	tsteq	r0, r5
     d70:	01c20736 	biceq	r0, r2, r6, lsr r7
     d74:	91020000 	mrsls	r0, (UNDEF: 2)
     d78:	6f720f58 	svcvs	0x00720f58
     d7c:	37010077 	smlsdxcc	r1, r7, r0, r0
     d80:	0001d206 	andeq	sp, r1, r6, lsl #4
     d84:	6c910200 	lfmvs	f0, 4, [r1], {0}
     d88:	6c6f630f 	stclvs	3, cr6, [pc], #-60	; d54 <startup-0x1ffff2ac>
     d8c:	06380100 	ldrteq	r0, [r8], -r0, lsl #2
     d90:	000001d2 	ldrdeq	r0, [r0], -r2
     d94:	00689102 	rsbeq	r9, r8, r2, lsl #2
     d98:	da080104 	ble	2011b0 <startup-0x1fdfee50>
     d9c:	10000003 	andne	r0, r0, r3
     da0:	000001bb 			; <UNDEFINED> instruction: 0x000001bb
     da4:	000001d2 	ldrdeq	r0, [r0], -r2
     da8:	00015111 	andeq	r5, r1, r1, lsl r1
     dac:	12000f00 	andne	r0, r0, #0, 30
     db0:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     db4:	46130074 			; <UNDEFINED> instruction: 0x46130074
     db8:	01000005 	tsteq	r0, r5
     dbc:	09680615 	stmdbeq	r8!, {r0, r2, r4, r9, sl}^
     dc0:	00c02000 	sbceq	r2, r0, r0
     dc4:	9c010000 	stcls	0, cr0, [r1], {-0}
     dc8:	0000020e 	andeq	r0, r0, lr, lsl #4
     dcc:	776f7214 			; <UNDEFINED> instruction: 0x776f7214
     dd0:	1f150100 	svcne	0x00150100
     dd4:	00000151 	andeq	r0, r0, r1, asr r1
     dd8:	0d749102 	ldfeqp	f1, [r4, #-8]!
     ddc:	000004b6 			; <UNDEFINED> instruction: 0x000004b6
     de0:	bb291501 	bllt	a461ec <startup-0x1f5b9e14>
     de4:	02000001 	andeq	r0, r0, #1
     de8:	15007391 	strne	r7, [r0, #-913]	; 0xfffffc6f
     dec:	00000557 	andeq	r0, r0, r7, asr r5
     df0:	d2050501 	andle	r0, r5, #4194304	; 0x400000
     df4:	f0000001 			; <UNDEFINED> instruction: 0xf0000001
     df8:	78200008 	stmdavc	r0!, {r3}
     dfc:	01000000 	mrseq	r0, (UNDEF: 0)
     e00:	04b60d9c 	ldrteq	r0, [r6], #3484	; 0xd9c
     e04:	05010000 	streq	r0, [r1, #-0]
     e08:	0001bb14 	andeq	fp, r1, r4, lsl fp
     e0c:	6f910200 	svcvs	0x00910200
     e10:	0100630f 	tsteq	r0, pc, lsl #6
     e14:	00561006 	subseq	r1, r6, r6
     e18:	91020000 	mrsls	r0, (UNDEF: 2)
     e1c:	ab000077 	blge	1000 <startup-0x1ffff000>
     e20:	04000000 	streq	r0, [r0], #-0
     e24:	0005a200 	andeq	sl, r5, r0, lsl #4
     e28:	a6010400 	strge	r0, [r1], -r0, lsl #8
     e2c:	0c000001 	stceq	0, cr0, [r0], {1}
     e30:	00000599 	muleq	r0, r9, r5
     e34:	0000015c 	andeq	r0, r0, ip, asr r1
     e38:	20000aa8 	andcs	r0, r0, r8, lsr #21
     e3c:	00000018 	andeq	r0, r0, r8, lsl r0
     e40:	00000725 	andeq	r0, r0, r5, lsr #14
     e44:	00005902 	andeq	r5, r0, r2, lsl #18
     e48:	061a0100 	ldreq	r0, [sl], -r0, lsl #2
     e4c:	20000aba 			; <UNDEFINED> instruction: 0x20000aba
     e50:	00000006 	andeq	r0, r0, r6
     e54:	00549c01 	subseq	r9, r4, r1, lsl #24
     e58:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
     e5c:	1e1a0100 	mufnee	f0, f2, f0
     e60:	00000054 	andeq	r0, r0, r4, asr r0
     e64:	79035001 	stmdbvc	r3, {r0, ip, lr}
     e68:	251a0100 	ldrcs	r0, [sl, #-256]	; 0xffffff00
     e6c:	00000054 	andeq	r0, r0, r4, asr r0
     e70:	04005101 	streq	r5, [r0], #-257	; 0xfffffeff
     e74:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     e78:	d0050074 	andle	r0, r5, r4, ror r0
     e7c:	01000005 	tsteq	r0, r5
     e80:	0ab40613 	beq	fed026d4 <l+0xded0144c>
     e84:	00062000 	andeq	r2, r6, r0
     e88:	9c010000 	stcls	0, cr0, [r1], {-0}
     e8c:	00019402 	andeq	r9, r1, r2, lsl #8
     e90:	060c0100 	streq	r0, [ip], -r0, lsl #2
     e94:	20000aae 	andcs	r0, r0, lr, lsr #21
     e98:	00000006 	andeq	r0, r0, r6
     e9c:	009c9c01 	addseq	r9, ip, r1, lsl #24
     ea0:	78030000 	stmdavc	r3, {}	; <UNPREDICTABLE>
     ea4:	1c0c0100 	stfnes	f0, [ip], {-0}
     ea8:	00000054 	andeq	r0, r0, r4, asr r0
     eac:	79035001 	stmdbvc	r3, {r0, ip, lr}
     eb0:	230c0100 	movwcs	r0, #49408	; 0xc100
     eb4:	00000054 	andeq	r0, r0, r4, asr r0
     eb8:	05005101 	streq	r5, [r0, #-257]	; 0xfffffeff
     ebc:	000005e5 	andeq	r0, r0, r5, ror #11
     ec0:	a8060401 	stmdage	r6, {r0, sl}
     ec4:	0620000a 	strteq	r0, [r0], -sl
     ec8:	01000000 	mrseq	r0, (UNDEF: 0)
     ecc:	0653009c 			; <UNDEFINED> instruction: 0x0653009c
     ed0:	00040000 	andeq	r0, r4, r0
     ed4:	00000608 	andeq	r0, r0, r8, lsl #12
     ed8:	01a60104 			; <UNDEFINED> instruction: 0x01a60104
     edc:	3a0c0000 	bcc	300ee4 <startup-0x1fcff11c>
     ee0:	5c000006 	stcpl	0, cr0, [r0], {6}
     ee4:	00000001 	andeq	r0, r0, r1
     ee8:	00000000 	andeq	r0, r0, r0
     eec:	b0000000 	andlt	r0, r0, r0
     ef0:	02000007 	andeq	r0, r0, #7
     ef4:	030e0204 	movweq	r0, #57860	; 0xe204
     ef8:	00000056 	andeq	r0, r0, r6, asr r0
     efc:	00051503 	andeq	r1, r5, r3, lsl #10
     f00:	120f0200 	andne	r0, pc, #0, 4
     f04:	00000056 	andeq	r0, r0, r6, asr r0
     f08:	04b30300 	ldrteq	r0, [r3], #768	; 0x300
     f0c:	10020000 	andne	r0, r2, r0
     f10:	00005612 	andeq	r5, r0, r2, lsl r6
     f14:	a2030100 	andge	r0, r3, #0, 2
     f18:	02000003 	andeq	r0, r0, #3
     f1c:	005d1311 	subseq	r1, sp, r1, lsl r3
     f20:	00020000 	andeq	r0, r2, r0
     f24:	d1080104 	tstle	r8, r4, lsl #2
     f28:	04000003 	streq	r0, [r0], #-3
     f2c:	04010702 	streq	r0, [r1], #-1794	; 0xfffff8fe
     f30:	04050000 	streq	r0, [r5], #-0
     f34:	7f020c02 	svcvc	0x00020c02
     f38:	06000000 	streq	r0, [r0], -r0
     f3c:	00524449 	subseq	r4, r2, r9, asr #8
     f40:	5d120d02 	ldcpl	13, cr0, [r2, #-8]
     f44:	07000000 	streq	r0, [r0, -r0]
     f48:	00000025 	andeq	r0, r0, r5, lsr #32
     f4c:	02040200 	andeq	r0, r4, #0, 4
     f50:	00b00316 	adcseq	r0, r0, r6, lsl r3
     f54:	bb030000 	bllt	c0f5c <startup-0x1ff3f0a4>
     f58:	02000004 	andeq	r0, r0, #4
     f5c:	00561217 	subseq	r1, r6, r7, lsl r2
     f60:	03000000 	movweq	r0, #0
     f64:	000003f9 	strdeq	r0, [r0], -r9
     f68:	56121802 	ldrpl	r1, [r2], -r2, lsl #16
     f6c:	01000000 	mrseq	r0, (UNDEF: 0)
     f70:	00051c03 	andeq	r1, r5, r3, lsl #24
     f74:	13190200 	tstne	r9, #0, 4
     f78:	0000005d 	andeq	r0, r0, sp, asr r0
     f7c:	04050002 	streq	r0, [r5], #-2
     f80:	cb021402 	blgt	85f90 <startup-0x1ff7a070>
     f84:	06000000 	streq	r0, [r0], -r0
     f88:	0052444f 	subseq	r4, r2, pc, asr #8
     f8c:	5d121502 	cfldr32pl	mvfx1, [r2, #-8]
     f90:	07000000 	streq	r0, [r0, -r0]
     f94:	0000007f 	andeq	r0, r0, pc, ror r0
     f98:	02280200 	eoreq	r0, r8, #0, 4
     f9c:	014c1206 	cmpeq	ip, r6, lsl #4
     fa0:	91030000 	mrsls	r0, (UNDEF: 3)
     fa4:	02000003 	andeq	r0, r0, #3
     fa8:	01510f07 	cmpeq	r1, r7, lsl #30
     fac:	03000000 	movweq	r0, #0
     fb0:	000003bd 			; <UNDEFINED> instruction: 0x000003bd
     fb4:	5d110802 	ldcpl	8, cr0, [r1, #-8]
     fb8:	04000000 	streq	r0, [r0], #-0
     fbc:	00037103 	andeq	r7, r3, r3, lsl #2
     fc0:	0f0a0200 	svceq	0x000a0200
     fc4:	00000151 	andeq	r0, r0, r1, asr r1
     fc8:	04980308 	ldreq	r0, [r8], #776	; 0x308
     fcc:	0b020000 	bleq	80fd4 <startup-0x1ff7f02c>
     fd0:	0001510f 	andeq	r5, r1, pc, lsl #2
     fd4:	64080c00 	strvs	r0, [r8], #-3072	; 0xfffff400
     fd8:	10000000 	andne	r0, r0, r0
     fdc:	0000b008 	andeq	fp, r0, r8
     fe0:	b0031400 	andlt	r1, r3, r0, lsl #8
     fe4:	02000003 	andeq	r0, r0, #3
     fe8:	01510f1c 	cmpeq	r1, ip, lsl pc
     fec:	09180000 	ldmdbeq	r8, {}	; <UNPREDICTABLE>
     ff0:	0000053c 	andeq	r0, r0, ip, lsr r5
     ff4:	510f1d02 	tstpl	pc, r2, lsl #26
     ff8:	04000001 	streq	r0, [r0], #-1
     ffc:	031c0f11 	tsteq	ip, #17, 30	; 0x44
    1000:	00000414 	andeq	r0, r0, r4, lsl r4
    1004:	510f1f02 	tstpl	pc, r2, lsl #30
    1008:	20000001 	andcs	r0, r0, r1
    100c:	00046503 	andeq	r6, r4, r3, lsl #10
    1010:	0f200200 	svceq	0x00200200
    1014:	00000151 	andeq	r0, r0, r1, asr r1
    1018:	cb0a0024 	blgt	2810b0 <startup-0x1fd7ef50>
    101c:	04000000 	streq	r0, [r0], #-0
    1020:	04070704 	streq	r0, [r7], #-1796	; 0xfffff8fc
    1024:	190b0000 	stmdbne	fp, {}	; <UNPREDICTABLE>
    1028:	02000004 	andeq	r0, r0, #4
    102c:	014c0222 	cmpeq	ip, r2, lsr #4
    1030:	3b0c0000 	blcc	301038 <startup-0x1fcfefc8>
    1034:	03000002 	movweq	r0, #2
    1038:	01700d02 	cmneq	r0, r2, lsl #26
    103c:	01040000 	mrseq	r0, (UNDEF: 4)
    1040:	0003da08 	andeq	sp, r3, r8, lsl #20
    1044:	01700a00 	cmneq	r0, r0, lsl #20
    1048:	420c0000 	andmi	r0, ip, #0
    104c:	03000002 	movweq	r0, #2
    1050:	01700d03 	cmneq	r0, r3, lsl #26
    1054:	490d0000 	stmdbmi	sp, {}	; <UNPREDICTABLE>
    1058:	03000002 	movweq	r0, #2
    105c:	01700604 	cmneq	r0, r4, lsl #12
    1060:	03050000 	movweq	r0, #20480	; 0x5000
    1064:	20000e10 	andcs	r0, r0, r0, lsl lr
    1068:	06030202 	streq	r0, [r3], -r2, lsl #4
    106c:	0001ba09 	andeq	fp, r1, r9, lsl #20
    1070:	00780e00 	rsbseq	r0, r8, r0, lsl #28
    1074:	70070703 	andvc	r0, r7, r3, lsl #14
    1078:	00000001 	andeq	r0, r0, r1
    107c:	0300790e 	movweq	r7, #2318	; 0x90e
    1080:	01700907 	cmneq	r0, r7, lsl #18
    1084:	00010000 	andeq	r0, r1, r0
    1088:	0000a40b 	andeq	sl, r0, fp, lsl #8
    108c:	03080300 	movweq	r0, #33536	; 0x8300
    1090:	0000019a 	muleq	r0, sl, r1
    1094:	11038c02 	tstne	r3, r2, lsl #24
    1098:	00020309 	andeq	r0, r2, r9, lsl #6
    109c:	027f0300 	rsbseq	r0, pc, #0, 6
    10a0:	12030000 	andne	r0, r3, #0
    10a4:	00020306 	andeq	r0, r2, r6, lsl #6
    10a8:	88030000 	stmdahi	r3, {}	; <UNPREDICTABLE>
    10ac:	03000001 	movweq	r0, #1
    10b0:	02030613 	andeq	r0, r3, #19922944	; 0x1300000
    10b4:	03040000 	movweq	r0, #16384	; 0x4000
    10b8:	0000018e 	andeq	r0, r0, lr, lsl #3
    10bc:	03061403 	movweq	r1, #25603	; 0x6403
    10c0:	08000002 	stmdaeq	r0, {r1}
    10c4:	0078700e 	rsbseq	r7, r8, lr
    10c8:	0a081503 	beq	2064dc <startup-0x1fdf9b24>
    10cc:	0c000002 	stceq	0, cr0, [r0], {2}
    10d0:	05040f00 	streq	r0, [r4, #-3840]	; 0xfffff100
    10d4:	00746e69 	rsbseq	r6, r4, r9, ror #28
    10d8:	0001ba10 	andeq	fp, r1, r0, lsl sl
    10dc:	00021a00 	andeq	r1, r2, r0, lsl #20
    10e0:	01511100 	cmpeq	r1, r0, lsl #2
    10e4:	003f0000 	eorseq	r0, pc, r0
    10e8:	0000010b 	andeq	r0, r0, fp, lsl #2
    10ec:	02160300 	andseq	r0, r6, #0, 6
    10f0:	000001c6 	andeq	r0, r0, r6, asr #3
    10f4:	0000000b 	andeq	r0, r0, fp
    10f8:	0d160300 	ldceq	3, cr0, [r6, #-0]
    10fc:	00000232 	andeq	r0, r0, r2, lsr r2
    1100:	01c60412 	biceq	r0, r6, r2, lsl r4
    1104:	24020000 	strcs	r0, [r2], #-0
    1108:	b7091803 	strlt	r1, [r9, -r3, lsl #16]
    110c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1110:	006f6567 	rsbeq	r6, pc, r7, ror #10
    1114:	260c1903 	strcs	r1, [ip], -r3, lsl #18
    1118:	00000002 	andeq	r0, r0, r2
    111c:	00007703 	andeq	r7, r0, r3, lsl #14
    1120:	061a0300 	ldreq	r0, [sl], -r0, lsl #6
    1124:	00000203 	andeq	r0, r0, r3, lsl #4
    1128:	007c0304 	rsbseq	r0, ip, r4, lsl #6
    112c:	1a030000 	bne	c1134 <startup-0x1ff3eecc>
    1130:	0002030c 	andeq	r0, r2, ip, lsl #6
    1134:	d2030800 	andle	r0, r3, #0, 16
    1138:	03000000 	movweq	r0, #0
    113c:	0203061b 	andeq	r0, r3, #28311552	; 0x1b00000
    1140:	030c0000 	movweq	r0, #49152	; 0xc000
    1144:	000000d7 	ldrdeq	r0, [r0], -r7
    1148:	030c1b03 	movweq	r1, #51971	; 0xcb03
    114c:	10000002 	andne	r0, r0, r2
    1150:	00006d03 	andeq	r6, r0, r3, lsl #26
    1154:	0a1c0300 	beq	701d5c <startup-0x1f8fe2a4>
    1158:	000002cd 	andeq	r0, r0, sp, asr #5
    115c:	00670314 	rsbeq	r0, r7, r4, lsl r3
    1160:	1d030000 	stcne	0, cr0, [r3, #-0]
    1164:	0002e90a 	andeq	lr, r2, sl, lsl #18
    1168:	72031800 	andvc	r1, r3, #0, 16
    116c:	03000000 	movweq	r0, #0
    1170:	03050a1e 	movweq	r0, #23070	; 0x5a1e
    1174:	031c0000 	tsteq	ip, #0
    1178:	000000c8 	andeq	r0, r0, r8, asr #1
    117c:	2b0a1f03 	blcs	288d90 <startup-0x1fd77270>
    1180:	20000003 	andcs	r0, r0, r3
    1184:	02c21300 	sbceq	r1, r2, #0, 6
    1188:	c2140000 	andsgt	r0, r4, #0
    118c:	00000002 	andeq	r0, r0, r2
    1190:	02c80412 	sbceq	r0, r8, #301989888	; 0x12000000
    1194:	6a150000 	bvs	54119c <startup-0x1fabee64>
    1198:	12000002 	andne	r0, r0, #2
    119c:	0002b704 	andeq	fp, r2, r4, lsl #14
    11a0:	02de1300 	sbcseq	r1, lr, #0, 6
    11a4:	de140000 	cdple	0, 1, cr0, cr4, cr0, {0}
    11a8:	00000002 	andeq	r0, r0, r2
    11ac:	02e40412 	rsceq	r0, r4, #301989888	; 0x12000000
    11b0:	6a150000 	bvs	5411b8 <startup-0x1fabee48>
    11b4:	12000002 	andne	r0, r0, #2
    11b8:	0002d304 	andeq	sp, r2, r4, lsl #6
    11bc:	02fa1300 	rscseq	r1, sl, #0, 6
    11c0:	fa140000 	blx	5011c8 <startup-0x1fafee38>
    11c4:	00000002 	andeq	r0, r0, r2
    11c8:	03000412 	movweq	r0, #1042	; 0x412
    11cc:	6a150000 	bvs	5411d4 <startup-0x1fabee2c>
    11d0:	12000002 	andne	r0, r0, #2
    11d4:	0002ef04 	andeq	lr, r2, r4, lsl #30
    11d8:	03201300 	nopeq	{0}	; <UNPREDICTABLE>
    11dc:	20140000 	andscs	r0, r4, r0
    11e0:	14000003 	strne	r0, [r0], #-3
    11e4:	00000203 	andeq	r0, r0, r3, lsl #4
    11e8:	00020314 	andeq	r0, r2, r4, lsl r3
    11ec:	04120000 	ldreq	r0, [r2], #-0
    11f0:	00000326 	andeq	r0, r0, r6, lsr #6
    11f4:	00026a15 	andeq	r6, r2, r5, lsl sl
    11f8:	0b041200 	bleq	105a00 <startup-0x1fefa600>
    11fc:	0b000003 	bleq	1210 <startup-0x1fffedf0>
    1200:	000002ae 	andeq	r0, r0, lr, lsr #5
    1204:	38022003 	stmdacc	r2, {r0, r1, sp}
    1208:	0b000002 	bleq	1218 <startup-0x1fffede8>
    120c:	000002ad 	andeq	r0, r0, sp, lsr #5
    1210:	490b2003 	stmdbmi	fp, {r0, r1, sp}
    1214:	12000003 	andne	r0, r0, #3
    1218:	00023804 	andeq	r3, r2, r4, lsl #16
    121c:	011c1600 	tsteq	ip, r0, lsl #12
    1220:	2d030000 	stccs	0, cr0, [r3, #-0]
    1224:	00021a12 	andeq	r1, r2, r2, lsl sl
    1228:	48030500 	stmdami	r3, {r8, sl}
    122c:	16200010 			; <UNDEFINED> instruction: 0x16200010
    1230:	000000dc 	ldrdeq	r0, [r0], -ip
    1234:	1a113603 	bne	44ea48 <startup-0x1fbb15b8>
    1238:	05000002 	streq	r0, [r0, #-2]
    123c:	0010d403 	andseq	sp, r0, r3, lsl #8
    1240:	00961620 	addseq	r1, r6, r0, lsr #12
    1244:	3e030000 	cdpcc	0, 0, cr0, cr3, cr0, {0}
    1248:	00021a11 	andeq	r1, r2, r1, lsl sl
    124c:	60030500 	andvs	r0, r3, r0, lsl #10
    1250:	16200011 			; <UNDEFINED> instruction: 0x16200011
    1254:	00000183 	andeq	r0, r0, r3, lsl #3
    1258:	310f4c03 	tstcc	pc, r3, lsl #24
    125c:	05000003 	streq	r0, [r0, #-3]
    1260:	0011ec03 	andseq	lr, r1, r3, lsl #24
    1264:	01321620 	teqeq	r2, r0, lsr #12
    1268:	56030000 	strpl	r0, [r3], -r0
    126c:	0003310f 	andeq	r3, r3, pc, lsl #2
    1270:	10030500 	andne	r0, r3, r0, lsl #10
    1274:	16200012 			; <UNDEFINED> instruction: 0x16200012
    1278:	0000013a 	andeq	r0, r0, sl, lsr r1
    127c:	310f6103 	tstcc	pc, r3, lsl #2
    1280:	05000003 	streq	r0, [r0, #-3]
    1284:	00123403 	andseq	r3, r2, r3, lsl #8
    1288:	02361620 	eorseq	r1, r6, #32, 12	; 0x2000000
    128c:	6b030000 	blvs	c1294 <startup-0x1ff3ed6c>
    1290:	0003310f 	andeq	r3, r3, pc, lsl #2
    1294:	58030500 	stmdapl	r3, {r8, sl}
    1298:	02200012 	eoreq	r0, r0, #18
    129c:	03070404 	movweq	r0, #29700	; 0x7404
    12a0:	00000417 	andeq	r0, r0, r7, lsl r4
    12a4:	00036009 	andeq	r6, r3, r9
    12a8:	11080400 	tstne	r8, r0, lsl #8
    12ac:	00000151 	andeq	r0, r0, r1, asr r1
    12b0:	001f0104 	andseq	r0, pc, r4, lsl #2
    12b4:	0002ea09 	andeq	lr, r2, r9, lsl #20
    12b8:	11090400 	tstne	r9, r0, lsl #8
    12bc:	00000151 	andeq	r0, r0, r1, asr r1
    12c0:	001e0104 	andseq	r0, lr, r4, lsl #2
    12c4:	0002da09 	andeq	sp, r2, r9, lsl #20
    12c8:	110a0400 	tstne	sl, r0, lsl #8
    12cc:	00000151 	andeq	r0, r0, r1, asr r1
    12d0:	001d0104 	andseq	r0, sp, r4, lsl #2
    12d4:	00036709 	andeq	r6, r3, r9, lsl #14
    12d8:	110c0400 	tstne	ip, r0, lsl #8
    12dc:	00000151 	andeq	r0, r0, r1, asr r1
    12e0:	00100104 	andseq	r0, r0, r4, lsl #2
    12e4:	04040500 	streq	r0, [r4], #-1280	; 0xfffffb00
    12e8:	04320205 	ldrteq	r0, [r2], #-517	; 0xfffffdfb
    12ec:	c6170000 	ldrgt	r0, [r7], -r0
    12f0:	04000002 	streq	r0, [r0], #-2
    12f4:	01511006 	cmpeq	r1, r6
    12f8:	cd070000 	stcgt	0, cr0, [r7, #-0]
    12fc:	00000003 	andeq	r0, r0, r3
    1300:	04041002 	streq	r1, [r4], #-2
    1304:	00048212 	andeq	r8, r4, r2, lsl r2
    1308:	04170800 	ldreq	r0, [r7], #-2048	; 0xfffff800
    130c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1310:	000002f2 	strdeq	r0, [r0], -r2
    1314:	510f1004 	tstpl	pc, r4
    1318:	04000001 	streq	r0, [r0], #-1
    131c:	18040818 	stmdane	r4, {r3, r4, fp}
    1320:	004c4156 	subeq	r4, ip, r6, asr r1
    1324:	510f1204 	tstpl	pc, r4, lsl #4
    1328:	04000001 	streq	r0, [r0], #-1
    132c:	09080818 	stmdbeq	r8, {r3, r4, fp}
    1330:	000002e4 	andeq	r0, r0, r4, ror #5
    1334:	510f1404 	tstpl	pc, r4, lsl #8
    1338:	04000001 	streq	r0, [r0], #-1
    133c:	090c0818 	stmdbeq	ip, {r3, r4, fp}
    1340:	00000326 	andeq	r0, r0, r6, lsr #6
    1344:	510f1604 	tstpl	pc, r4, lsl #12
    1348:	04000001 	streq	r0, [r0], #-1
    134c:	000c0002 	andeq	r0, ip, r2
    1350:	0004320a 	andeq	r3, r4, sl, lsl #4
    1354:	03400b00 	movteq	r0, #2816	; 0xb00
    1358:	17040000 	strne	r0, [r4, -r0]
    135c:	00048202 	andeq	r8, r4, r2, lsl #4
    1360:	06a71600 	strteq	r1, [r7], r0, lsl #12
    1364:	15010000 	strne	r0, [r1, #-0]
    1368:	00017716 	andeq	r7, r1, r6, lsl r7
    136c:	08030500 	stmdaeq	r3, {r8, sl}
    1370:	1620000e 	strtne	r0, [r0], -lr
    1374:	0000061e 	andeq	r0, r0, lr, lsl r6
    1378:	77161601 	ldrvc	r1, [r6, -r1, lsl #12]
    137c:	05000001 	streq	r0, [r0, #-1]
    1380:	000e0903 	andeq	r0, lr, r3, lsl #18
    1384:	01641920 	cmneq	r4, r0, lsr #18
    1388:	17010000 	strne	r0, [r1, -r0]
    138c:	0a030506 	beq	c27ac <startup-0x1ff3d854>
    1390:	1920000e 	stmdbne	r0!, {r1, r2, r3}
    1394:	0000017c 	andeq	r0, r0, ip, ror r1
    1398:	05061801 	streq	r1, [r6, #-2049]	; 0xfffff7ff
    139c:	000e0b03 	andeq	r0, lr, r3, lsl #22
    13a0:	06120d20 	ldreq	r0, [r2], -r0, lsr #26
    13a4:	1a010000 	bne	413ac <startup-0x1ffbec54>
    13a8:	00020305 	andeq	r0, r2, r5, lsl #6
    13ac:	0c030500 	cfstr32eq	mvfx0, [r3], {-0}
    13b0:	1a20000e 	bne	8013f0 <startup-0x1f7fec10>
    13b4:	1c010070 	stcne	0, cr0, [r1], {112}	; 0x70
    13b8:	00033d09 	andeq	r3, r3, r9, lsl #26
    13bc:	7c030500 	cfstr32vc	mvfx0, [r3], {-0}
    13c0:	1a200012 	bne	801410 <startup-0x1f7febf0>
    13c4:	1d010071 	stcne	0, cr0, [r1, #-452]	; 0xfffffe3c
    13c8:	00033d09 	andeq	r3, r3, r9, lsl #26
    13cc:	80030500 	andhi	r0, r3, r0, lsl #10
    13d0:	1a200012 	bne	801420 <startup-0x1f7febe0>
    13d4:	1e010062 	cdpne	0, 0, cr0, cr1, cr2, {3}
    13d8:	00033d09 	andeq	r3, r3, r9, lsl #26
    13dc:	84030500 	strhi	r0, [r3], #-1280	; 0xfffffb00
    13e0:	1a200012 	bne	801430 <startup-0x1f7febd0>
    13e4:	1f01006c 	svcne	0x0001006c
    13e8:	00033d09 	andeq	r3, r3, r9, lsl #26
    13ec:	88030500 	stmdahi	r3, {r8, sl}
    13f0:	1b200012 	blne	801440 <startup-0x1f7febc0>
    13f4:	0000068f 	andeq	r0, r0, pc, lsl #13
    13f8:	64069901 	strvs	r9, [r6], #-2305	; 0xfffff6ff
    13fc:	9020000d 	eorls	r0, r0, sp
    1400:	01000000 	mrseq	r0, (UNDEF: 0)
    1404:	0005569c 	muleq	r5, ip, r6
    1408:	00631c00 	rsbeq	r1, r3, r0, lsl #24
    140c:	70079a01 	andvc	r9, r7, r1, lsl #20
    1410:	02000001 	andeq	r0, r0, #1
    1414:	6b1c6f91 	blvs	71d260 <startup-0x1f8e2da0>
    1418:	079b0100 	ldreq	r0, [fp, r0, lsl #2]
    141c:	00000170 	andeq	r0, r0, r0, ror r1
    1420:	006e9102 	rsbeq	r9, lr, r2, lsl #2
    1424:	0006311d 	andeq	r3, r6, sp, lsl r1
    1428:	06930100 	ldreq	r0, [r3], r0, lsl #2
    142c:	20000d38 	andcs	r0, r0, r8, lsr sp
    1430:	0000002c 	andeq	r0, r0, ip, lsr #32
    1434:	731d9c01 	tstvc	sp, #256	; 0x100
    1438:	01000006 	tsteq	r0, r6
    143c:	0cf0068a 	ldcleq	6, cr0, [r0], #552	; 0x228
    1440:	00482000 	subeq	r2, r8, r0
    1444:	9c010000 	stcls	0, cr0, [r1], {-0}
    1448:	0006041b 	andeq	r0, r6, fp, lsl r4
    144c:	06780100 	ldrbteq	r0, [r8], -r0, lsl #2
    1450:	20000c7c 	andcs	r0, r0, ip, ror ip
    1454:	00000074 	andeq	r0, r0, r4, ror r0
    1458:	05ab9c01 	streq	r9, [fp, #3073]!	; 0xc01
    145c:	631e0000 	tstvs	lr, #0
    1460:	19780100 	ldmdbne	r8!, {r8}^
    1464:	00000170 	andeq	r0, r0, r0, ror r1
    1468:	1e779102 	expnes	f1, f2
    146c:	78010070 	stmdavc	r1, {r4, r5, r6}
    1470:	00033d23 	andeq	r3, r3, r3, lsr #26
    1474:	70910200 	addsvc	r0, r1, r0, lsl #4
    1478:	05f71d00 	ldrbeq	r1, [r7, #3328]!	; 0xd00
    147c:	59010000 	stmdbpl	r1, {}	; <UNPREDICTABLE>
    1480:	000c3806 	andeq	r3, ip, r6, lsl #16
    1484:	00004420 	andeq	r4, r0, r0, lsr #8
    1488:	1d9c0100 	ldfnes	f0, [ip]
    148c:	000006be 			; <UNDEFINED> instruction: 0x000006be
    1490:	58064001 	stmdapl	r6, {r0, lr}
    1494:	e020000b 	eor	r0, r0, fp
    1498:	01000000 	mrseq	r0, (UNDEF: 0)
    149c:	06b11d9c 	ssateq	r1, #18, ip, lsl #27
    14a0:	3b010000 	blcc	414a8 <startup-0x1ffbeb58>
    14a4:	000b2806 	andeq	r2, fp, r6, lsl #16
    14a8:	00003020 	andeq	r3, r0, r0, lsr #32
    14ac:	1f9c0100 	svcne	0x009c0100
    14b0:	00000681 	andeq	r0, r0, r1, lsl #13
    14b4:	70063301 	andvc	r3, r6, r1, lsl #6
    14b8:	00000001 	andeq	r0, r0, r1
    14bc:	2820000b 	stmdacs	r0!, {r0, r1, r3}
    14c0:	01000000 	mrseq	r0, (UNDEF: 0)
    14c4:	0006189c 	muleq	r6, ip, r8
    14c8:	06282000 	strteq	r2, [r8], -r0
    14cc:	33010000 	movwcc	r0, #4096	; 0x1000
    14d0:	00017019 	andeq	r7, r1, r9, lsl r0
    14d4:	67910200 	ldrvs	r0, [r1, r0, lsl #4]
    14d8:	0100631c 	tsteq	r0, ip, lsl r3
    14dc:	01700734 	cmneq	r0, r4, lsr r7
    14e0:	91020000 	mrsls	r0, (UNDEF: 2)
    14e4:	9421006f 	strtls	r0, [r1], #-111	; 0xffffff91
    14e8:	01000006 	tsteq	r0, r6
    14ec:	0ac00627 	beq	ff002d90 <l+0xdf001b08>
    14f0:	00402000 	subeq	r2, r0, r0
    14f4:	9c010000 	stcls	0, cr0, [r1], {-0}
    14f8:	0000063e 	andeq	r0, r0, lr, lsr r6
    14fc:	534f501e 	movtpl	r5, #61470	; 0xf01e
    1500:	1e270100 	sufnes	f0, f7, f0
    1504:	0000063e 	andeq	r0, r0, lr, lsr r6
    1508:	00749102 	rsbseq	r9, r4, r2, lsl #2
    150c:	01700412 	cmneq	r0, r2, lsl r4
    1510:	6b220000 	blvs	881518 <startup-0x1f77eae8>
    1514:	01000006 	tsteq	r0, r6
    1518:	0000060d 	andeq	r0, r0, sp, lsl #12
    151c:	000c2000 	andeq	r2, ip, r0
    1520:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13490b39 	movtne	r0, #39737	; 0x9b39
  20:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
  24:	24030000 	strcs	r0, [r3], #-0
  28:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  2c:	000e030b 	andeq	r0, lr, fp, lsl #6
  30:	00340400 	eorseq	r0, r4, r0, lsl #8
  34:	0b3a0e03 	bleq	e83848 <startup-0x1f17c7b8>
  38:	0b390b3b 	bleq	e42d2c <startup-0x1f1bd2d4>
  3c:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
  40:	00001802 	andeq	r1, r0, r2, lsl #16
  44:	0b011305 	bleq	44c60 <startup-0x1ffbb3a0>
  48:	3b0b3a0b 	blcc	2ce87c <startup-0x1fd31784>
  4c:	010b390b 	tsteq	fp, fp, lsl #18
  50:	06000013 			; <UNDEFINED> instruction: 0x06000013
  54:	0803000d 	stmdaeq	r3, {r0, r2, r3}
  58:	0b3b0b3a 	bleq	ec2d48 <startup-0x1f13d2b8>
  5c:	13490b39 	movtne	r0, #39737	; 0x9b39
  60:	00000b38 	andeq	r0, r0, r8, lsr fp
  64:	03001607 	movweq	r1, #1543	; 0x607
  68:	3b0b3a0e 	blcc	2ce8a8 <startup-0x1fd31758>
  6c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  70:	08000013 	stmdaeq	r0, {r0, r1, r4}
  74:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  78:	0b3b0b3a 	bleq	ec2d68 <startup-0x1f13d298>
  7c:	13490b39 	movtne	r0, #39737	; 0x9b39
  80:	00000b38 	andeq	r0, r0, r8, lsr fp
  84:	0b002409 	bleq	90b0 <startup-0x1fff6f50>
  88:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  8c:	0a000008 	beq	b4 <startup-0x1fffff4c>
  90:	13490101 	movtne	r0, #37121	; 0x9101
  94:	00001301 	andeq	r1, r0, r1, lsl #6
  98:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
  9c:	000b2f13 	andeq	r2, fp, r3, lsl pc
  a0:	000f0c00 	andeq	r0, pc, r0, lsl #24
  a4:	13490b0b 	movtne	r0, #39691	; 0x9b0b
  a8:	150d0000 	strne	r0, [sp, #-0]
  ac:	01192701 	tsteq	r9, r1, lsl #14
  b0:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
  b4:	13490005 	movtne	r0, #36869	; 0x9005
  b8:	130f0000 	movwne	r0, #61440	; 0xf000
  bc:	3c0e0300 	stccc	3, cr0, [lr], {-0}
  c0:	10000019 	andne	r0, r0, r9, lsl r0
  c4:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
  c8:	0b3b0b3a 	bleq	ec2db8 <startup-0x1f13d248>
  cc:	13490b39 	movtne	r0, #39737	; 0x9b39
  d0:	00001802 	andeq	r1, r0, r2, lsl #16
  d4:	3f012e11 	svccc	0x00012e11
  d8:	3a0e0319 	bcc	380d44 <startup-0x1fc7f2bc>
  dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  e0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
  e4:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
  e8:	96184006 	ldrls	r4, [r8], -r6
  ec:	13011942 	movwne	r1, #6466	; 0x1942
  f0:	05120000 	ldreq	r0, [r2, #-0]
  f4:	3a080300 	bcc	200cfc <startup-0x1fdff304>
  f8:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  fc:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 100:	13000018 	movwne	r0, #24
 104:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 108:	0b3a0e03 	bleq	e8391c <startup-0x1f17c6e4>
 10c:	0b390b3b 	bleq	e42e00 <startup-0x1f1bd200>
 110:	13491927 	movtne	r1, #39207	; 0x9927
 114:	06120111 			; <UNDEFINED> instruction: 0x06120111
 118:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 11c:	00130119 	andseq	r0, r3, r9, lsl r1
 120:	00051400 	andeq	r1, r5, r0, lsl #8
 124:	0b3a0e03 	bleq	e83938 <startup-0x1f17c6c8>
 128:	0b390b3b 	bleq	e42e1c <startup-0x1f1bd1e4>
 12c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 130:	2e150000 	cdpcs	0, 1, cr0, cr5, cr0, {0}
 134:	03193f01 	tsteq	r9, #1, 30
 138:	3b0b3a0e 	blcc	2ce978 <startup-0x1fd31688>
 13c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 140:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 144:	96184006 	ldrls	r4, [r8], -r6
 148:	13011942 	movwne	r1, #6466	; 0x1942
 14c:	34160000 	ldrcc	r0, [r6], #-0
 150:	3a080300 	bcc	200d58 <startup-0x1fdff2a8>
 154:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 158:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 15c:	17000018 	smladne	r0, r8, r0, r0
 160:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 164:	0b3a0e03 	bleq	e83978 <startup-0x1f17c688>
 168:	0b390b3b 	bleq	e42e5c <startup-0x1f1bd1a4>
 16c:	01111927 	tsteq	r1, r7, lsr #18
 170:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 174:	01194297 			; <UNDEFINED> instruction: 0x01194297
 178:	18000013 	stmdane	r0, {r0, r1, r4}
 17c:	0111010b 	tsteq	r1, fp, lsl #2
 180:	00000612 	andeq	r0, r0, r2, lsl r6
 184:	3f012e19 	svccc	0x00012e19
 188:	3a0e0319 	bcc	380df4 <startup-0x1fc7f20c>
 18c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 190:	3c13490b 			; <UNDEFINED> instruction: 0x3c13490b
 194:	1a000019 	bne	200 <startup-0x1ffffe00>
 198:	00000018 	andeq	r0, r0, r8, lsl r0
 19c:	3f012e1b 	svccc	0x00012e1b
 1a0:	3a0e0319 	bcc	380e0c <startup-0x1fc7f1f4>
 1a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1a8:	1119270b 	tstne	r9, fp, lsl #14
 1ac:	40061201 	andmi	r1, r6, r1, lsl #4
 1b0:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 1b4:	01000000 	mrseq	r0, (UNDEF: 0)
 1b8:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 1bc:	0e030b13 	vmoveq.32	d3[0], r0
 1c0:	01110e1b 	tsteq	r1, fp, lsl lr
 1c4:	17100612 			; <UNDEFINED> instruction: 0x17100612
 1c8:	13020000 	movwne	r0, #8192	; 0x2000
 1cc:	3a0b0b01 	bcc	2c2dd8 <startup-0x1fd3d228>
 1d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 1d4:	0013010b 	andseq	r0, r3, fp, lsl #2
 1d8:	000d0300 	andeq	r0, sp, r0, lsl #6
 1dc:	0b3a0e03 	bleq	e839f0 <startup-0x1f17c610>
 1e0:	0b390b3b 	bleq	e42ed4 <startup-0x1f1bd12c>
 1e4:	0b0b1349 	bleq	2c4f10 <startup-0x1fd3b0f0>
 1e8:	0b0c0b0d 	bleq	302e24 <startup-0x1fcfd1dc>
 1ec:	00000b38 	andeq	r0, r0, r8, lsr fp
 1f0:	0b002404 	bleq	9208 <startup-0x1fff6df8>
 1f4:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 1f8:	0500000e 	streq	r0, [r0, #-14]
 1fc:	0b0b0117 	bleq	2c0660 <startup-0x1fd3f9a0>
 200:	0b3b0b3a 	bleq	ec2ef0 <startup-0x1f13d110>
 204:	13010b39 	movwne	r0, #6969	; 0x1b39
 208:	0d060000 	stceq	0, cr0, [r6, #-0]
 20c:	3a0e0300 	bcc	380e14 <startup-0x1fc7f1ec>
 210:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 214:	0013490b 	andseq	r4, r3, fp, lsl #18
 218:	000d0700 	andeq	r0, sp, r0, lsl #14
 21c:	00001349 	andeq	r1, r0, r9, asr #6
 220:	49000d08 	stmdbmi	r0, {r3, r8, sl, fp}
 224:	000b3813 	andeq	r3, fp, r3, lsl r8
 228:	000d0900 	andeq	r0, sp, r0, lsl #18
 22c:	0b3a0803 	bleq	e82240 <startup-0x1f17ddc0>
 230:	0b390b3b 	bleq	e42f24 <startup-0x1f1bd0dc>
 234:	0b0b1349 	bleq	2c4f60 <startup-0x1fd3b0a0>
 238:	0b0c0b0d 	bleq	302e74 <startup-0x1fcfd18c>
 23c:	00000b38 	andeq	r0, r0, r8, lsr fp
 240:	4900350a 	stmdbmi	r0, {r1, r3, r8, sl, ip, sp}
 244:	0b000013 	bleq	298 <startup-0x1ffffd68>
 248:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 24c:	0b3b0b3a 	bleq	ec2f3c <startup-0x1f13d0c4>
 250:	13490b39 	movtne	r0, #39737	; 0x9b39
 254:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
 258:	03193f00 	tsteq	r9, #0, 30
 25c:	3b0b3a0e 	blcc	2cea9c <startup-0x1fd31564>
 260:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 264:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 268:	97184006 	ldrls	r4, [r8, -r6]
 26c:	00001942 	andeq	r1, r0, r2, asr #18
 270:	3f012e0d 	svccc	0x00012e0d
 274:	3a0e0319 	bcc	380ee0 <startup-0x1fc7f120>
 278:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 27c:	1119270b 	tstne	r9, fp, lsl #14
 280:	40061201 	andmi	r1, r6, r1, lsl #4
 284:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 288:	00001301 	andeq	r1, r0, r1, lsl #6
 28c:	0300050e 	movweq	r0, #1294	; 0x50e
 290:	3b0b3a08 	blcc	2ceab8 <startup-0x1fd31548>
 294:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 298:	00180213 	andseq	r0, r8, r3, lsl r2
 29c:	010b0f00 	tsteq	fp, r0, lsl #30
 2a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2a4:	34100000 	ldrcc	r0, [r0], #-0
 2a8:	3a080300 	bcc	200eb0 <startup-0x1fdff150>
 2ac:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2b0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 2b4:	11000018 	tstne	r0, r8, lsl r0
 2b8:	0b0b0024 	bleq	2c0350 <startup-0x1fd3fcb0>
 2bc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 2c0:	01000000 	mrseq	r0, (UNDEF: 0)
 2c4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 2c8:	0e030b13 	vmoveq.32	d3[0], r0
 2cc:	01110e1b 	tsteq	r1, fp, lsl lr
 2d0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 2d4:	13020000 	movwne	r0, #8192	; 0x2000
 2d8:	3a0b0b01 	bcc	2c2ee4 <startup-0x1fd3d11c>
 2dc:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 2e0:	0013010b 	andseq	r0, r3, fp, lsl #2
 2e4:	000d0300 	andeq	r0, sp, r0, lsl #6
 2e8:	0b3a0e03 	bleq	e83afc <startup-0x1f17c504>
 2ec:	0b390b3b 	bleq	e42fe0 <startup-0x1f1bd020>
 2f0:	0b381349 	bleq	e0501c <startup-0x1f1fafe4>
 2f4:	24040000 	strcs	r0, [r4], #-0
 2f8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 2fc:	000e030b 	andeq	r0, lr, fp, lsl #6
 300:	01170500 	tsteq	r7, r0, lsl #10
 304:	0b3a0b0b 	bleq	e82f38 <startup-0x1f17d0c8>
 308:	0b390b3b 	bleq	e42ffc <startup-0x1f1bd004>
 30c:	00001301 	andeq	r1, r0, r1, lsl #6
 310:	03000d06 	movweq	r0, #3334	; 0xd06
 314:	3b0b3a08 	blcc	2ceb3c <startup-0x1fd314c4>
 318:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 31c:	07000013 	smladeq	r0, r3, r0, r0
 320:	1349000d 	movtne	r0, #36877	; 0x900d
 324:	0d080000 	stceq	0, cr0, [r8, #-0]
 328:	38134900 	ldmdacc	r3, {r8, fp, lr}
 32c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
 330:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 334:	0b3b0b3a 	bleq	ec3024 <startup-0x1f13cfdc>
 338:	13490b39 	movtne	r0, #39737	; 0x9b39
 33c:	0b0d0b0b 	bleq	342f70 <startup-0x1fcbd090>
 340:	0b380b0c 	bleq	e02f78 <startup-0x1f1fd088>
 344:	350a0000 	strcc	r0, [sl, #-0]
 348:	00134900 	andseq	r4, r3, r0, lsl #18
 34c:	00160b00 	andseq	r0, r6, r0, lsl #22
 350:	0b3a0e03 	bleq	e83b64 <startup-0x1f17c49c>
 354:	0b390b3b 	bleq	e43048 <startup-0x1f1bcfb8>
 358:	00001349 	andeq	r1, r0, r9, asr #6
 35c:	3f012e0c 	svccc	0x00012e0c
 360:	3a0e0319 	bcc	380fcc <startup-0x1fc7f034>
 364:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 368:	1119270b 	tstne	r9, fp, lsl #14
 36c:	40061201 	andmi	r1, r6, r1, lsl #4
 370:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 374:	00001301 	andeq	r1, r0, r1, lsl #6
 378:	0300050d 	movweq	r0, #1293	; 0x50d
 37c:	3b0b3a08 	blcc	2ceba4 <startup-0x1fd3145c>
 380:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 384:	00180213 	andseq	r0, r8, r3, lsl r2
 388:	00340e00 	eorseq	r0, r4, r0, lsl #28
 38c:	0b3a0e03 	bleq	e83ba0 <startup-0x1f17c460>
 390:	0b390b3b 	bleq	e43084 <startup-0x1f1bcf7c>
 394:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 398:	240f0000 	strcs	r0, [pc], #-0	; 3a0 <startup-0x1ffffc60>
 39c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 3a0:	0008030b 	andeq	r0, r8, fp, lsl #6
 3a4:	00051000 	andeq	r1, r5, r0
 3a8:	0b3a0e03 	bleq	e83bbc <startup-0x1f17c444>
 3ac:	0b390b3b 	bleq	e430a0 <startup-0x1f1bcf60>
 3b0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 3b4:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 3b8:	03193f01 	tsteq	r9, #1, 30
 3bc:	3b0b3a0e 	blcc	2cebfc <startup-0x1fd31404>
 3c0:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3c4:	00193c13 	andseq	r3, r9, r3, lsl ip
 3c8:	00181200 	andseq	r1, r8, r0, lsl #4
 3cc:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
 3d0:	03193f01 	tsteq	r9, #1, 30
 3d4:	3b0b3a0e 	blcc	2cec14 <startup-0x1fd313ec>
 3d8:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 3dc:	01193c13 	tsteq	r9, r3, lsl ip
 3e0:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
 3e4:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 3e8:	0b3a0e03 	bleq	e83bfc <startup-0x1f17c404>
 3ec:	0b390b3b 	bleq	e430e0 <startup-0x1f1bcf20>
 3f0:	01111927 	tsteq	r1, r7, lsr #18
 3f4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 3f8:	01194297 			; <UNDEFINED> instruction: 0x01194297
 3fc:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
 400:	08030034 	stmdaeq	r3, {r2, r4, r5}
 404:	0b3b0b3a 	bleq	ec30f4 <startup-0x1f13cf0c>
 408:	13490b39 	movtne	r0, #39737	; 0x9b39
 40c:	00001802 	andeq	r1, r0, r2, lsl #16
 410:	3f012e16 	svccc	0x00012e16
 414:	3a0e0319 	bcc	381080 <startup-0x1fc7ef80>
 418:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 41c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 420:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 424:	96184006 	ldrls	r4, [r8], -r6
 428:	13011942 	movwne	r1, #6466	; 0x1942
 42c:	0f170000 	svceq	0x00170000
 430:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
 434:	18000013 	stmdane	r0, {r0, r1, r4}
 438:	13490101 	movtne	r0, #37121	; 0x9101
 43c:	00001301 	andeq	r1, r0, r1, lsl #6
 440:	49002119 	stmdbmi	r0, {r0, r3, r4, r8, sp}
 444:	000b2f13 	andeq	r2, fp, r3, lsl pc
 448:	01011a00 	tsteq	r1, r0, lsl #20
 44c:	00001349 	andeq	r1, r0, r9, asr #6
 450:	01110100 	tsteq	r1, r0, lsl #2
 454:	0b130e25 	bleq	4c3cf0 <startup-0x1fb3c310>
 458:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 45c:	06120111 			; <UNDEFINED> instruction: 0x06120111
 460:	00001710 	andeq	r1, r0, r0, lsl r7
 464:	0b011302 	bleq	45074 <startup-0x1ffbaf8c>
 468:	3b0b3a0b 	blcc	2cec9c <startup-0x1fd31364>
 46c:	010b390b 	tsteq	fp, fp, lsl #18
 470:	03000013 	movweq	r0, #19
 474:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 478:	0b3b0b3a 	bleq	ec3168 <startup-0x1f13ce98>
 47c:	13490b39 	movtne	r0, #39737	; 0x9b39
 480:	00000b38 	andeq	r0, r0, r8, lsr fp
 484:	0b002404 	bleq	949c <startup-0x1fff6b64>
 488:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 48c:	0500000e 	streq	r0, [r0, #-14]
 490:	0b0b0117 	bleq	2c08f4 <startup-0x1fd3f70c>
 494:	0b3b0b3a 	bleq	ec3184 <startup-0x1f13ce7c>
 498:	13010b39 	movwne	r0, #6969	; 0x1b39
 49c:	0d060000 	stceq	0, cr0, [r6, #-0]
 4a0:	3a080300 	bcc	2010a8 <startup-0x1fdfef58>
 4a4:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4a8:	0013490b 	andseq	r4, r3, fp, lsl #18
 4ac:	000d0700 	andeq	r0, sp, r0, lsl #14
 4b0:	00001349 	andeq	r1, r0, r9, asr #6
 4b4:	49000d08 	stmdbmi	r0, {r3, r8, sl, fp}
 4b8:	000b3813 	andeq	r3, fp, r3, lsl r8
 4bc:	000d0900 	andeq	r0, sp, r0, lsl #18
 4c0:	0b3a0e03 	bleq	e83cd4 <startup-0x1f17c32c>
 4c4:	0b390b3b 	bleq	e431b8 <startup-0x1f1bce48>
 4c8:	0b0b1349 	bleq	2c51f4 <startup-0x1fd3ae0c>
 4cc:	0b0c0b0d 	bleq	303108 <startup-0x1fcfcef8>
 4d0:	00000b38 	andeq	r0, r0, r8, lsr fp
 4d4:	4900350a 	stmdbmi	r0, {r1, r3, r8, sl, ip, sp}
 4d8:	0b000013 	bleq	52c <startup-0x1ffffad4>
 4dc:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 4e0:	0b3b0b3a 	bleq	ec31d0 <startup-0x1f13ce30>
 4e4:	13490b39 	movtne	r0, #39737	; 0x9b39
 4e8:	2e0c0000 	cdpcs	0, 0, cr0, cr12, cr0, {0}
 4ec:	03193f01 	tsteq	r9, #1, 30
 4f0:	3b0b3a0e 	blcc	2ced30 <startup-0x1fd312d0>
 4f4:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 4f8:	11134919 	tstne	r3, r9, lsl r9
 4fc:	40061201 	andmi	r1, r6, r1, lsl #4
 500:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 504:	00001301 	andeq	r1, r0, r1, lsl #6
 508:	0300050d 	movweq	r0, #1293	; 0x50d
 50c:	3b0b3a0e 	blcc	2ced4c <startup-0x1fd312b4>
 510:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 514:	00180213 	andseq	r0, r8, r3, lsl r2
 518:	00340e00 	eorseq	r0, r4, r0, lsl #28
 51c:	0b3a0e03 	bleq	e83d30 <startup-0x1f17c2d0>
 520:	0b390b3b 	bleq	e43214 <startup-0x1f1bcdec>
 524:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 528:	340f0000 	strcc	r0, [pc], #-0	; 530 <startup-0x1ffffad0>
 52c:	3a080300 	bcc	201134 <startup-0x1fdfeecc>
 530:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 534:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 538:	10000018 	andne	r0, r0, r8, lsl r0
 53c:	13490101 	movtne	r0, #37121	; 0x9101
 540:	00001301 	andeq	r1, r0, r1, lsl #6
 544:	49002111 	stmdbmi	r0, {r0, r4, r8, sp}
 548:	000b2f13 	andeq	r2, fp, r3, lsl pc
 54c:	00241200 	eoreq	r1, r4, r0, lsl #4
 550:	0b3e0b0b 	bleq	f83184 <startup-0x1f07ce7c>
 554:	00000803 	andeq	r0, r0, r3, lsl #16
 558:	3f012e13 	svccc	0x00012e13
 55c:	3a0e0319 	bcc	3811c8 <startup-0x1fc7ee38>
 560:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 564:	1119270b 	tstne	r9, fp, lsl #14
 568:	40061201 	andmi	r1, r6, r1, lsl #4
 56c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 570:	00001301 	andeq	r1, r0, r1, lsl #6
 574:	03000514 	movweq	r0, #1300	; 0x514
 578:	3b0b3a08 	blcc	2ceda0 <startup-0x1fd31260>
 57c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 580:	00180213 	andseq	r0, r8, r3, lsl r2
 584:	012e1500 			; <UNDEFINED> instruction: 0x012e1500
 588:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 58c:	0b3b0b3a 	bleq	ec327c <startup-0x1f13cd84>
 590:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 594:	01111349 	tsteq	r1, r9, asr #6
 598:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 59c:	00194297 	mulseq	r9, r7, r2
 5a0:	11010000 	mrsne	r0, (UNDEF: 1)
 5a4:	130e2501 	movwne	r2, #58625	; 0xe501
 5a8:	1b0e030b 	blne	3811dc <startup-0x1fc7ee24>
 5ac:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 5b0:	00171006 	andseq	r1, r7, r6
 5b4:	012e0200 			; <UNDEFINED> instruction: 0x012e0200
 5b8:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 5bc:	0b3b0b3a 	bleq	ec32ac <startup-0x1f13cd54>
 5c0:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 5c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 5c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 5cc:	00130119 	andseq	r0, r3, r9, lsl r1
 5d0:	00050300 	andeq	r0, r5, r0, lsl #6
 5d4:	0b3a0803 	bleq	e825e8 <startup-0x1f17da18>
 5d8:	0b390b3b 	bleq	e432cc <startup-0x1f1bcd34>
 5dc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 5e0:	24040000 	strcs	r0, [r4], #-0
 5e4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 5e8:	0008030b 	andeq	r0, r8, fp, lsl #6
 5ec:	002e0500 	eoreq	r0, lr, r0, lsl #10
 5f0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 5f4:	0b3b0b3a 	bleq	ec32e4 <startup-0x1f13cd1c>
 5f8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 5fc:	06120111 			; <UNDEFINED> instruction: 0x06120111
 600:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 604:	00000019 	andeq	r0, r0, r9, lsl r0
 608:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 60c:	030b130e 	movweq	r1, #45838	; 0xb30e
 610:	550e1b0e 	strpl	r1, [lr, #-2830]	; 0xfffff4f2
 614:	10011117 	andne	r1, r1, r7, lsl r1
 618:	02000017 	andeq	r0, r0, #23
 61c:	0b0b0113 	bleq	2c0a70 <startup-0x1fd3f590>
 620:	0b3b0b3a 	bleq	ec3310 <startup-0x1f13ccf0>
 624:	13010b39 	movwne	r0, #6969	; 0x1b39
 628:	0d030000 	stceq	0, cr0, [r3, #-0]
 62c:	3a0e0300 	bcc	381234 <startup-0x1fc7edcc>
 630:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 634:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 638:	0400000b 	streq	r0, [r0], #-11
 63c:	0b0b0024 	bleq	2c06d4 <startup-0x1fd3f92c>
 640:	0e030b3e 	vmoveq.16	d3[0], r0
 644:	17050000 	strne	r0, [r5, -r0]
 648:	3a0b0b01 	bcc	2c3254 <startup-0x1fd3cdac>
 64c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 650:	0013010b 	andseq	r0, r3, fp, lsl #2
 654:	000d0600 	andeq	r0, sp, r0, lsl #12
 658:	0b3a0803 	bleq	e8266c <startup-0x1f17d994>
 65c:	0b390b3b 	bleq	e43350 <startup-0x1f1bccb0>
 660:	00001349 	andeq	r1, r0, r9, asr #6
 664:	49000d07 	stmdbmi	r0, {r0, r1, r2, r8, sl, fp}
 668:	08000013 	stmdaeq	r0, {r0, r1, r4}
 66c:	1349000d 	movtne	r0, #36877	; 0x900d
 670:	00000b38 	andeq	r0, r0, r8, lsr fp
 674:	03000d09 	movweq	r0, #3337	; 0xd09
 678:	3b0b3a0e 	blcc	2ceeb8 <startup-0x1fd31148>
 67c:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 680:	0d0b0b13 	vstreq	d0, [fp, #-76]	; 0xffffffb4
 684:	380b0c0b 	stmdacc	fp, {r0, r1, r3, sl, fp}
 688:	0a00000b 	beq	6bc <startup-0x1ffff944>
 68c:	13490035 	movtne	r0, #36917	; 0x9035
 690:	160b0000 	strne	r0, [fp], -r0
 694:	3a0e0300 	bcc	38129c <startup-0x1fc7ed64>
 698:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 69c:	0013490b 	andseq	r4, r3, fp, lsl #18
 6a0:	00340c00 	eorseq	r0, r4, r0, lsl #24
 6a4:	0b3a0e03 	bleq	e83eb8 <startup-0x1f17c148>
 6a8:	0b390b3b 	bleq	e4339c <startup-0x1f1bcc64>
 6ac:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 6b0:	0000193c 	andeq	r1, r0, ip, lsr r9
 6b4:	0300340d 	movweq	r3, #1037	; 0x40d
 6b8:	3b0b3a0e 	blcc	2ceef8 <startup-0x1fd31108>
 6bc:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 6c0:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
 6c4:	0e000018 	mcreq	0, 0, r0, cr0, cr8, {0}
 6c8:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 6cc:	0b3b0b3a 	bleq	ec33bc <startup-0x1f13cc44>
 6d0:	13490b39 	movtne	r0, #39737	; 0x9b39
 6d4:	00000b38 	andeq	r0, r0, r8, lsr fp
 6d8:	0b00240f 	bleq	971c <startup-0x1fff68e4>
 6dc:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
 6e0:	10000008 	andne	r0, r0, r8
 6e4:	13490101 	movtne	r0, #37121	; 0x9101
 6e8:	00001301 	andeq	r1, r0, r1, lsl #6
 6ec:	49002111 	stmdbmi	r0, {r0, r4, r8, sp}
 6f0:	000b2f13 	andeq	r2, fp, r3, lsl pc
 6f4:	000f1200 	andeq	r1, pc, r0, lsl #4
 6f8:	13490b0b 	movtne	r0, #39691	; 0x9b0b
 6fc:	15130000 	ldrne	r0, [r3, #-0]
 700:	01192701 	tsteq	r9, r1, lsl #14
 704:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
 708:	13490005 	movtne	r0, #36869	; 0x9005
 70c:	13150000 	tstne	r5, #0
 710:	3c0e0300 	stccc	3, cr0, [lr], {-0}
 714:	16000019 			; <UNDEFINED> instruction: 0x16000019
 718:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 71c:	0b3b0b3a 	bleq	ec340c <startup-0x1f13cbf4>
 720:	13490b39 	movtne	r0, #39737	; 0x9b39
 724:	00001802 	andeq	r1, r0, r2, lsl #16
 728:	03000d17 	movweq	r0, #3351	; 0xd17
 72c:	3b0b3a0e 	blcc	2cef6c <startup-0x1fd31094>
 730:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 734:	18000013 	stmdane	r0, {r0, r1, r4}
 738:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 73c:	0b3b0b3a 	bleq	ec342c <startup-0x1f13cbd4>
 740:	13490b39 	movtne	r0, #39737	; 0x9b39
 744:	0b0d0b0b 	bleq	343378 <startup-0x1fcbcc88>
 748:	0b380b0c 	bleq	e03380 <startup-0x1f1fcc80>
 74c:	34190000 	ldrcc	r0, [r9], #-0
 750:	3a134700 	bcc	4d2358 <startup-0x1fb2dca8>
 754:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 758:	0018020b 	andseq	r0, r8, fp, lsl #4
 75c:	00341a00 	eorseq	r1, r4, r0, lsl #20
 760:	0b3a0803 	bleq	e82774 <startup-0x1f17d88c>
 764:	0b390b3b 	bleq	e43458 <startup-0x1f1bcba8>
 768:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 76c:	00001802 	andeq	r1, r0, r2, lsl #16
 770:	3f012e1b 	svccc	0x00012e1b
 774:	3a0e0319 	bcc	3813e0 <startup-0x1fc7ec20>
 778:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 77c:	1119270b 	tstne	r9, fp, lsl #14
 780:	40061201 	andmi	r1, r6, r1, lsl #4
 784:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
 788:	00001301 	andeq	r1, r0, r1, lsl #6
 78c:	0300341c 	movweq	r3, #1052	; 0x41c
 790:	3b0b3a08 	blcc	2cefb8 <startup-0x1fd31048>
 794:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
 798:	00180213 	andseq	r0, r8, r3, lsl r2
 79c:	002e1d00 	eoreq	r1, lr, r0, lsl #26
 7a0:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 7a4:	0b3b0b3a 	bleq	ec3494 <startup-0x1f13cb6c>
 7a8:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
 7ac:	06120111 			; <UNDEFINED> instruction: 0x06120111
 7b0:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 7b4:	1e000019 	mcrne	0, 0, r0, cr0, cr9, {0}
 7b8:	08030005 	stmdaeq	r3, {r0, r2}
 7bc:	0b3b0b3a 	bleq	ec34ac <startup-0x1f13cb54>
 7c0:	13490b39 	movtne	r0, #39737	; 0x9b39
 7c4:	00001802 	andeq	r1, r0, r2, lsl #16
 7c8:	3f012e1f 	svccc	0x00012e1f
 7cc:	3a0e0319 	bcc	381438 <startup-0x1fc7ebc8>
 7d0:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 7d4:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 7d8:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 7dc:	96184006 	ldrls	r4, [r8], -r6
 7e0:	13011942 	movwne	r1, #6466	; 0x1942
 7e4:	05200000 	streq	r0, [r0, #-0]!
 7e8:	3a0e0300 	bcc	3813f0 <startup-0x1fc7ec10>
 7ec:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 7f0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 7f4:	21000018 	tstcs	r0, r8, lsl r0
 7f8:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 7fc:	0b3a0e03 	bleq	e84010 <startup-0x1f17bff0>
 800:	0b390b3b 	bleq	e434f4 <startup-0x1f1bcb0c>
 804:	01111927 	tsteq	r1, r7, lsr #18
 808:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 80c:	01194297 			; <UNDEFINED> instruction: 0x01194297
 810:	22000013 	andcs	r0, r0, #19
 814:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 818:	0b3a0e03 	bleq	e8402c <startup-0x1f17bfd4>
 81c:	0b390b3b 	bleq	e43510 <startup-0x1f1bcaf0>
 820:	01111927 	tsteq	r1, r7, lsr #18
 824:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 828:	00194297 	mulseq	r9, r7, r2
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000047a 	andeq	r0, r0, sl, ror r4
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	060c0002 	streq	r0, [ip], -r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	2000048c 	andcs	r0, r0, ip, lsl #9
  34:	000000ec 	andeq	r0, r0, ip, ror #1
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	078b0002 	streq	r0, [fp, r2]
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000578 	andcs	r0, r0, r8, ror r5
  54:	00000376 	andeq	r0, r0, r6, ror r3
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	0bdd0002 	bleq	ff740074 <l+0xdf73edec>
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	200008f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
  74:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	0e1f0002 	cdpeq	0, 1, cr0, cr15, cr2, {0}
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	20000aa8 	andcs	r0, r0, r8, lsr #21
  94:	00000018 	andeq	r0, r0, r8, lsl r0
	...
  a0:	00000024 	andeq	r0, r0, r4, lsr #32
  a4:	0ece0002 	cdpeq	0, 12, cr0, cr14, cr2, {0}
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	20000ac0 	andcs	r0, r0, r0, asr #21
  b4:	00000334 	andeq	r0, r0, r4, lsr r3
  b8:	20000000 	andcs	r0, r0, r0
  bc:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000002fd 	strdeq	r0, [r0], -sp
   4:	00560003 	subseq	r0, r6, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
  20:	2f737265 	svccs	0x00737265
  24:	6f442f4a 	svcvs	0x00442f4a
  28:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
  2c:	2f73746e 	svccs	0x0073746e
  30:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
  34:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
  38:	79692f73 	stmdbvc	r9!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
  3c:	74747275 	ldrbtvc	r7, [r4], #-629	; 0xfffffd8b
  40:	47000079 	smlsdxmi	r0, r9, r0, r0
  44:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
  48:	2e797274 	mrccs	2, 3, r7, cr9, cr4, {3}
  4c:	00010063 	andeq	r0, r1, r3, rrx
  50:	6f654700 	svcvs	0x00654700
  54:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
  58:	00682e79 	rsbeq	r2, r8, r9, ror lr
  5c:	00000001 	andeq	r0, r0, r1
  60:	05000105 	streq	r0, [r0, #-261]	; 0xfffffefb
  64:	00001002 	andeq	r1, r0, r2
  68:	0c051920 			; <UNDEFINED> instruction: 0x0c051920
  6c:	3d09054b 	cfstr32cc	mvfx0, [r9, #-300]	; 0xfffffed4
  70:	3d3d0605 	ldccc	6, cr0, [sp, #-20]!	; 0xffffffec
  74:	053d0405 	ldreq	r0, [sp, #-1029]!	; 0xfffffbfb
  78:	053d4b0d 	ldreq	r4, [sp, #-2829]!	; 0xfffff4f3
  7c:	0a053e06 	beq	14f89c <startup-0x1feb0764>
  80:	2e02053d 	mcrcs	5, 0, r0, cr2, cr13, {1}
  84:	02001b05 	andeq	r1, r0, #5120	; 0x1400
  88:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
  8c:	04020009 	streq	r0, [r2], #-9
  90:	18054a03 	stmdane	r5, {r0, r1, r9, fp, lr}
  94:	03040200 	movweq	r0, #16896	; 0x4200
  98:	00070583 	andeq	r0, r7, r3, lsl #11
  9c:	4a030402 	bmi	c10ac <startup-0x1ff3ef54>
  a0:	02001805 	andeq	r1, r0, #327680	; 0x50000
  a4:	053d0304 	ldreq	r0, [sp, #-772]!	; 0xfffffcfc
  a8:	04020007 	streq	r0, [r2], #-7
  ac:	03053c03 	movweq	r3, #23555	; 0x5c03
  b0:	03040200 	movweq	r0, #16896	; 0x4200
  b4:	001e053d 	andseq	r0, lr, sp, lsr r5
  b8:	62030402 	andvs	r0, r3, #33554432	; 0x2000000
  bc:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
  c0:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
  c4:	05855001 	streq	r5, [r5, #1]
  c8:	09054b0c 	stmdbeq	r5, {r2, r3, r8, r9, fp, lr}
  cc:	3d06053d 	cfstr32cc	mvfx0, [r6, #-244]	; 0xffffff0c
  d0:	0a053d3d 	beq	14f5cc <startup-0x1feb0a34>
  d4:	2e02053d 	mcrcs	5, 0, r0, cr2, cr13, {1}
  d8:	02001b05 	andeq	r1, r0, #5120	; 0x1400
  dc:	05210304 	streq	r0, [r1, #-772]!	; 0xfffffcfc
  e0:	04020009 	streq	r0, [r2], #-9
  e4:	18054a03 	stmdane	r5, {r0, r1, r9, fp, lr}
  e8:	03040200 	movweq	r0, #16896	; 0x4200
  ec:	00070583 	andeq	r0, r7, r3, lsl #11
  f0:	4a030402 	bmi	c1100 <startup-0x1ff3ef00>
  f4:	02001805 	andeq	r1, r0, #327680	; 0x50000
  f8:	053d0304 	ldreq	r0, [sp, #-772]!	; 0xfffffcfc
  fc:	04020007 	streq	r0, [r2], #-7
 100:	03053c03 	movweq	r3, #23555	; 0x5c03
 104:	03040200 	movweq	r0, #16896	; 0x4200
 108:	001e053d 	andseq	r0, lr, sp, lsr r5
 10c:	62030402 	andvs	r0, r3, #33554432	; 0x2000000
 110:	02000205 	andeq	r0, r0, #1342177280	; 0x50000000
 114:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 118:	23055001 	movwcs	r5, #20481	; 0x5001
 11c:	4b02055b 	blmi	81690 <startup-0x1ff7e970>
 120:	3d4b0605 	stclcc	6, cr0, [fp, #-20]	; 0xffffffec
 124:	14053d3d 	strne	r3, [r5], #-3389	; 0xfffff2c3
 128:	2e10053d 	mrccs	5, 0, r0, cr0, cr13, {1}
 12c:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
 130:	10052f14 	andne	r2, r5, r4, lsl pc
 134:	2e0c052e 	cfsh32cs	mvfx0, mvfx12, #30
 138:	052f0605 	streq	r0, [pc, #-1541]!	; fffffb3b <l+0xdfffe8b3>
 13c:	0b052e04 	bleq	14b954 <startup-0x1feb46ac>
 140:	06053d2f 	streq	r3, [r5], -pc, lsr #26
 144:	2e04053e 	mcrcs	5, 0, r0, cr4, cr14, {1}
 148:	3d2f0b05 	fstmdbxcc	pc!, {d0-d1}	;@ Deprecated
 14c:	053e0205 	ldreq	r0, [lr, #-517]!	; 0xfffffdfb
 150:	39054b01 	stmdbcc	r5, {r0, r8, r9, fp, lr}
 154:	6706054c 	strvs	r0, [r6, -ip, asr #10]
 158:	3d2f0a05 	vstmdbcc	pc!, {s0-s4}
 15c:	053d0105 	ldreq	r0, [sp, #-261]!	; 0xfffffefb
 160:	02054f21 	andeq	r4, r5, #33, 30	; 0x84
 164:	4b06054b 	blmi	181698 <startup-0x1fe7e968>
 168:	3d14053d 	cfldr32cc	mvfx0, [r4, #-244]	; 0xffffff0c
 16c:	052e1005 	streq	r1, [lr, #-5]!
 170:	14052e0c 	strne	r2, [r5], #-3596	; 0xfffff1f4
 174:	2e10052f 	cfmul64cs	mvdx0, mvdx0, mvdx15
 178:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
 17c:	18052f11 	stmdane	r5, {r0, r4, r8, r9, sl, fp, sp}
 180:	2006052e 	andcs	r0, r6, lr, lsr #10
 184:	053d0705 	ldreq	r0, [sp, #-1797]!	; 0xfffff8fb
 188:	0a052e04 	beq	14b9a0 <startup-0x1feb4660>
 18c:	6708052f 	strvs	r0, [r8, -pc, lsr #10]
 190:	2e04053e 	mcrcs	5, 0, r0, cr4, cr14, {1}
 194:	052f0a05 	streq	r0, [pc, #-2565]!	; fffff797 <l+0xdfffe50f>
 198:	06056708 	streq	r6, [r5], -r8, lsl #14
 19c:	2e04053e 	mcrcs	5, 0, r0, cr4, cr14, {1}
 1a0:	052f1105 	streq	r1, [pc, #-261]!	; a3 <startup-0x1fffff5d>
 1a4:	0b052e0e 	bleq	14b9e4 <startup-0x1feb461c>
 1a8:	30060520 	andcc	r0, r6, r0, lsr #10
 1ac:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
 1b0:	0e052f11 	mcreq	15, 0, r2, cr5, cr1, {0}
 1b4:	200b052e 	andcs	r0, fp, lr, lsr #10
 1b8:	05300205 	ldreq	r0, [r0, #-517]!	; 0xfffffdfb
 1bc:	05af4b01 	streq	r4, [pc, #2817]!	; cc5 <startup-0x1ffff33b>
 1c0:	2005ad0e 	andcs	sl, r5, lr, lsl #26
 1c4:	2e08053c 	mcrcs	5, 0, r0, cr8, cr12, {1}
 1c8:	02002b05 	andeq	r2, r0, #5120	; 0x1400
 1cc:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 1d0:	0402003b 	streq	r0, [r2], #-59	; 0xffffffc5
 1d4:	23052e01 	movwcs	r2, #24065	; 0x5e01
 1d8:	01040200 	mrseq	r0, R12_usr
 1dc:	2f12052e 	svccs	0x0012052e
 1e0:	052e2405 	streq	r2, [lr, #-1029]!	; 0xfffffbfb
 1e4:	2f052e0c 	svccs	0x00052e0c
 1e8:	01040200 	mrseq	r0, R12_usr
 1ec:	003f052e 	eorseq	r0, pc, lr, lsr #10
 1f0:	2e010402 	cdpcs	4, 0, cr0, cr1, cr2, {0}
 1f4:	02002705 	andeq	r2, r0, #1310720	; 0x140000
 1f8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
 1fc:	0c052f14 	stceq	15, cr2, [r5], {20}
 200:	21010532 	tstcs	r1, r2, lsr r5
 204:	591f054d 	ldmdbpl	pc, {r0, r2, r3, r6, r8, sl}	; <UNPREDICTABLE>
 208:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
 20c:	0b054a29 	bleq	152ab8 <startup-0x1fead548>
 210:	3d21052e 	cfstr32cc	mvfx0, [r1, #-184]!	; 0xffffff48
 214:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
 218:	3105202c 	tstcc	r5, ip, lsr #32
 21c:	2028052e 	eorcs	r0, r8, lr, lsr #10
 220:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
 224:	43053c3c 	movwmi	r3, #23612	; 0x5c3c
 228:	2047052e 	subcs	r0, r7, lr, lsr #10
 22c:	052e4c05 	streq	r4, [lr, #-3077]!	; 0xfffff3fb
 230:	0b052043 	bleq	148344 <startup-0x1feb7cbc>
 234:	301d053c 	andscc	r0, sp, ip, lsr r5
 238:	052e0805 	streq	r0, [lr, #-2053]!	; 0xfffff7fb
 23c:	2e054a27 	vmlacs.f32	s8, s10, s15
 240:	2032052e 	eorscs	r0, r2, lr, lsr #10
 244:	052e3705 	streq	r3, [lr, #-1797]!	; 0xfffff8fb
 248:	0805202e 	stmdaeq	r5, {r1, r2, r3, r5, sp}
 24c:	2f20053c 	svccs	0x0020053c
 250:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
 254:	3005202b 	andcc	r2, r5, fp, lsr #32
 258:	2027052e 	eorcs	r0, r7, lr, lsr #10
 25c:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
 260:	0b053c3b 	bleq	14f354 <startup-0x1feb0cac>
 264:	3e1f052e 	cfmul64cc	mvdx0, mvdx15, mvdx14
 268:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
 26c:	0b054a29 	bleq	152b18 <startup-0x1fead4e8>
 270:	3d20052e 	cfstr32cc	mvfx0, [r0, #-184]!	; 0xffffff48
 274:	052e2705 	streq	r2, [lr, #-1797]!	; 0xfffff8fb
 278:	3005202b 	andcc	r2, r5, fp, lsr #32
 27c:	2027052e 	eorcs	r0, r7, lr, lsr #10
 280:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
 284:	0b053c3b 	bleq	14f378 <startup-0x1feb0c88>
 288:	3d20052e 	cfstr32cc	mvfx0, [r0, #-184]!	; 0xffffff48
 28c:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
 290:	31054a2a 	tstcc	r5, sl, lsr #20
 294:	2035052e 	eorscs	r0, r5, lr, lsr #10
 298:	052e3a05 	streq	r3, [lr, #-2565]!	; 0xfffff5fb
 29c:	0b052031 	bleq	148368 <startup-0x1feb7c98>
 2a0:	2f21053c 	svccs	0x0021053c
 2a4:	052e2805 	streq	r2, [lr, #-2053]!	; 0xfffff7fb
 2a8:	3105202c 	tstcc	r5, ip, lsr #32
 2ac:	2028052e 	eorcs	r0, r8, lr, lsr #10
 2b0:	053c0b05 	ldreq	r0, [ip, #-2821]!	; 0xfffff4fb
 2b4:	43053c3c 	movwmi	r3, #23612	; 0x5c3c
 2b8:	2047052e 	subcs	r0, r7, lr, lsr #10
 2bc:	052e4c05 	streq	r4, [lr, #-3077]!	; 0xfffff3fb
 2c0:	0b052043 	bleq	1483d4 <startup-0x1feb7c2c>
 2c4:	3009053c 	andcc	r0, r9, ip, lsr r5
 2c8:	05900805 	ldreq	r0, [r0, #2053]	; 0x805
 2cc:	09052110 	stmdbeq	r5, {r4, r8, sp}
 2d0:	ba080531 	blt	20179c <startup-0x1fdfe864>
 2d4:	05211005 	streq	r1, [r1, #-5]!
 2d8:	08053109 	stmdaeq	r5, {r0, r3, r8, ip, sp}
 2dc:	211005ba 			; <UNDEFINED> instruction: 0x211005ba
 2e0:	05310905 	ldreq	r0, [r1, #-2309]!	; 0xfffff6fb
 2e4:	1005ba08 	andne	fp, r5, r8, lsl #20
 2e8:	31060521 	tstcc	r6, r1, lsr #10
 2ec:	05ba0505 	ldreq	r0, [sl, #1285]!	; 0x505
 2f0:	0c052110 	stfeqs	f2, [r5], {16}
 2f4:	00010531 	andeq	r0, r1, r1, lsr r5
 2f8:	21010402 	tstcs	r1, r2, lsl #8
 2fc:	01000402 	tsteq	r0, r2, lsl #8
 300:	0000f301 	andeq	pc, r0, r1, lsl #6
 304:	52000300 	andpl	r0, r0, #0, 6
 308:	02000000 	andeq	r0, r0, #0
 30c:	0d0efb01 	vstreq	d15, [lr, #-4]
 310:	01010100 	mrseq	r0, (UNDEF: 17)
 314:	00000001 	andeq	r0, r0, r1
 318:	01000001 	tsteq	r0, r1
 31c:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff8e1 <l+0xdfffe659>
 320:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 324:	442f4a2f 	strtmi	r4, [pc], #-2607	; 32c <startup-0x1ffffcd4>
 328:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 32c:	73746e65 	cmnvc	r4, #1616	; 0x650
 330:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 334:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 338:	692f7374 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
 33c:	74727579 	ldrbtvc	r7, [r2], #-1401	; 0xfffffa87
 340:	00007974 	andeq	r7, r0, r4, ror r9
 344:	616c6544 	cmnvs	ip, r4, asr #10
 348:	00632e79 	rsbeq	r2, r3, r9, ror lr
 34c:	53000001 	movwpl	r0, #1
 350:	49545359 	ldmdbmi	r4, {r0, r3, r4, r6, r8, r9, ip, lr}^
 354:	682e4b43 	stmdavs	lr!, {r0, r1, r6, r8, r9, fp, lr}
 358:	00000100 	andeq	r0, r0, r0, lsl #2
 35c:	00190500 	andseq	r0, r9, r0, lsl #10
 360:	048c0205 	streq	r0, [ip], #517	; 0x205
 364:	05162000 	ldreq	r2, [r6, #-0]
 368:	0f052f02 	svceq	0x00052f02
 36c:	2f020520 	svccs	0x00020520
 370:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 374:	0e056702 	cdpeq	7, 0, cr6, cr5, cr2, {0}
 378:	4b020520 	blmi	81800 <startup-0x1ff7e800>
 37c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 380:	0a052f07 	beq	14bfa4 <startup-0x1feb405c>
 384:	01040200 	mrseq	r0, R12_usr
 388:	00110520 	andseq	r0, r1, r0, lsr #10
 38c:	20010402 	andcs	r0, r1, r2, lsl #8
 390:	02001705 	andeq	r1, r0, #1310720	; 0x140000
 394:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 398:	04020007 	streq	r0, [r2], #-7
 39c:	02053c01 	andeq	r3, r5, #256	; 0x100
 3a0:	200f0521 	andcs	r0, pc, r1, lsr #10
 3a4:	692f0105 	stmdbvs	pc!, {r0, r2, r8}	; <UNPREDICTABLE>
 3a8:	214b0705 	cmpcs	fp, r5, lsl #14
 3ac:	052f0805 	streq	r0, [pc, #-2053]!	; fffffbaf <l+0xdfffe927>
 3b0:	06052104 	streq	r2, [r5], -r4, lsl #2
 3b4:	3a08052f 	bcc	201878 <startup-0x1fdfe788>
 3b8:	05410405 	strbeq	r0, [r1, #-1029]	; 0xfffffbfb
 3bc:	3c790307 	ldclcc	3, cr0, [r9], #-28	; 0xffffffe4
 3c0:	09030105 	stmdbeq	r3, {r0, r2, r8}
 3c4:	5a22053c 	bpl	8818bc <startup-0x1f77e744>
 3c8:	054b0705 	strbeq	r0, [fp, #-1797]	; 0xfffff8fb
 3cc:	2f2f2103 	svccs	0x002f2103
 3d0:	2f05052f 	svccs	0x0005052f
 3d4:	05370705 	ldreq	r0, [r7, #-1797]!	; 0xfffff8fb
 3d8:	055b4301 	ldrbeq	r4, [fp, #-769]	; 0xfffffcff
 3dc:	02052f0f 	andeq	r2, r5, #15, 30	; 0x3c
 3e0:	200f0567 	andcs	r0, pc, r7, ror #10
 3e4:	05670205 	strbeq	r0, [r7, #-517]!	; 0xfffffdfb
 3e8:	0205200e 	andeq	r2, r5, #14
 3ec:	200f054b 	andcs	r0, pc, fp, asr #10
 3f0:	022f0105 	eoreq	r0, pc, #1073741825	; 0x40000001
 3f4:	01010008 	tsteq	r1, r8
 3f8:	000001d3 	ldrdeq	r0, [r0], -r3
 3fc:	005c0003 	subseq	r0, ip, r3
 400:	01020000 	mrseq	r0, (UNDEF: 2)
 404:	000d0efb 	strdeq	r0, [sp], -fp
 408:	01010101 	tsteq	r1, r1, lsl #2
 40c:	01000000 	mrseq	r0, (UNDEF: 0)
 410:	43010000 	movwmi	r0, #4096	; 0x1000
 414:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 418:	2f737265 	svccs	0x00737265
 41c:	6f442f4a 	svcvs	0x00442f4a
 420:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 424:	2f73746e 	svccs	0x0073746e
 428:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 42c:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 430:	79692f73 	stmdbvc	r9!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 434:	74747275 	ldrbtvc	r7, [r4], #-629	; 0xfffffd8b
 438:	41000079 	tstmi	r0, r9, ror r0
 43c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 440:	70736944 	rsbsvc	r6, r3, r4, asr #18
 444:	4479616c 	ldrbtmi	r6, [r9], #-364	; 0xfffffe94
 448:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 44c:	00632e72 	rsbeq	r2, r3, r2, ror lr
 450:	47000001 	strmi	r0, [r0, -r1]
 454:	2e4f4950 			; <UNDEFINED> instruction: 0x2e4f4950
 458:	00010068 	andeq	r0, r1, r8, rrx
 45c:	30050000 	andcc	r0, r5, r0
 460:	78020500 	stmdavc	r2, {r8, sl}
 464:	17200005 	strne	r0, [r0, -r5]!
 468:	59920705 	ldmibpl	r2, {r0, r2, r8, r9, sl}
 46c:	91170559 	tstls	r7, r9, asr r5
 470:	05580e05 	ldrbeq	r0, [r8, #-3589]	; 0xfffff1fb
 474:	0e053d17 	mcreq	13, 0, r3, cr5, cr7, {0}
 478:	2f02054a 	svccs	0x0002054a
 47c:	054b0505 	strbeq	r0, [fp, #-1285]	; 0xfffffafb
 480:	05052e04 	streq	r2, [r5, #-3588]	; 0xfffff1fc
 484:	2f09052f 	svccs	0x0009052f
 488:	05211705 	streq	r1, [r1, #-1797]!	; 0xfffff8fb
 48c:	0a053c03 	beq	14f4a0 <startup-0x1feb0b60>
 490:	2e090549 	cfsh32cs	mvfx0, mvfx9, #41
 494:	05310205 	ldreq	r0, [r1, #-517]!	; 0xfffffdfb
 498:	08054b04 	stmdaeq	r5, {r2, r8, r9, fp, lr}
 49c:	2117053e 	tstcs	r7, lr, lsr r5
 4a0:	053c0305 	ldreq	r0, [ip, #-773]!	; 0xfffffcfb
 4a4:	08054909 	stmdaeq	r5, {r0, r3, r8, fp, lr}
 4a8:	310a052e 	tstcc	sl, lr, lsr #10
 4ac:	05300105 	ldreq	r0, [r0, #-261]!	; 0xfffffefb
 4b0:	0205ae16 	andeq	sl, r5, #352	; 0x160
 4b4:	3d3d3d2f 	ldccc	13, cr3, [sp, #-188]!	; 0xffffff44
 4b8:	3d2f3d3d 	stccc	13, cr3, [pc, #-244]!	; 3cc <startup-0x1ffffc34>
 4bc:	3d01053d 	cfstr32cc	mvfx0, [r1, #-244]	; 0xffffff0c
 4c0:	053f2805 	ldreq	r2, [pc, #-2053]!	; fffffcc3 <l+0xdfffea3b>
 4c4:	3d3d6702 	ldccc	7, cr6, [sp, #-8]!
 4c8:	055a0105 	ldrbeq	r0, [sl, #-261]	; 0xfffffefb
 4cc:	02054d2a 	andeq	r4, r5, #2688	; 0xa80
 4d0:	053d3d67 	ldreq	r3, [sp, #-3431]!	; 0xfffff299
 4d4:	23055901 	movwcs	r5, #22785	; 0x5901
 4d8:	3d02054e 	cfstr32cc	mvfx0, [r2, #-312]	; 0xfffffec8
 4dc:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 4e0:	2f3d3002 	svccs	0x003d3002
 4e4:	052f0605 	streq	r0, [pc, #-1541]!	; fffffee7 <l+0xdfffec5f>
 4e8:	02052004 	andeq	r2, r5, #4
 4ec:	10053d3d 	andne	r3, r5, sp, lsr sp
 4f0:	2f090520 	svccs	0x00090520
 4f4:	052f0105 	streq	r0, [pc, #-261]!	; 3f7 <startup-0x1ffffc09>
 4f8:	0205a02f 	andeq	sl, r5, #47	; 0x2f
 4fc:	053d3d67 	ldreq	r3, [sp, #-3431]!	; 0xfffff299
 500:	02052011 	andeq	r2, r5, #17
 504:	053d2f3d 	ldreq	r2, [sp, #-3901]!	; 0xfffff0c3
 508:	1f052f01 	svcne	0x00052f01
 50c:	3e020576 	cfrshl64cc	mvdx2, mvdx6, r0
 510:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 514:	053d2f02 	ldreq	r2, [sp, #-3842]!	; 0xfffff0fe
 518:	02053d06 	andeq	r3, r5, #384	; 0x180
 51c:	200f0559 	andcs	r0, pc, r9, asr r5	; <UNPREDICTABLE>
 520:	052f0905 	streq	r0, [pc, #-2309]!	; fffffc23 <l+0xdfffe99b>
 524:	1d052f01 	stcne	15, cr2, [r5, #-4]
 528:	3e0205a0 	cfsh32cc	mvfx0, mvfx2, #-48
 52c:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 530:	053d2f02 	ldreq	r2, [sp, #-3842]!	; 0xfffff0fe
 534:	02053d06 	andeq	r3, r5, #384	; 0x180
 538:	200f0559 	andcs	r0, pc, r9, asr r5	; <UNPREDICTABLE>
 53c:	052f0905 	streq	r0, [pc, #-2309]!	; fffffc3f <l+0xdfffe9b7>
 540:	2b052f01 	blcs	14c14c <startup-0x1feb3eb4>
 544:	680605a0 	stmdavs	r6, {r5, r7, r8, sl}
 548:	05200405 	streq	r0, [r0, #-1029]!	; 0xfffffbfb
 54c:	02054b10 	andeq	r4, r5, #16, 22	; 0x4000
 550:	20100566 	andscs	r0, r0, r6, ror #10
 554:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
 558:	06056824 	streq	r6, [r5], -r4, lsr #16
 55c:	20040568 	andcs	r0, r4, r8, ror #10
 560:	054b0805 	strbeq	r0, [fp, #-2053]	; 0xfffff7fb
 564:	02059e04 	andeq	r9, r5, #4, 28	; 0x40
 568:	2010052f 	andscs	r0, r0, pc, lsr #10
 56c:	05670105 	strbeq	r0, [r7, #-261]!	; 0xfffffefb
 570:	07056815 	smladeq	r5, r5, r8, r6
 574:	0009052f 	andeq	r0, r9, pc, lsr #10
 578:	20010402 	andcs	r0, r1, r2, lsl #8
 57c:	02001d05 	andeq	r1, r0, #320	; 0x140
 580:	053c0104 	ldreq	r0, [ip, #-260]!	; 0xfffffefc
 584:	04020007 	streq	r0, [r2], #-7
 588:	02053c01 	andeq	r3, r5, #256	; 0x100
 58c:	053d3d2f 	ldreq	r3, [sp, #-3375]!	; 0xfffff2d1
 590:	2a053d01 	bcs	14f99c <startup-0x1feb0664>
 594:	6708053e 	smladxvs	r8, lr, r5, r0
 598:	02000b05 	andeq	r0, r0, #5120	; 0x1400
 59c:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 5a0:	0402001f 	streq	r0, [r2], #-31	; 0xffffffe1
 5a4:	08053c01 	stmdaeq	r5, {r0, sl, fp, ip, sp}
 5a8:	01040200 	mrseq	r0, R12_usr
 5ac:	2f03053c 	svccs	0x0003053c
 5b0:	0105593d 	tsteq	r5, sp, lsr r9
 5b4:	4c21053d 	cfstr32mi	mvfx0, [r1], #-244	; 0xffffff0c
 5b8:	055a0a05 	ldrbeq	r0, [sl, #-2565]	; 0xfffff5fb
 5bc:	0b053d04 	bleq	14f9d4 <startup-0x1feb062c>
 5c0:	3e17053d 	mrccc	5, 0, r0, cr7, cr13, {1}
 5c4:	05660205 	strbeq	r0, [r6, #-517]!	; 0xfffffdfb
 5c8:	04024b01 	streq	r4, [r2], #-2817	; 0xfffff4ff
 5cc:	52010100 	andpl	r0, r1, #0, 2
 5d0:	03000001 	movweq	r0, #1
 5d4:	00005800 	andeq	r5, r0, r0, lsl #16
 5d8:	fb010200 	blx	40de2 <startup-0x1ffbf21e>
 5dc:	01000d0e 	tsteq	r0, lr, lsl #26
 5e0:	00010101 	andeq	r0, r1, r1, lsl #2
 5e4:	00010000 	andeq	r0, r1, r0
 5e8:	3a430100 	bcc	10c09f0 <startup-0x1ef3f610>
 5ec:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 5f0:	4a2f7372 	bmi	bdd3c0 <startup-0x1f422c40>
 5f4:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 5f8:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 5fc:	442f7374 	strtmi	r7, [pc], #-884	; 604 <startup-0x1ffff9fc>
 600:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 604:	73746e65 	cmnvc	r4, #1616	; 0x650
 608:	7579692f 	ldrbvc	r6, [r9, #-2351]!	; 0xfffff6d1
 60c:	79747472 	ldmdbvc	r4!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 610:	654b0000 	strbvs	r0, [fp, #-0]
 614:	616f6279 	smcvs	63017	; 0xf629
 618:	72446472 	subvc	r6, r4, #1912602624	; 0x72000000
 61c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 620:	0100632e 	tsteq	r0, lr, lsr #6
 624:	50470000 	subpl	r0, r7, r0
 628:	682e4f49 	stmdavs	lr!, {r0, r3, r6, r8, r9, sl, fp, lr}
 62c:	00000100 	andeq	r0, r0, r0, lsl #2
 630:	00190500 	andseq	r0, r9, r0, lsl #10
 634:	08f00205 	ldmeq	r0!, {r0, r2, r9}^
 638:	05162000 	ldreq	r2, [r6, #-0]
 63c:	07056804 	streq	r6, [r5, -r4, lsl #16]
 640:	2005054b 	andcs	r0, r5, fp, asr #10
 644:	055b0705 	ldrbeq	r0, [fp, #-1797]	; 0xfffff8fb
 648:	07052005 	streq	r2, [r5, -r5]
 64c:	5804054c 	stmdapl	r4, {r2, r3, r6, r8, sl}
 650:	02001505 	andeq	r1, r0, #20971520	; 0x1400000
 654:	05200104 	streq	r0, [r0, #-260]!	; 0xfffffefc
 658:	04052f07 	streq	r2, [r5], #-3847	; 0xfffff0f9
 65c:	00150558 	andseq	r0, r5, r8, asr r5
 660:	20010402 	andcs	r0, r1, r2, lsl #8
 664:	052f0705 	streq	r0, [pc, #-1797]!	; ffffff67 <l+0xdfffecdf>
 668:	15055804 	strne	r5, [r5, #-2052]	; 0xfffff7fc
 66c:	01040200 	mrseq	r0, R12_usr
 670:	2f070520 	svccs	0x00070520
 674:	05580405 	ldrbeq	r0, [r8, #-1029]	; 0xfffffbfb
 678:	04020015 	streq	r0, [r2], #-21	; 0xffffffeb
 67c:	09052001 	stmdbeq	r5, {r0, sp}
 680:	2201052f 	andcs	r0, r1, #197132288	; 0xbc00000
 684:	05682f05 	strbeq	r2, [r8, #-3845]!	; 0xfffff0fb
 688:	02057505 	andeq	r7, r5, #20971520	; 0x1400000
 68c:	080b054b 	stmdaeq	fp, {r0, r1, r3, r6, r8, sl}
 690:	201a052f 	andscs	r0, sl, pc, lsr #10
 694:	052f0405 	streq	r0, [pc, #-1029]!	; 297 <startup-0x1ffffd69>
 698:	1a05210b 	bne	148acc <startup-0x1feb7534>
 69c:	2f040520 	svccs	0x00040520
 6a0:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
 6a4:	0405201a 	streq	r2, [r5], #-26	; 0xffffffe6
 6a8:	210b052f 	tstcs	fp, pc, lsr #10
 6ac:	05201a05 	streq	r1, [r0, #-2565]!	; 0xfffff5fb
 6b0:	0c052f04 	stceq	15, cr2, [r5], {4}
 6b4:	201b0521 	andscs	r0, fp, r1, lsr #10
 6b8:	052f0405 	streq	r0, [pc, #-1029]!	; 2bb <startup-0x1ffffd45>
 6bc:	0b052402 	bleq	1496cc <startup-0x1feb6934>
 6c0:	19052f08 	stmdbne	r5, {r3, r8, r9, sl, fp, sp}
 6c4:	2f040520 	svccs	0x00040520
 6c8:	05210b05 	streq	r0, [r1, #-2821]!	; 0xfffff4fb
 6cc:	0405201a 	streq	r2, [r5], #-26	; 0xffffffe6
 6d0:	210b052f 	tstcs	fp, pc, lsr #10
 6d4:	05201905 	streq	r1, [r0, #-2309]!	; 0xfffff6fb
 6d8:	0b052f04 	bleq	14c2f0 <startup-0x1feb3d10>
 6dc:	20190521 	andscs	r0, r9, r1, lsr #10
 6e0:	052f0405 	streq	r0, [pc, #-1029]!	; 2e3 <startup-0x1ffffd1d>
 6e4:	1a05210c 	bne	148b1c <startup-0x1feb74e4>
 6e8:	2f040520 	svccs	0x00040520
 6ec:	05240205 	streq	r0, [r4, #-517]!	; 0xfffffdfb
 6f0:	07057615 	smladeq	r5, r5, r6, r7
 6f4:	770a0567 	strvc	r0, [sl, -r7, ror #10]
 6f8:	052e0205 	streq	r0, [lr, #-517]!	; 0xfffffdfb
 6fc:	0d052103 	stfeqs	f2, [r5, #-12]
 700:	74050575 	strvc	r0, [r5], #-1397	; 0xfffffa8b
 704:	053d1505 	ldreq	r1, [sp, #-1285]!	; 0xfffffafb
 708:	0402001c 	streq	r0, [r2], #-28	; 0xffffffe4
 70c:	0205a902 	andeq	sl, r5, #32768	; 0x8000
 710:	01040200 	mrseq	r0, R12_usr
 714:	0905433c 	stmdbeq	r5, {r2, r3, r4, r5, r8, r9, lr}
 718:	00010567 	andeq	r0, r1, r7, ror #10
 71c:	21010402 	tstcs	r1, r2, lsl #8
 720:	01000702 	tsteq	r0, r2, lsl #14
 724:	00008701 	andeq	r8, r0, r1, lsl #14
 728:	4d000300 	stcmi	3, cr0, [r0, #-0]
 72c:	02000000 	andeq	r0, r0, #0
 730:	0d0efb01 	vstreq	d15, [lr, #-4]
 734:	01010100 	mrseq	r0, (UNDEF: 17)
 738:	00000001 	andeq	r0, r0, r1
 73c:	01000001 	tsteq	r0, r1
 740:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffffd05 <l+0xdfffea7d>
 744:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 748:	442f4a2f 	strtmi	r4, [pc], #-2607	; 750 <startup-0x1ffff8b0>
 74c:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 750:	73746e65 	cmnvc	r4, #1616	; 0x650
 754:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 758:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 75c:	692f7374 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
 760:	74727579 	ldrbtvc	r7, [r2], #-1401	; 0xfffffa87
 764:	00007974 	andeq	r7, r0, r4, ror r9
 768:	70617247 	rsbvc	r7, r1, r7, asr #4
 76c:	44636968 	strbtmi	r6, [r3], #-2408	; 0xfffff698
 770:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 774:	00632e72 	rsbeq	r2, r3, r2, ror lr
 778:	00000001 	andeq	r0, r0, r1
 77c:	05001d05 	streq	r1, [r0, #-3333]	; 0xfffff2fb
 780:	000aa802 	andeq	sl, sl, r2, lsl #16
 784:	02051520 	andeq	r1, r5, #32, 10	; 0x8000000
 788:	01051321 	tsteq	r5, r1, lsr #6
 78c:	24250522 	strtcs	r0, [r5], #-1314	; 0xfffffade
 790:	13210205 			; <UNDEFINED> instruction: 0x13210205
 794:	05220105 	streq	r0, [r2, #-261]!	; 0xfffffefb
 798:	02052320 	andeq	r2, r5, #32, 6	; 0x80000000
 79c:	01051321 	tsteq	r5, r1, lsr #6
 7a0:	23270522 			; <UNDEFINED> instruction: 0x23270522
 7a4:	13210205 			; <UNDEFINED> instruction: 0x13210205
 7a8:	02210105 	eoreq	r0, r1, #1073741825	; 0x40000001
 7ac:	01010001 	tsteq	r1, r1
 7b0:	000001fa 	strdeq	r0, [r0], -sl
 7b4:	006c0003 	rsbeq	r0, ip, r3
 7b8:	01020000 	mrseq	r0, (UNDEF: 2)
 7bc:	000d0efb 	strdeq	r0, [sp], -fp
 7c0:	01010101 	tsteq	r1, r1, lsl #2
 7c4:	01000000 	mrseq	r0, (UNDEF: 0)
 7c8:	43010000 	movwmi	r0, #4096	; 0x1000
 7cc:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 7d0:	2f737265 	svccs	0x00737265
 7d4:	6f442f4a 	svcvs	0x00442f4a
 7d8:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 7dc:	2f73746e 	svccs	0x0073746e
 7e0:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 7e4:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 7e8:	79692f73 	stmdbvc	r9!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 7ec:	74747275 	ldrbtvc	r7, [r4], #-629	; 0xfffffd8b
 7f0:	73000079 	movwvc	r0, #121	; 0x79
 7f4:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 7f8:	632e7075 			; <UNDEFINED> instruction: 0x632e7075
 7fc:	00000100 	andeq	r0, r0, r0, lsl #2
 800:	4f495047 	svcmi	0x00495047
 804:	0100682e 	tsteq	r0, lr, lsr #16
 808:	65470000 	strbvs	r0, [r7, #-0]
 80c:	74656d6f 	strbtvc	r6, [r5], #-3439	; 0xfffff291
 810:	682e7972 	stmdavs	lr!, {r1, r4, r5, r6, r8, fp, ip, sp, lr}
 814:	00000100 	andeq	r0, r0, r0, lsl #2
 818:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
 81c:	2e4b4349 	cdpcs	3, 4, cr4, cr11, cr9, {2}
 820:	00010068 	andeq	r0, r1, r8, rrx
 824:	01050000 	mrseq	r0, (UNDEF: 5)
 828:	00020500 	andeq	r0, r2, r0, lsl #10
 82c:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
 830:	2113010d 	tstcs	r3, sp, lsl #2
 834:	02212f21 	eoreq	r2, r1, #33, 30	; 0x84
 838:	01010003 	tsteq	r1, r3
 83c:	05002405 	streq	r2, [r0, #-1029]	; 0xfffffbfb
 840:	000ac002 	andeq	ip, sl, r2
 844:	01260320 			; <UNDEFINED> instruction: 0x01260320
 848:	054c0405 	strbeq	r0, [ip, #-1029]	; 0xfffffbfb
 84c:	053d4b0d 	ldreq	r4, [sp, #-2829]!	; 0xfffff4f3
 850:	0d054201 	sfmeq	f4, 4, [r5, #-4]
 854:	01053d1d 	tsteq	r5, sp, lsl sp
 858:	ae22053e 	mcrge	5, 1, r0, cr2, cr14, {1}
 85c:	05670b05 	strbeq	r0, [r7, #-2821]!	; 0xfffff4fb
 860:	18059101 	stmdane	r5, {r0, r8, ip, pc}
 864:	2f04055e 	svccs	0x0004055e
 868:	053c0305 	ldreq	r0, [ip, #-773]!	; 0xfffffcfb
 86c:	03054b04 	movweq	r4, #23300	; 0x5b04
 870:	4b01053c 	blmi	41d68 <startup-0x1ffbe298>
 874:	05841b05 	streq	r1, [r4, #2821]	; 0xb05
 878:	04052f05 	streq	r2, [r5], #-3845	; 0xfffff0fb
 87c:	21150590 			; <UNDEFINED> instruction: 0x21150590
 880:	053c0605 	ldreq	r0, [ip, #-1541]!	; 0xfffff9fb
 884:	0e052e11 	mcreq	14, 0, r2, cr5, cr1, {0}
 888:	21130520 	tstcs	r3, r0, lsr #10
 88c:	052e0605 	streq	r0, [lr, #-1541]!	; 0xfffff9fb
 890:	0e052e13 	mcreq	14, 0, r2, cr5, cr3, {0}
 894:	22050520 	andcs	r0, r5, #32, 10	; 0x8000000
 898:	05900405 	ldreq	r0, [r0, #1029]	; 0x405
 89c:	06052115 			; <UNDEFINED> instruction: 0x06052115
 8a0:	2e11053c 	mrccs	5, 0, r0, cr1, cr12, {1}
 8a4:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 8a8:	06052113 			; <UNDEFINED> instruction: 0x06052113
 8ac:	2e13052e 	cfmul64cs	mvdx0, mvdx3, mvdx14
 8b0:	05200e05 	streq	r0, [r0, #-3589]!	; 0xfffff1fb
 8b4:	02052203 	andeq	r2, r5, #805306368	; 0x30000000
 8b8:	4c05053c 	cfstr32mi	mvfx0, [r5], {60}	; 0x3c
 8bc:	052e0405 	streq	r0, [lr, #-1029]!	; 0xfffffbfb
 8c0:	052f2f03 	streq	r2, [pc, #-3843]!	; fffff9c5 <l+0xdfffe73d>
 8c4:	0b058304 	bleq	1614dc <startup-0x1fe9eb24>
 8c8:	2f04052e 	svccs	0x0004052e
 8cc:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
 8d0:	0a052f04 	beq	14c4e8 <startup-0x1feb3b18>
 8d4:	2f04052e 	svccs	0x0004052e
 8d8:	052e0b05 	streq	r0, [lr, #-2821]!	; 0xfffff4fb
 8dc:	0b052f04 	bleq	14c4f4 <startup-0x1feb3b0c>
 8e0:	2f05052e 	svccs	0x0005052e
 8e4:	052e0c05 	streq	r0, [lr, #-3077]!	; 0xfffff3fb
 8e8:	01052f08 	tsteq	r5, r8, lsl #30
 8ec:	f418053f 			; <UNDEFINED> instruction: 0xf418053f
 8f0:	052f0205 	streq	r0, [pc, #-517]!	; 6f3 <startup-0x1ffff90d>
 8f4:	0205200f 	andeq	r2, r5, #15
 8f8:	200d052f 	andcs	r0, sp, pc, lsr #10
 8fc:	054b0f05 	strbeq	r0, [fp, #-3845]	; 0xfffff0fb
 900:	2f2f6702 	svccs	0x002f6702
 904:	2f010559 	svccs	0x00010559
 908:	17032605 	strne	r2, [r3, -r5, lsl #12]
 90c:	75040574 	strvc	r0, [r4, #-1396]	; 0xfffffa8c
 910:	0b030105 	bleq	c0d2c <startup-0x1ff3f2d4>
 914:	030e05ba 	movweq	r0, #58810	; 0xe5ba
 918:	0d052076 	stceq	0, cr2, [r5, #-472]	; 0xfffffe28
 91c:	5905052e 	stmdbpl	r5, {r1, r2, r3, r5, r8, sl}
 920:	05210e05 	streq	r0, [r1, #-3589]!	; 0xfffff1fb
 924:	05052e0d 	streq	r2, [r5, #-3597]	; 0xfffff1f3
 928:	210f054b 	tstcs	pc, fp, asr #10
 92c:	052e0e05 	streq	r0, [lr, #-3589]!	; 0xfffff1fb
 930:	0e054b05 	vmlaeq.f64	d4, d5, d5
 934:	2e150521 	cfmul64cs	mvdx0, mvdx5, mvdx1
 938:	052e1c05 	streq	r1, [lr, #-3077]!	; 0xfffff3fb
 93c:	05052e23 	streq	r2, [r5, #-3619]	; 0xfffff1dd
 940:	2301052f 	movwcs	r0, #5423	; 0x152f
 944:	057a1905 	ldrbeq	r1, [sl, #-2309]!	; 0xfffff6fb
 948:	0f052f02 	svceq	0x00052f02
 94c:	2f020520 	svccs	0x00020520
 950:	05200f05 	streq	r0, [r0, #-3845]!	; 0xfffff0fb
 954:	11052f02 	tstne	r5, r2, lsl #30
 958:	2f020520 	svccs	0x00020520
 95c:	05201005 	streq	r1, [r0, #-5]!
 960:	0f052f02 	svceq	0x00052f02
 964:	2f020520 	svccs	0x00020520
 968:	054b0105 	strbeq	r0, [fp, #-261]	; 0xfffffefb
 96c:	0205e614 	andeq	lr, r5, #20, 12	; 0x1400000
 970:	0c052f2f 	stceq	15, cr2, [r5], {47}	; 0x2f
 974:	2f020520 	svccs	0x00020520
 978:	05202105 	streq	r2, [r0, #-261]!	; 0xfffffefb
 97c:	10052f01 	andne	r2, r5, r1, lsl #30
 980:	3f0205bc 	svccc	0x000205bc
 984:	2f2f2f2f 	svccs	0x002f2f2f
 988:	0705834b 	streq	r8, [r5, -fp, asr #6]
 98c:	01040200 	mrseq	r0, R12_usr
 990:	04020030 	streq	r0, [r2], #-48	; 0xffffffd0
 994:	03059101 	movweq	r9, #20737	; 0x5101
 998:	01040200 	mrseq	r0, R12_usr
 99c:	04020091 	streq	r0, [r2], #-145	; 0xffffff6f
 9a0:	05058301 	streq	r8, [r5, #-769]	; 0xfffffcff
 9a4:	01040200 	mrseq	r0, R12_usr
 9a8:	000d027f 	andeq	r0, sp, pc, ror r2
 9ac:	Address 0x000009ac is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	4f454750 	svcmi	0x00454750
   4:	5254454d 	subspl	r4, r4, #322961408	; 0x13400000
   8:	316f0059 	qdsubcc	r0, r9, pc	; <UNPREDICTABLE>
   c:	7070755f 	rsbsvc	r7, r0, pc, asr r5
  10:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
  14:	00746665 	rsbseq	r6, r4, r5, ror #12
  18:	552f3a43 	strpl	r3, [pc, #-2627]!	; fffff5dd <l+0xdfffe355>
  1c:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
  20:	442f4a2f 	strtmi	r4, [pc], #-2607	; 28 <startup-0x1fffffd8>
  24:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  28:	73746e65 	cmnvc	r4, #1616	; 0x650
  2c:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
  30:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
  34:	692f7374 	stmdbvs	pc!, {r2, r4, r5, r6, r8, r9, ip, sp, lr}	; <UNPREDICTABLE>
  38:	74727579 	ldrbtvc	r7, [r2], #-1401	; 0xfffffa87
  3c:	472f7974 			; <UNDEFINED> instruction: 0x472f7974
  40:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
  44:	2e797274 	mrccs	2, 3, r7, cr9, cr4, {3}
  48:	316f0063 	cmncc	pc, r3, rrx
  4c:	7070755f 	rsbsvc	r7, r0, pc, asr r5
  50:	725f7265 	subsvc	r7, pc, #1342177286	; 0x50000006
  54:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
  58:	61726700 	cmnvs	r2, r0, lsl #14
  5c:	63696870 	cmnvs	r9, #112, 16	; 0x700000
  60:	7869705f 	stmdavc	r9!, {r0, r1, r2, r3, r4, r6, ip, sp, lr}^
  64:	635f6c65 	cmpvs	pc, #25856	; 0x6500
  68:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
  6c:	61726400 	cmnvs	r2, r0, lsl #8
  70:	6f6d0077 	svcvs	0x006d0077
  74:	64006576 	strvs	r6, [r0], #-1398	; 0xfffffa8a
  78:	00787269 	rsbseq	r7, r8, r9, ror #4
  7c:	79726964 	ldmdbvc	r2!, {r2, r5, r6, r8, fp, sp, lr}^
  80:	78697000 	stmdavc	r9!, {ip, sp, lr}^
  84:	6f006c65 	svcvs	0x00006c65
  88:	6f625f31 	svcvs	0x00625f31
  8c:	6d6f7474 	cfstrdvs	mvd7, [pc, #-464]!	; fffffec4 <l+0xdfffec3c>
  90:	66656c5f 			; <UNDEFINED> instruction: 0x66656c5f
  94:	696c0074 	stmdbvs	ip!, {r2, r4, r5, r6}^
  98:	675f656e 	ldrbvs	r6, [pc, -lr, ror #10]
  9c:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
  a0:	00797274 	rsbseq	r7, r9, r4, ror r2
  a4:	4e494f50 	mcrmi	15, 2, r4, cr9, cr0, {2}
  a8:	6f6d0054 	svcvs	0x006d0054
  ac:	705f6576 	subsvc	r6, pc, r6, ror r5	; <UNPREDICTABLE>
  b0:	65646461 	strbvs	r6, [r4, #-1121]!	; 0xfffffb9f
  b4:	6a626f6c 	bvs	189be6c <startup-0x1e764194>
  b8:	00746365 	rsbseq	r6, r4, r5, ror #6
  bc:	77617264 	strbvc	r7, [r1, -r4, ror #4]!
  c0:	6a626f5f 	bvs	189be44 <startup-0x1e7641bc>
  c4:	00746365 	rsbseq	r6, r4, r5, ror #6
  c8:	5f746573 	svcpl	0x00746573
  cc:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
  d0:	6f700064 	svcvs	0x00700064
  d4:	70007873 	andvc	r7, r0, r3, ror r8
  d8:	0079736f 	rsbseq	r7, r9, pc, ror #6
  dc:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
  e0:	6f65675f 	svcvs	0x0065675f
  e4:	7274656d 	rsbsvc	r6, r4, #457179136	; 0x1b400000
  e8:	69700079 	ldmdbvs	r0!, {r0, r3, r4, r5, r6}^
  ec:	5f6c6578 	svcpl	0x006c6578
  f0:	7265766f 	rsbvc	r7, r5, #116391936	; 0x6f00000
  f4:	0070616c 	rsbseq	r6, r0, ip, ror #2
  f8:	625f326f 	subsvs	r3, pc, #-268435450	; 0xf0000006
  fc:	6f74746f 	svcvs	0x0074746f
 100:	69725f6d 	ldmdbvs	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
 104:	00746867 	rsbseq	r6, r4, r7, ror #16
 108:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
 10c:	326f0074 	rsbcc	r0, pc, #116	; 0x74
 110:	7070755f 	rsbsvc	r7, r0, pc, asr r5
 114:	6c5f7265 	lfmvs	f7, 2, [pc], {101}	; 0x65
 118:	00746665 	rsbseq	r6, r4, r5, ror #12
 11c:	64646170 	strbtvs	r6, [r4], #-368	; 0xfffffe90
 120:	675f656c 	ldrbvs	r6, [pc, -ip, ror #10]
 124:	656d6f65 	strbvs	r6, [sp, #-3941]!	; 0xfffff09b
 128:	00797274 	rsbseq	r7, r9, r4, ror r2
 12c:	5f77656e 	svcpl	0x0077656e
 130:	61700078 	cmnvs	r0, r8, ror r0
 134:	656c6464 	strbvs	r6, [ip, #-1124]!	; 0xfffffb9c
 138:	61700031 	cmnvs	r0, r1, lsr r0
 13c:	656c6464 	strbvs	r6, [ip, #-1124]!	; 0xfffffb9c
 140:	326f0032 	rsbcc	r0, pc, #50	; 0x32
 144:	746f625f 	strbtvc	r6, [pc], #-607	; 14c <startup-0x1ffffeb4>
 148:	5f6d6f74 	svcpl	0x006d6f74
 14c:	7466656c 	strbtvc	r6, [r6], #-1388	; 0xfffffa94
 150:	696f7000 	stmdbvs	pc!, {ip, sp, lr}^	; <UNPREDICTABLE>
 154:	6c5f746e 	cfldrdvs	mvd7, [pc], {110}	; 0x6e
 158:	00747369 	rsbseq	r7, r4, r9, ror #6
 15c:	555c3a43 	ldrbpl	r3, [ip, #-2627]	; 0xfffff5bd
 160:	73726573 	cmnvc	r2, #482344960	; 0x1cc00000
 164:	445c4a5c 	ldrbmi	r4, [ip], #-2652	; 0xfffff5a4
 168:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 16c:	73746e65 	cmnvc	r4, #1616	; 0x650
 170:	636f445c 	cmnvs	pc, #92, 8	; 0x5c000000
 174:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 178:	695c7374 	ldmdbvs	ip, {r2, r4, r5, r6, r8, r9, ip, sp, lr}^
 17c:	74727579 	ldrbtvc	r7, [r2], #-1401	; 0xfffffa87
 180:	6c007974 			; <UNDEFINED> instruction: 0x6c007974
 184:	00656e69 	rsbeq	r6, r5, r9, ror #28
 188:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
 18c:	69730078 	ldmdbvs	r3!, {r3, r4, r5, r6}^
 190:	0079657a 	rsbseq	r6, r9, sl, ror r5
 194:	70617267 	rsbvc	r7, r1, r7, ror #4
 198:	5f636968 	svcpl	0x00636968
 19c:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 1a0:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
 1a4:	4e470074 	mcrmi	0, 2, r0, cr7, cr4, {3}
 1a8:	39432055 	stmdbcc	r3, {r0, r2, r4, r6, sp}^
 1ac:	2e392039 	mrccs	0, 1, r2, cr9, cr9, {1}
 1b0:	20312e32 	eorscs	r2, r1, r2, lsr lr
 1b4:	39313032 	ldmdbcc	r1!, {r1, r4, r5, ip, sp}
 1b8:	35323031 	ldrcc	r3, [r2, #-49]!	; 0xffffffcf
 1bc:	65722820 	ldrbvs	r2, [r2, #-2080]!	; 0xfffff7e0
 1c0:	7361656c 	cmnvc	r1, #108, 10	; 0x1b000000
 1c4:	5b202965 	blpl	80a760 <startup-0x1f7f58a0>
 1c8:	2f4d5241 	svccs	0x004d5241
 1cc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 1d0:	72622d39 	rsbvc	r2, r2, #3648	; 0xe40
 1d4:	68636e61 	stmdavs	r3!, {r0, r5, r6, r9, sl, fp, sp, lr}^
 1d8:	76657220 	strbtvc	r7, [r5], -r0, lsr #4
 1dc:	6f697369 	svcvs	0x00697369
 1e0:	3732206e 	ldrcc	r2, [r2, -lr, rrx]!
 1e4:	39393537 	ldmdbcc	r9!, {r0, r1, r2, r4, r5, r8, sl, ip, sp}
 1e8:	6d2d205d 	stcvs	0, cr2, [sp, #-372]!	; 0xfffffe8c
 1ec:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
 1f0:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
 1f4:	616f6c66 	cmnvs	pc, r6, ror #24
 1f8:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
 1fc:	6f733d69 	svcvs	0x00733d69
 200:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
 204:	6372616d 	cmnvs	r2, #1073741851	; 0x4000001b
 208:	72613d68 	rsbvc	r3, r1, #104, 26	; 0x1a00
 20c:	2d36766d 	ldccs	6, cr7, [r6, #-436]!	; 0xfffffe4c
 210:	672d206d 	strvs	r2, [sp, -sp, rrx]!
 214:	304f2d20 	subcc	r2, pc, r0, lsr #26
 218:	74732d20 	ldrbtvc	r2, [r3], #-3360	; 0xfffff2e0
 21c:	39633d64 	stmdbcc	r3!, {r2, r5, r6, r8, sl, fp, ip, sp}^
 220:	72630039 	rsbvc	r0, r3, #57	; 0x39
 224:	5f73736f 	svcpl	0x0073736f
 228:	6e696f70 	mcrvs	15, 3, r6, cr9, cr0, {3}
 22c:	70007374 	andvc	r7, r0, r4, ror r3
 230:	6c657869 	stclvs	8, cr7, [r5], #-420	; 0xfffffe5c
 234:	61620073 	smcvs	8195	; 0x2003
 238:	53006c6c 	movwpl	r6, #3180	; 0xc6c
 23c:	45524f43 	ldrbmi	r4, [r2, #-3907]	; 0xfffff0bd
 240:	43530031 	cmpmi	r3, #49	; 0x31
 244:	3245524f 	subcc	r5, r5, #-268435452	; 0xf0000004
 248:	414f4700 	cmpmi	pc, r0, lsl #14
 24c:	326f004c 	rsbcc	r0, pc, #76	; 0x4c
 250:	7070755f 	rsbsvc	r7, r0, pc, asr r5
 254:	725f7265 	subsvc	r7, pc, #1342177286	; 0x50000006
 258:	74686769 	strbtvc	r6, [r8], #-1897	; 0xfffff897
 25c:	656c6300 	strbvs	r6, [ip, #-768]!	; 0xfffffd00
 260:	6f5f7261 	svcvs	0x005f7261
 264:	63656a62 	cmnvs	r5, #401408	; 0x62000
 268:	4f740074 	svcmi	0x00740074
 26c:	6f006a62 	svcvs	0x00006a62
 270:	6f625f31 	svcvs	0x00625f31
 274:	6d6f7474 	cfstrdvs	mvd7, [pc, #-464]!	; ac <startup-0x1fffff54>
 278:	6769725f 			; <UNDEFINED> instruction: 0x6769725f
 27c:	6e007468 	cdpvs	4, 0, cr7, cr0, cr8, {3}
 280:	6f706d75 	svcvs	0x00706d75
 284:	73746e69 	cmnvc	r4, #1680	; 0x690
 288:	77656e00 	strbvc	r6, [r5, -r0, lsl #28]!
 28c:	6d00795f 	vstrvs.16	s14, [r0, #-190]	; 0xffffff42	; <UNPREDICTABLE>
 290:	5f65766f 	svcpl	0x0065766f
 294:	6c6c6162 	stfvse	f6, [ip], #-392	; 0xfffffe78
 298:	656a626f 	strbvs	r6, [sl, #-623]!	; 0xfffffd91
 29c:	73007463 	movwvc	r7, #1123	; 0x463
 2a0:	64656570 	strbtvs	r6, [r5], #-1392	; 0xfffffa90
 2a4:	70730078 	rsbsvc	r0, r3, r8, ror r0
 2a8:	79646565 	stmdbvc	r4!, {r0, r2, r5, r6, r8, sl, sp, lr}^
 2ac:	424f5000 	submi	r5, pc, #0
 2b0:	5443454a 	strbpl	r4, [r3], #-1354	; 0xfffffab6
 2b4:	74657300 	strbtvc	r7, [r5], #-768	; 0xfffffd00
 2b8:	6a626f5f 	bvs	189c03c <startup-0x1e763fc4>
 2bc:	5f746365 	svcpl	0x00746365
 2c0:	65657073 	strbvs	r7, [r5, #-115]!	; 0xffffff8d
 2c4:	54430064 	strbpl	r0, [r3], #-100	; 0xffffff9c
 2c8:	73004c52 	movwvc	r4, #3154	; 0xc52
 2cc:	70757465 	rsbsvc	r7, r5, r5, ror #8
 2d0:	5f736d5f 	svcpl	0x00736d5f
 2d4:	616c6564 	cmnvs	ip, r4, ror #10
 2d8:	4c430079 	mcrrmi	0, 7, r0, r3, cr9
 2dc:	554f534b 	strbpl	r5, [pc, #-843]	; ffffff99 <l+0xdfffed11>
 2e0:	00454352 	subeq	r4, r5, r2, asr r3
 2e4:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
 2e8:	49540042 	ldmdbmi	r4, {r1, r6}^
 2ec:	4e494b43 	vmlsmi.f64	d20, d9, d3
 2f0:	4f4c0054 	svcmi	0x004c0054
 2f4:	43004441 	movwmi	r4, #1089	; 0x441
 2f8:	73552f3a 	cmpvc	r5, #58, 30	; 0xe8
 2fc:	2f737265 	svccs	0x00737265
 300:	6f442f4a 	svcvs	0x00442f4a
 304:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 308:	2f73746e 	svccs	0x0073746e
 30c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 310:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 314:	79692f73 	stmdbvc	r9!, {r0, r1, r4, r5, r6, r8, r9, sl, fp, sp}^
 318:	74747275 	ldrbtvc	r7, [r4], #-629	; 0xfffffd8b
 31c:	65442f79 	strbvs	r2, [r4, #-3961]	; 0xfffff087
 320:	2e79616c 	rpwcsez	f6, f1, #4.0
 324:	41430063 	cmpmi	r3, r3, rrx
 328:	5f42494c 	svcpl	0x0042494c
 32c:	4e4b4e55 	mcrmi	14, 2, r4, cr11, cr5, {2}
 330:	004e574f 	subeq	r5, lr, pc, asr #14
 334:	616c6564 	cmnvs	ip, r4, ror #10
 338:	35325f79 	ldrcc	r5, [r2, #-3961]!	; 0xfffff087
 33c:	00736e30 	rsbseq	r6, r3, r0, lsr lr
 340:	54535953 	ldrbpl	r5, [r3], #-2387	; 0xfffff6ad
 344:	004b4349 	subeq	r4, fp, r9, asr #6
 348:	616c6564 	cmnvs	ip, r4, ror #10
 34c:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 350:	006f7263 	rsbeq	r7, pc, r3, ror #4
 354:	616c6564 	cmnvs	ip, r4, ror #10
 358:	696d5f79 	stmdbvs	sp!, {r0, r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 35c:	00696c6c 	rsbeq	r6, r9, ip, ror #24
 360:	42414e45 	submi	r4, r1, #1104	; 0x450
 364:	4300454c 	movwmi	r4, #1356	; 0x54c
 368:	544e554f 	strbpl	r5, [lr], #-1359	; 0xfffffab1
 36c:	47414c46 	strbmi	r4, [r1, -r6, asr #24]
 370:	50534f00 	subspl	r4, r3, r0, lsl #30
 374:	52444545 	subpl	r4, r4, #289406976	; 0x11400000
 378:	63736100 	cmnvs	r3, #0, 2
 37c:	725f6969 	subsvc	r6, pc, #1720320	; 0x1a4000
 380:	5f646165 	svcpl	0x00646165
 384:	61746164 	cmnvs	r4, r4, ror #2
 388:	616c7000 	cmnvs	ip, r0
 38c:	31726579 	cmncc	r2, r9, ror r5
 390:	444f4d00 	strbmi	r4, [pc], #-3328	; 398 <startup-0x1ffffc68>
 394:	61005245 	tstvs	r0, r5, asr #4
 398:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 39c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 3a0:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
 3a4:	76726573 			; <UNDEFINED> instruction: 0x76726573
 3a8:	53006465 	movwpl	r6, #1125	; 0x465
 3ac:	00315243 	eorseq	r5, r1, r3, asr #4
 3b0:	52525342 	subspl	r5, r2, #134217729	; 0x8000001
 3b4:	6d756e00 	ldclvs	14, cr6, [r5, #-0]
 3b8:	73726562 	cmnvc	r2, #411041792	; 0x18800000
 3bc:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
 3c0:	00524550 	subseq	r4, r2, r0, asr r5
 3c4:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 3c8:	6f675f69 	svcvs	0x00675f69
 3cc:	79786f74 	ldmdbvc	r8!, {r2, r4, r5, r6, r8, r9, sl, fp, sp, lr}^
 3d0:	736e7500 	cmnvc	lr, #0, 10
 3d4:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 3d8:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 3dc:	61007261 	tstvs	r0, r1, ror #4
 3e0:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 3e4:	6165725f 	cmnvs	r5, pc, asr r2
 3e8:	74735f64 	ldrbtvc	r5, [r3], #-3940	; 0xfffff09c
 3ec:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
 3f0:	616c7000 	cmnvs	ip, r0
 3f4:	32726579 	rsbscc	r6, r2, #507510784	; 0x1e400000
 3f8:	52444f00 	subpl	r4, r4, #0, 30
 3fc:	48474948 	stmdami	r7, {r3, r6, r8, fp, lr}^
 400:	6f687300 	svcvs	0x00687300
 404:	75207472 	strvc	r7, [r0, #-1138]!	; 0xfffffb8e
 408:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
 40c:	2064656e 	rsbcs	r6, r4, lr, ror #10
 410:	00746e69 	rsbseq	r6, r4, r9, ror #28
 414:	4c524641 	mrrcmi	6, 4, r4, r2, cr1
 418:	49504700 	ldmdbmi	r0, {r8, r9, sl, lr}^
 41c:	7361004f 	cmnvc	r1, #79	; 0x4f
 420:	5f696963 	svcpl	0x00696963
 424:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 428:	6e6f635f 	mcrvs	3, 3, r6, cr15, cr15, {2}
 42c:	6c6f7274 	sfmvs	f7, 2, [pc], #-464	; 264 <startup-0x1ffffd9c>
 430:	0072656c 	rsbseq	r6, r2, ip, ror #10
 434:	69637361 	stmdbvs	r3!, {r0, r5, r6, r8, r9, ip, sp, lr}^
 438:	74635f69 	strbtvc	r5, [r3], #-3945	; 0xfffff097
 43c:	625f6c72 	subsvs	r6, pc, #29184	; 0x7200
 440:	735f7469 	cmpvc	pc, #1761607680	; 0x69000000
 444:	63007465 	movwvs	r7, #1125	; 0x465
 448:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 44c:	7369645f 	cmnvc	r9, #1593835520	; 0x5f000000
 450:	79616c70 	stmdbvc	r1!, {r4, r5, r6, sl, fp, sp, lr}^
 454:	63736100 	cmnvs	r3, #0, 2
 458:	775f6969 	ldrbvc	r6, [pc, -r9, ror #18]
 45c:	65746972 	ldrbvs	r6, [r4, #-2418]!	; 0xfffff68e
 460:	646d635f 	strbtvs	r6, [sp], #-863	; 0xfffffca1
 464:	52464100 	subpl	r4, r6, #0, 2
 468:	64610048 	strbtvs	r0, [r1], #-72	; 0xffffffb8
 46c:	73657264 	cmnvc	r5, #100, 4	; 0x40000006
 470:	73610073 	cmnvc	r1, #115	; 0x73
 474:	5f696963 	svcpl	0x00696963
 478:	74786574 	ldrbtvc	r6, [r8], #-1396	; 0xfffffa8c
 47c:	6e65675f 	mcrvs	7, 3, r6, cr5, cr15, {2}
 480:	74617265 	strbtvc	r7, [r1], #-613	; 0xfffffd9b
 484:	6100726f 	tstvs	r0, pc, ror #4
 488:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 48c:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 490:	645f6574 	ldrbvs	r6, [pc], #-1396	; 498 <startup-0x1ffffb68>
 494:	00617461 	rsbeq	r7, r1, r1, ror #8
 498:	44505550 	ldrbmi	r5, [r0], #-1360	; 0xfffffab0
 49c:	73610052 	cmnvc	r1, #82	; 0x52
 4a0:	5f696963 	svcpl	0x00696963
 4a4:	6c727463 	cfldrdvs	mvd7, [r2], #-396	; 0xfffffe74
 4a8:	7469625f 	strbtvc	r6, [r9], #-607	; 0xfffffda1
 4ac:	656c635f 	strbvs	r6, [ip, #-863]!	; 0xfffffca1
 4b0:	49007261 	stmdbmi	r0, {r0, r5, r6, r9, ip, sp, lr}
 4b4:	49485244 	stmdbmi	r8, {r2, r6, r9, ip, lr}^
 4b8:	4f004847 	svcmi	0x00004847
 4bc:	4f4c5244 	svcmi	0x004c5244
 4c0:	3a430057 	bcc	10c0624 <startup-0x1ef3f9dc>
 4c4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 4c8:	4a2f7372 	bmi	bdd298 <startup-0x1f422d68>
 4cc:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 4d0:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 4d4:	442f7374 	strtmi	r7, [pc], #-884	; 4dc <startup-0x1ffffb24>
 4d8:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 4dc:	73746e65 	cmnvc	r4, #1616	; 0x650
 4e0:	7579692f 	ldrbvc	r6, [r9, #-2351]!	; 0xfffff6d1
 4e4:	79747472 	ldmdbvc	r4!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 4e8:	6373412f 	cmnvs	r3, #-1073741813	; 0xc000000b
 4ec:	69446969 	stmdbvs	r4, {r0, r3, r5, r6, r8, fp, sp, lr}^
 4f0:	616c7073 	smcvs	50947	; 0xc703
 4f4:	69724479 	ldmdbvs	r2!, {r0, r3, r4, r5, r6, sl, lr}^
 4f8:	2e726576 	mrccs	5, 3, r6, cr2, cr6, {3}
 4fc:	73610063 	cmnvc	r1, #99	; 0x63
 500:	5f696963 	svcpl	0x00696963
 504:	74697277 	strbtvc	r7, [r9], #-631	; 0xfffffd89
 508:	6f635f65 	svcvs	0x00635f65
 50c:	6f72746e 	svcvs	0x0072746e
 510:	72656c6c 	rsbvc	r6, r5, #108, 24	; 0x6c00
 514:	52444900 	subpl	r4, r4, #0, 18
 518:	00574f4c 	subseq	r4, r7, ip, asr #30
 51c:	65736572 	ldrbvs	r6, [r3, #-1394]!	; 0xfffffa8e
 520:	64657672 	strbtvs	r7, [r5], #-1650	; 0xfffff98e
 524:	43530032 	cmpmi	r3, #50	; 0x32
 528:	61003252 	tstvs	r0, r2, asr r2
 52c:	69696373 	stmdbvs	r9!, {r0, r1, r4, r5, r6, r8, r9, sp, lr}^
 530:	6972775f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, r8, r9, sl, ip, sp, lr}^
 534:	635f6574 	cmpvs	pc, #116, 10	; 0x1d000000
 538:	00726168 	rsbseq	r6, r2, r8, ror #2
 53c:	524b434c 	subpl	r4, fp, #76, 6	; 0x30000001
 540:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
 544:	646b0062 	strbtvs	r0, [fp], #-98	; 0xffffff9e
 548:	74634162 	strbtvc	r4, [r3], #-354	; 0xfffffe9e
 54c:	74617669 	strbtvc	r7, [r1], #-1641	; 0xfffff997
 550:	656b0065 	strbvs	r0, [fp, #-101]!	; 0xffffff9b
 554:	6b007379 	blvs	1d340 <startup-0x1ffe2cc0>
 558:	65476462 	strbvs	r6, [r7, #-1122]	; 0xfffffb9e
 55c:	6c6f4374 	stclvs	3, cr4, [pc], #-464	; 394 <startup-0x1ffffc6c>
 560:	2f3a4300 	svccs	0x003a4300
 564:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 568:	2f4a2f73 	svccs	0x004a2f73
 56c:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 570:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 574:	6f442f73 	svcvs	0x00442f73
 578:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 57c:	2f73746e 	svccs	0x0073746e
 580:	72757969 	rsbsvc	r7, r5, #1720320	; 0x1a4000
 584:	2f797474 	svccs	0x00797474
 588:	6279654b 	rsbsvs	r6, r9, #314572800	; 0x12c00000
 58c:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
 590:	76697244 	strbtvc	r7, [r9], -r4, asr #4
 594:	632e7265 			; <UNDEFINED> instruction: 0x632e7265
 598:	2f3a4300 	svccs	0x003a4300
 59c:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
 5a0:	2f4a2f73 	svccs	0x004a2f73
 5a4:	75636f44 	strbvc	r6, [r3, #-3908]!	; 0xfffff0bc
 5a8:	746e656d 	strbtvc	r6, [lr], #-1389	; 0xfffffa93
 5ac:	6f442f73 	svcvs	0x00442f73
 5b0:	656d7563 	strbvs	r7, [sp, #-1379]!	; 0xfffffa9d
 5b4:	2f73746e 	svccs	0x0073746e
 5b8:	72757969 	rsbsvc	r7, r5, #1720320	; 0x1a4000
 5bc:	2f797474 	svccs	0x00797474
 5c0:	70617247 	rsbvc	r7, r1, r7, asr #4
 5c4:	44636968 	strbtmi	r6, [r3], #-2408	; 0xfffff698
 5c8:	65766972 	ldrbvs	r6, [r6, #-2418]!	; 0xfffff68e
 5cc:	00632e72 	rsbeq	r2, r3, r2, ror lr
 5d0:	70617267 	rsbvc	r7, r1, r7, ror #4
 5d4:	5f636968 	svcpl	0x00636968
 5d8:	61656c63 	cmnvs	r5, r3, ror #24
 5dc:	63735f72 	cmnvs	r3, #456	; 0x1c8
 5e0:	6e656572 	mcrvs	5, 3, r6, cr5, cr2, {3}
 5e4:	61726700 	cmnvs	r2, r0, lsl #14
 5e8:	63696870 	cmnvs	r9, #112, 16	; 0x700000
 5ec:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
 5f0:	696c6174 	stmdbvs	ip!, {r2, r4, r5, r6, r8, sp, lr}^
 5f4:	7200657a 	andvc	r6, r0, #511705088	; 0x1e800000
 5f8:	65646e65 	strbvs	r6, [r4, #-3685]!	; 0xfffff19b
 5fc:	72665f72 	rsbvc	r5, r6, #456	; 0x1c8
 600:	00656d61 	rsbeq	r6, r5, r1, ror #26
 604:	6e617274 	mcrvs	2, 3, r7, cr1, cr4, {3}
 608:	74616c73 	strbtvc	r6, [r1], #-3187	; 0xfffff38d
 60c:	656b5f65 	strbvs	r5, [fp, #-3941]!	; 0xfffff09b
 610:	45440079 	strbmi	r0, [r4, #-121]	; 0xffffff87
 614:	5f59414c 	svcpl	0x0059414c
 618:	4e554f43 	cdpmi	15, 5, cr4, cr5, cr3, {2}
 61c:	654b0054 	strbvs	r0, [fp, #-84]	; 0xffffffac
 620:	616f6279 	smcvs	63017	; 0xf629
 624:	00326472 	eorseq	r6, r2, r2, ror r4
 628:	6279654b 	rsbsvs	r6, r9, #314572800	; 0x12c00000
 62c:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
 630:	696e6900 	stmdbvs	lr!, {r8, fp, sp, lr}^
 634:	70615f74 	rsbvc	r5, r1, r4, ror pc
 638:	3a430070 	bcc	10c0800 <startup-0x1ef3f800>
 63c:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
 640:	4a2f7372 	bmi	bdd410 <startup-0x1f422bf0>
 644:	636f442f 	cmnvs	pc, #788529152	; 0x2f000000
 648:	6e656d75 	mcrvs	13, 3, r6, cr5, cr5, {3}
 64c:	442f7374 	strtmi	r7, [pc], #-884	; 654 <startup-0x1ffff9ac>
 650:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
 654:	73746e65 	cmnvc	r4, #1616	; 0x650
 658:	7579692f 	ldrbvc	r6, [r9, #-2351]!	; 0xfffff6d1
 65c:	79747472 	ldmdbvc	r4!, {r1, r4, r5, r6, sl, ip, sp, lr}^
 660:	6174732f 	cmnvs	r4, pc, lsr #6
 664:	70757472 	rsbsvc	r7, r5, r2, ror r4
 668:	7300632e 	movwvc	r6, #814	; 0x32e
 66c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
 670:	69007075 	stmdbvs	r0, {r0, r2, r4, r5, r6, ip, sp, lr}
 674:	5f74696e 	svcpl	0x0074696e
 678:	6279656b 	rsbsvs	r6, r9, #448790528	; 0x1ac00000
 67c:	6472616f 	ldrbtvs	r6, [r2], #-367	; 0xfffffe91
 680:	64707500 	ldrbtvs	r7, [r0], #-1280	; 0xfffffb00
 684:	5f657461 	svcpl	0x00657461
 688:	64646170 	strbtvs	r6, [r4], #-368	; 0xfffffe90
 68c:	6d00656c 	cfstr32vs	mvfx6, [r0, #-432]	; 0xfffffe50
 690:	006e6961 	rsbeq	r6, lr, r1, ror #18
 694:	5f746573 	svcpl	0x00746573
 698:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
 69c:	79656b5f 	stmdbvc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, fp, sp, lr}^
 6a0:	72616f62 	rsbvc	r6, r1, #392	; 0x188
 6a4:	4b007364 	blmi	1d43c <startup-0x1ffe2bc4>
 6a8:	6f627965 	svcvs	0x00627965
 6ac:	31647261 	cmncc	r4, r1, ror #4
 6b0:	766f6d00 	strbtvc	r6, [pc], -r0, lsl #26
 6b4:	61705f65 	cmnvs	r0, r5, ror #30
 6b8:	656c6464 	strbvs	r6, [ip, #-1124]!	; 0xfffffb9c
 6bc:	6f630073 	svcvs	0x00630073
 6c0:	73696c6c 	cmnvc	r9, #108, 24	; 0x6c00
 6c4:	5f6e6f69 	svcpl	0x006e6f69
 6c8:	63656863 	cmnvs	r5, #6488064	; 0x630000
 6cc:	Address 0x000006cc is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	6f542055 	svcvs	0x00542055
   c:	20736c6f 	rsbscs	r6, r3, pc, ror #24
  10:	20726f66 	rsbscs	r6, r2, r6, ror #30
  14:	206d7241 	rsbcs	r7, sp, r1, asr #4
  18:	65626d45 	strbvs	r6, [r2, #-3397]!	; 0xfffff2bb
  1c:	64656464 	strbtvs	r6, [r5], #-1124	; 0xfffffb9c
  20:	6f725020 	svcvs	0x00725020
  24:	73736563 	cmnvc	r3, #415236096	; 0x18c00000
  28:	2073726f 	rsbscs	r7, r3, pc, ror #4
  2c:	30322d39 	eorscc	r2, r2, r9, lsr sp
  30:	712d3931 			; <UNDEFINED> instruction: 0x712d3931
  34:	616d2d34 	cmnvs	sp, r4, lsr sp
  38:	29726f6a 	ldmdbcs	r2!, {r1, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
  3c:	322e3920 	eorcc	r3, lr, #32, 18	; 0x80000
  40:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  44:	31393130 	teqcc	r9, r0, lsr r1
  48:	20353230 	eorscs	r3, r5, r0, lsr r2
  4c:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  50:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  54:	415b2029 	cmpmi	fp, r9, lsr #32
  58:	612f4d52 			; <UNDEFINED> instruction: 0x612f4d52
  5c:	392d6d72 	pushcc	{r1, r4, r5, r6, r8, sl, fp, sp, lr}
  60:	6172622d 	cmnvs	r2, sp, lsr #4
  64:	2068636e 	rsbcs	r6, r8, lr, ror #6
  68:	69766572 	ldmdbvs	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
  6c:	6e6f6973 			; <UNDEFINED> instruction: 0x6e6f6973
  70:	37373220 	ldrcc	r3, [r7, -r0, lsr #4]!
  74:	5d393935 			; <UNDEFINED> instruction: 0x5d393935
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002b41 	andeq	r2, r0, r1, asr #22
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000021 	andeq	r0, r0, r1, lsr #32
  10:	2d533605 	ldclcs	6, cr3, [r3, #-20]	; 0xffffffec
  14:	0c06004d 	stceq	0, cr0, [r6], {77}	; 0x4d
  18:	01094d07 	tsteq	r9, r7, lsl #26
  1c:	01140412 	tsteq	r4, r2, lsl r4
  20:	03170115 	tsteq	r7, #1073741829	; 0x40000005
  24:	01190118 	tsteq	r9, r8, lsl r1
  28:	061e011a 			; <UNDEFINED> instruction: 0x061e011a

Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	0000009c 	muleq	r0, ip, r0
  20:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  24:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  28:	400e4101 	andmi	r4, lr, r1, lsl #2
  2c:	00070d41 	andeq	r0, r7, r1, asr #26
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	200000ac 	andcs	r0, r0, ip, lsr #1
  3c:	00000082 	andeq	r0, r0, r2, lsl #1
  40:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  44:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  48:	400e4101 	andmi	r4, lr, r1, lsl #2
  4c:	00070d41 	andeq	r0, r7, r1, asr #26
  50:	0000001c 	andeq	r0, r0, ip, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	2000012e 	andcs	r0, r0, lr, lsr #2
  5c:	00000078 	andeq	r0, r0, r8, ror r0
  60:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  64:	41018e02 	tstmi	r1, r2, lsl #28
  68:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
  6c:	00000007 	andeq	r0, r0, r7
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	200001a6 	andcs	r0, r0, r6, lsr #3
  7c:	00000024 	andeq	r0, r0, r4, lsr #32
  80:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  84:	41018e02 	tstmi	r1, r2, lsl #28
  88:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
  8c:	00000007 	andeq	r0, r0, r7
  90:	0000001c 	andeq	r0, r0, ip, lsl r0
  94:	00000000 	andeq	r0, r0, r0
  98:	200001ca 	andcs	r0, r0, sl, asr #3
  9c:	000000b6 	strheq	r0, [r0], -r6
  a0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  a4:	41018e02 	tstmi	r1, r2, lsl #28
  a8:	0d41200e 	stcleq	0, cr2, [r1, #-56]	; 0xffffffc8
  ac:	00000007 	andeq	r0, r0, r7
  b0:	0000001c 	andeq	r0, r0, ip, lsl r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	20000280 	andcs	r0, r0, r0, lsl #5
  bc:	00000056 	andeq	r0, r0, r6, asr r0
  c0:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
  c4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
  c8:	200e4101 	andcs	r4, lr, r1, lsl #2
  cc:	00070d41 	andeq	r0, r7, r1, asr #26
  d0:	00000020 	andeq	r0, r0, r0, lsr #32
  d4:	00000000 	andeq	r0, r0, r0
  d8:	200002d6 	ldrdcs	r0, [r0], -r6
  dc:	000001b4 			; <UNDEFINED> instruction: 0x000001b4
  e0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
  e4:	87038504 	strhi	r8, [r3, -r4, lsl #10]
  e8:	41018e02 	tstmi	r1, r2, lsl #28
  ec:	0d41380e 	stcleq	8, cr3, [r1, #-56]	; 0xffffffc8
  f0:	00000007 	andeq	r0, r0, r7
  f4:	0000000c 	andeq	r0, r0, ip
  f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  fc:	7c020001 	stcvc	0, cr0, [r2], {1}
 100:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 104:	00000018 	andeq	r0, r0, r8, lsl r0
 108:	000000f4 	strdeq	r0, [r0], -r4
 10c:	2000048c 	andcs	r0, r0, ip, lsl #9
 110:	00000048 	andeq	r0, r0, r8, asr #32
 114:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 118:	41018e02 	tstmi	r1, r2, lsl #28
 11c:	0000070d 	andeq	r0, r0, sp, lsl #14
 120:	0000001c 	andeq	r0, r0, ip, lsl r0
 124:	000000f4 	strdeq	r0, [r0], -r4
 128:	200004d4 	ldrdcs	r0, [r0], -r4
 12c:	00000036 	andeq	r0, r0, r6, lsr r0
 130:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 134:	41018e02 	tstmi	r1, r2, lsl #28
 138:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 13c:	00000007 	andeq	r0, r0, r7
 140:	0000001c 	andeq	r0, r0, ip, lsl r0
 144:	000000f4 	strdeq	r0, [r0], -r4
 148:	2000050a 	andcs	r0, r0, sl, lsl #10
 14c:	00000030 	andeq	r0, r0, r0, lsr r0
 150:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 154:	41018e02 	tstmi	r1, r2, lsl #28
 158:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 15c:	00000007 	andeq	r0, r0, r7
 160:	00000018 	andeq	r0, r0, r8, lsl r0
 164:	000000f4 	strdeq	r0, [r0], -r4
 168:	2000053a 	andcs	r0, r0, sl, lsr r5
 16c:	0000003e 	andeq	r0, r0, lr, lsr r0
 170:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 174:	41018e02 	tstmi	r1, r2, lsl #28
 178:	0000070d 	andeq	r0, r0, sp, lsl #14
 17c:	0000000c 	andeq	r0, r0, ip
 180:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 184:	7c020001 	stcvc	0, cr0, [r2], {1}
 188:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 18c:	00000020 	andeq	r0, r0, r0, lsr #32
 190:	0000017c 	andeq	r0, r0, ip, ror r1
 194:	20000578 	andcs	r0, r0, r8, ror r5
 198:	000000c0 	andeq	r0, r0, r0, asr #1
 19c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
 1a0:	86048505 	strhi	r8, [r4], -r5, lsl #10
 1a4:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 1a8:	480e4101 	stmdami	lr, {r0, r8, lr}
 1ac:	00070d41 	andeq	r0, r7, r1, asr #26
 1b0:	00000018 	andeq	r0, r0, r8, lsl r0
 1b4:	0000017c 	andeq	r0, r0, ip, ror r1
 1b8:	20000638 	andcs	r0, r0, r8, lsr r6
 1bc:	0000003e 	andeq	r0, r0, lr, lsr r0
 1c0:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1c4:	41018e02 	tstmi	r1, r2, lsl #28
 1c8:	0000070d 	andeq	r0, r0, sp, lsl #14
 1cc:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d0:	0000017c 	andeq	r0, r0, ip, ror r1
 1d4:	20000676 	andcs	r0, r0, r6, ror r6
 1d8:	0000002a 	andeq	r0, r0, sl, lsr #32
 1dc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 1e0:	41018e02 	tstmi	r1, r2, lsl #28
 1e4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 1e8:	00000007 	andeq	r0, r0, r7
 1ec:	0000001c 	andeq	r0, r0, ip, lsl r0
 1f0:	0000017c 	andeq	r0, r0, ip, ror r1
 1f4:	200006a0 	andcs	r0, r0, r0, lsr #13
 1f8:	0000002a 	andeq	r0, r0, sl, lsr #32
 1fc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 200:	41018e02 	tstmi	r1, r2, lsl #28
 204:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 208:	00000007 	andeq	r0, r0, r7
 20c:	0000001c 	andeq	r0, r0, ip, lsl r0
 210:	0000017c 	andeq	r0, r0, ip, ror r1
 214:	200006ca 	andcs	r0, r0, sl, asr #13
 218:	00000046 	andeq	r0, r0, r6, asr #32
 21c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 220:	41018e02 	tstmi	r1, r2, lsl #28
 224:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 228:	00000007 	andeq	r0, r0, r7
 22c:	0000001c 	andeq	r0, r0, ip, lsl r0
 230:	0000017c 	andeq	r0, r0, ip, ror r1
 234:	20000710 	andcs	r0, r0, r0, lsl r7
 238:	0000003c 	andeq	r0, r0, ip, lsr r0
 23c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 240:	41018e02 	tstmi	r1, r2, lsl #28
 244:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 248:	00000007 	andeq	r0, r0, r7
 24c:	0000001c 	andeq	r0, r0, ip, lsl r0
 250:	0000017c 	andeq	r0, r0, ip, ror r1
 254:	2000074c 	andcs	r0, r0, ip, asr #14
 258:	00000040 	andeq	r0, r0, r0, asr #32
 25c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 260:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 264:	180e4101 	stmdane	lr, {r0, r8, lr}
 268:	00070d41 	andeq	r0, r7, r1, asr #26
 26c:	0000001c 	andeq	r0, r0, ip, lsl r0
 270:	0000017c 	andeq	r0, r0, ip, ror r1
 274:	2000078c 	andcs	r0, r0, ip, lsl #15
 278:	00000040 	andeq	r0, r0, r0, asr #32
 27c:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 280:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 284:	180e4101 	stmdane	lr, {r0, r8, lr}
 288:	00070d41 	andeq	r0, r7, r1, asr #26
 28c:	0000001c 	andeq	r0, r0, ip, lsl r0
 290:	0000017c 	andeq	r0, r0, ip, ror r1
 294:	200007cc 	andcs	r0, r0, ip, asr #15
 298:	00000038 	andeq	r0, r0, r8, lsr r0
 29c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2a0:	41018e02 	tstmi	r1, r2, lsl #28
 2a4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 2a8:	00000007 	andeq	r0, r0, r7
 2ac:	0000001c 	andeq	r0, r0, ip, lsl r0
 2b0:	0000017c 	andeq	r0, r0, ip, ror r1
 2b4:	20000804 	andcs	r0, r0, r4, lsl #16
 2b8:	00000048 	andeq	r0, r0, r8, asr #32
 2bc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2c0:	41018e02 	tstmi	r1, r2, lsl #28
 2c4:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 2c8:	00000007 	andeq	r0, r0, r7
 2cc:	00000018 	andeq	r0, r0, r8, lsl r0
 2d0:	0000017c 	andeq	r0, r0, ip, ror r1
 2d4:	2000084c 	andcs	r0, r0, ip, asr #16
 2d8:	0000002e 	andeq	r0, r0, lr, lsr #32
 2dc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2e0:	41018e02 	tstmi	r1, r2, lsl #28
 2e4:	0000070d 	andeq	r0, r0, sp, lsl #14
 2e8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ec:	0000017c 	andeq	r0, r0, ip, ror r1
 2f0:	2000087a 	andcs	r0, r0, sl, ror r8
 2f4:	0000003c 	andeq	r0, r0, ip, lsr r0
 2f8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 2fc:	41018e02 	tstmi	r1, r2, lsl #28
 300:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 304:	00000007 	andeq	r0, r0, r7
 308:	0000001c 	andeq	r0, r0, ip, lsl r0
 30c:	0000017c 	andeq	r0, r0, ip, ror r1
 310:	200008b6 			; <UNDEFINED> instruction: 0x200008b6
 314:	00000038 	andeq	r0, r0, r8, lsr r0
 318:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 31c:	41018e02 	tstmi	r1, r2, lsl #28
 320:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 324:	00000007 	andeq	r0, r0, r7
 328:	0000000c 	andeq	r0, r0, ip
 32c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 330:	7c020001 	stcvc	0, cr0, [r2], {1}
 334:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 338:	0000001c 	andeq	r0, r0, ip, lsl r0
 33c:	00000328 	andeq	r0, r0, r8, lsr #6
 340:	200008f0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 344:	00000078 	andeq	r0, r0, r8, ror r0
 348:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 34c:	41018e02 	tstmi	r1, r2, lsl #28
 350:	0d41180e 	stcleq	8, cr1, [r1, #-56]	; 0xffffffc8
 354:	00000007 	andeq	r0, r0, r7
 358:	0000001c 	andeq	r0, r0, ip, lsl r0
 35c:	00000328 	andeq	r0, r0, r8, lsr #6
 360:	20000968 	andcs	r0, r0, r8, ror #18
 364:	000000c0 	andeq	r0, r0, r0, asr #1
 368:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 36c:	41018e02 	tstmi	r1, r2, lsl #28
 370:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 374:	00000007 	andeq	r0, r0, r7
 378:	0000001c 	andeq	r0, r0, ip, lsl r0
 37c:	00000328 	andeq	r0, r0, r8, lsr #6
 380:	20000a28 	andcs	r0, r0, r8, lsr #20
 384:	00000080 	andeq	r0, r0, r0, lsl #1
 388:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 38c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 390:	300e4101 	andcc	r4, lr, r1, lsl #2
 394:	00070d41 	andeq	r0, r7, r1, asr #26
 398:	0000000c 	andeq	r0, r0, ip
 39c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3a0:	7c020001 	stcvc	0, cr0, [r2], {1}
 3a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3a8:	0000000c 	andeq	r0, r0, ip
 3ac:	00000398 	muleq	r0, r8, r3
 3b0:	20000aa8 	andcs	r0, r0, r8, lsr #21
 3b4:	00000006 	andeq	r0, r0, r6
 3b8:	0000000c 	andeq	r0, r0, ip
 3bc:	00000398 	muleq	r0, r8, r3
 3c0:	20000aae 	andcs	r0, r0, lr, lsr #21
 3c4:	00000006 	andeq	r0, r0, r6
 3c8:	0000000c 	andeq	r0, r0, ip
 3cc:	00000398 	muleq	r0, r8, r3
 3d0:	20000ab4 			; <UNDEFINED> instruction: 0x20000ab4
 3d4:	00000006 	andeq	r0, r0, r6
 3d8:	0000000c 	andeq	r0, r0, ip
 3dc:	00000398 	muleq	r0, r8, r3
 3e0:	20000aba 			; <UNDEFINED> instruction: 0x20000aba
 3e4:	00000006 	andeq	r0, r0, r6
 3e8:	0000000c 	andeq	r0, r0, ip
 3ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 3f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 3f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 3f8:	0000000c 	andeq	r0, r0, ip
 3fc:	000003e8 	andeq	r0, r0, r8, ror #7
 400:	20000000 	andcs	r0, r0, r0
 404:	0000000c 	andeq	r0, r0, ip
 408:	0000001c 	andeq	r0, r0, ip, lsl r0
 40c:	000003e8 	andeq	r0, r0, r8, ror #7
 410:	20000ac0 	andcs	r0, r0, r0, asr #21
 414:	00000040 	andeq	r0, r0, r0, asr #32
 418:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 41c:	41018e02 	tstmi	r1, r2, lsl #28
 420:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 424:	00000007 	andeq	r0, r0, r7
 428:	0000001c 	andeq	r0, r0, ip, lsl r0
 42c:	000003e8 	andeq	r0, r0, r8, ror #7
 430:	20000b00 	andcs	r0, r0, r0, lsl #22
 434:	00000028 	andeq	r0, r0, r8, lsr #32
 438:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 43c:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 440:	200e4101 	andcs	r4, lr, r1, lsl #2
 444:	00070d41 	andeq	r0, r7, r1, asr #26
 448:	00000018 	andeq	r0, r0, r8, lsl r0
 44c:	000003e8 	andeq	r0, r0, r8, ror #7
 450:	20000b28 	andcs	r0, r0, r8, lsr #22
 454:	00000030 	andeq	r0, r0, r0, lsr r0
 458:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 45c:	41018e02 	tstmi	r1, r2, lsl #28
 460:	0000070d 	andeq	r0, r0, sp, lsl #14
 464:	00000018 	andeq	r0, r0, r8, lsl r0
 468:	000003e8 	andeq	r0, r0, r8, ror #7
 46c:	20000b58 	andcs	r0, r0, r8, asr fp
 470:	000000e0 	andeq	r0, r0, r0, ror #1
 474:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 478:	41018e02 	tstmi	r1, r2, lsl #28
 47c:	0000070d 	andeq	r0, r0, sp, lsl #14
 480:	00000018 	andeq	r0, r0, r8, lsl r0
 484:	000003e8 	andeq	r0, r0, r8, ror #7
 488:	20000c38 	andcs	r0, r0, r8, lsr ip
 48c:	00000044 	andeq	r0, r0, r4, asr #32
 490:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 494:	41018e02 	tstmi	r1, r2, lsl #28
 498:	0000070d 	andeq	r0, r0, sp, lsl #14
 49c:	0000001c 	andeq	r0, r0, ip, lsl r0
 4a0:	000003e8 	andeq	r0, r0, r8, ror #7
 4a4:	20000c7c 	andcs	r0, r0, ip, ror ip
 4a8:	00000074 	andeq	r0, r0, r4, ror r0
 4ac:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4b0:	41018e02 	tstmi	r1, r2, lsl #28
 4b4:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
 4b8:	00000007 	andeq	r0, r0, r7
 4bc:	00000018 	andeq	r0, r0, r8, lsl r0
 4c0:	000003e8 	andeq	r0, r0, r8, ror #7
 4c4:	20000cf0 	strdcs	r0, [r0], -r0	; <UNPREDICTABLE>
 4c8:	00000048 	andeq	r0, r0, r8, asr #32
 4cc:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4d0:	41018e02 	tstmi	r1, r2, lsl #28
 4d4:	0000070d 	andeq	r0, r0, sp, lsl #14
 4d8:	00000018 	andeq	r0, r0, r8, lsl r0
 4dc:	000003e8 	andeq	r0, r0, r8, ror #7
 4e0:	20000d38 	andcs	r0, r0, r8, lsr sp
 4e4:	0000002c 	andeq	r0, r0, ip, lsr #32
 4e8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 4ec:	41018e02 	tstmi	r1, r2, lsl #28
 4f0:	0000070d 	andeq	r0, r0, sp, lsl #14
 4f4:	0000001c 	andeq	r0, r0, ip, lsl r0
 4f8:	000003e8 	andeq	r0, r0, r8, ror #7
 4fc:	20000d64 	andcs	r0, r0, r4, ror #26
 500:	00000090 	muleq	r0, r0, r0
 504:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
 508:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
 50c:	180e4101 	stmdane	lr, {r0, r8, lr}
 510:	00070d41 	andeq	r0, r7, r1, asr #26
 514:	0000000c 	andeq	r0, r0, ip
 518:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 51c:	7c020001 	stcvc	0, cr0, [r2], {1}
 520:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 524:	00000014 	andeq	r0, r0, r4, lsl r0
 528:	00000514 	andeq	r0, r0, r4, lsl r5
 52c:	20000df4 	strdcs	r0, [r0], -r4
 530:	00000012 	andeq	r0, r0, r2, lsl r0
 534:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
 538:	00018e02 	andeq	r8, r1, r2, lsl #28

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000ac0 	andcs	r0, r0, r0, asr #21
   4:	20000df4 	strdcs	r0, [r0], -r4
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
